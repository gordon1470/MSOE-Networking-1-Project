ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	diffManEncodedData,3200,4
  19              		.comm	diffManReceivedData,100,4
  20              		.comm	receivedDataIndex,4,4
  21              		.comm	receivedDataCount,4,4
  22              		.global	halfBitIndex
  23              		.bss
  24              		.align	2
  25              		.type	halfBitIndex, %object
  26              		.size	halfBitIndex, 4
  27              	halfBitIndex:
  28 0000 00000000 		.space	4
  29              		.global	currentDataPos
  30              		.align	2
  31              		.type	currentDataPos, %object
  32              		.size	currentDataPos, 4
  33              	currentDataPos:
  34 0004 00000000 		.space	4
  35              		.comm	lengthOfData,4,4
  36              		.comm	timerExpired,1,1
  37              		.comm	dataTransmissionComplete,1,1
  38              		.comm	powerOnEdge,1,1
  39              		.comm	networkState,1,1
  40              		.comm	receivedChar,1,1
  41              		.global	timerInterruptCount
  42              		.align	2
  43              		.type	timerInterruptCount, %object
  44              		.size	timerInterruptCount, 4
  45              	timerInterruptCount:
  46 0008 00000000 		.space	4
  47              		.section	.text.Idle_Collision_ISR,"ax",%progbits
  48              		.align	2
  49              		.global	Idle_Collision_ISR
  50              		.thumb
  51              		.thumb_func
  52              		.type	Idle_Collision_ISR, %function
  53              	Idle_Collision_ISR:
  54              	.LFB63:
  55              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** This file performs a transmit. No collision is detected. 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 2


   3:.\main.c      **** *******************************************************************************/
   4:.\main.c      **** #define INDEX_OF_MSB 6
   5:.\main.c      **** #define HIGH 1
   6:.\main.c      **** #define EIGHT_BITS 8
   7:.\main.c      **** #define START_BIT 2
   8:.\main.c      **** #define ASCII_CHAR_MASK 0x7F
   9:.\main.c      **** 
  10:.\main.c      **** #include <device.h>
  11:.\main.c      **** #include <stdbool.h>
  12:.\main.c      **** #include <stdlib.h> //For random number generator
  13:.\main.c      **** #include <time.h>
  14:.\main.c      **** #include "stdio.h"
  15:.\main.c      **** 
  16:.\main.c      **** 
  17:.\main.c      **** int getRandomNumber();
  18:.\main.c      **** void initDiffManEncodedArray();
  19:.\main.c      **** void stringToDiffMan(char*, uint8);
  20:.\main.c      **** void asciiToDiffMan(char);
  21:.\main.c      **** void transmitData();
  22:.\main.c      **** void setNetworkStateOnLEDs();
  23:.\main.c      **** void diffManToASCII();
  24:.\main.c      **** void printChar();
  25:.\main.c      **** 
  26:.\main.c      **** int diffManEncodedData[800]; //TODO examine array size
  27:.\main.c      **** uint8 diffManReceivedData[100];//TODO examine array size
  28:.\main.c      **** int receivedDataIndex, receivedDataCount;
  29:.\main.c      **** int halfBitIndex = 0, currentDataPos=0, lengthOfData;
  30:.\main.c      **** bool timerExpired, dataTransmissionComplete, powerOnEdge;
  31:.\main.c      **** enum state {idle, busy, collision} networkState; 
  32:.\main.c      **** 
  33:.\main.c      **** char receivedChar;//TODO remove the pointer
  34:.\main.c      **** 
  35:.\main.c      **** 
  36:.\main.c      **** int timerInterruptCount =0;//TODO remove
  37:.\main.c      **** 
  38:.\main.c      **** CY_ISR(Idle_Collision_ISR){ 
  56              		.loc 1 38 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
  39:.\main.c      ****     networkState = idle; 
  66              		.loc 1 39 0
  67 0004 074B     		ldr	r3, .L4
  68 0006 0022     		movs	r2, #0
  69 0008 1A70     		strb	r2, [r3]
  40:.\main.c      ****     if(Receive_Read() == HIGH){
  70              		.loc 1 40 0
  71 000a FFF7FEFF 		bl	Receive_Read
  72 000e 0346     		mov	r3, r0
  73 0010 012B     		cmp	r3, #1
  74 0012 03D1     		bne	.L2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 3


  41:.\main.c      ****         networkState = idle;  
  75              		.loc 1 41 0
  76 0014 034B     		ldr	r3, .L4
  77 0016 0022     		movs	r2, #0
  78 0018 1A70     		strb	r2, [r3]
  79 001a 02E0     		b	.L1
  80              	.L2:
  42:.\main.c      ****     }
  43:.\main.c      ****     else{
  44:.\main.c      ****         networkState = collision;
  81              		.loc 1 44 0
  82 001c 014B     		ldr	r3, .L4
  83 001e 0222     		movs	r2, #2
  84 0020 1A70     		strb	r2, [r3]
  85              	.L1:
  45:.\main.c      ****     }
  46:.\main.c      **** }
  86              		.loc 1 46 0
  87 0022 80BD     		pop	{r7, pc}
  88              	.L5:
  89              		.align	2
  90              	.L4:
  91 0024 00000000 		.word	networkState
  92              		.cfi_endproc
  93              	.LFE63:
  94              		.size	Idle_Collision_ISR, .-Idle_Collision_ISR
  95              		.section	.text.Edge_detect_ISR,"ax",%progbits
  96              		.align	2
  97              		.global	Edge_detect_ISR
  98              		.thumb
  99              		.thumb_func
 100              		.type	Edge_detect_ISR, %function
 101              	Edge_detect_ISR:
 102              	.LFB64:
  47:.\main.c      **** 
  48:.\main.c      **** CY_ISR(Edge_detect_ISR){
 103              		.loc 1 48 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107 0000 98B5     		push	{r3, r4, r7, lr}
 108              		.cfi_def_cfa_offset 16
 109              		.cfi_offset 3, -16
 110              		.cfi_offset 4, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
  49:.\main.c      ****      //Note: onedge detect, will trigger receive timer to start (see TopDesign)
  50:.\main.c      ****     Idle_Collision_Timer_Start();
 115              		.loc 1 50 0
 116 0004 FFF7FEFF 		bl	Idle_Collision_Timer_Start
  51:.\main.c      ****     
  52:.\main.c      ****     //Ignore power on egde 
  53:.\main.c      ****     if(!powerOnEdge){
 117              		.loc 1 53 0
 118 0008 0F4B     		ldr	r3, .L9
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 4


 119 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 120 000c 83F00103 		eor	r3, r3, #1
 121 0010 DBB2     		uxtb	r3, r3
 122 0012 002B     		cmp	r3, #0
 123 0014 0FD0     		beq	.L7
  54:.\main.c      ****         Receive_Timer_Start(); 
 124              		.loc 1 54 0
 125 0016 FFF7FEFF 		bl	Receive_Timer_Start
  55:.\main.c      ****         diffManReceivedData[receivedDataCount] = Receive_Read();
 126              		.loc 1 55 0
 127 001a 0C4B     		ldr	r3, .L9+4
 128 001c 1C68     		ldr	r4, [r3]
 129 001e FFF7FEFF 		bl	Receive_Read
 130 0022 0346     		mov	r3, r0
 131 0024 1A46     		mov	r2, r3
 132 0026 0A4B     		ldr	r3, .L9+8
 133 0028 1A55     		strb	r2, [r3, r4]
  56:.\main.c      ****         receivedDataCount++;    
 134              		.loc 1 56 0
 135 002a 084B     		ldr	r3, .L9+4
 136 002c 1B68     		ldr	r3, [r3]
 137 002e 0133     		adds	r3, r3, #1
 138 0030 064A     		ldr	r2, .L9+4
 139 0032 1360     		str	r3, [r2]
 140 0034 02E0     		b	.L8
 141              	.L7:
  57:.\main.c      ****     }
  58:.\main.c      ****     else{
  59:.\main.c      ****         powerOnEdge = false;
 142              		.loc 1 59 0
 143 0036 044B     		ldr	r3, .L9
 144 0038 0022     		movs	r2, #0
 145 003a 1A70     		strb	r2, [r3]
 146              	.L8:
  60:.\main.c      ****     }
  61:.\main.c      ****     networkState = busy;
 147              		.loc 1 61 0
 148 003c 054B     		ldr	r3, .L9+12
 149 003e 0122     		movs	r2, #1
 150 0040 1A70     		strb	r2, [r3]
  62:.\main.c      ****     Receive_ClearInterrupt();
 151              		.loc 1 62 0
 152 0042 FFF7FEFF 		bl	Receive_ClearInterrupt
  63:.\main.c      **** }
 153              		.loc 1 63 0
 154 0046 98BD     		pop	{r3, r4, r7, pc}
 155              	.L10:
 156              		.align	2
 157              	.L9:
 158 0048 00000000 		.word	powerOnEdge
 159 004c 00000000 		.word	receivedDataCount
 160 0050 00000000 		.word	diffManReceivedData
 161 0054 00000000 		.word	networkState
 162              		.cfi_endproc
 163              	.LFE64:
 164              		.size	Edge_detect_ISR, .-Edge_detect_ISR
 165              		.section	.text.TimerHandler,"ax",%progbits
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 5


 166              		.align	2
 167              		.global	TimerHandler
 168              		.thumb
 169              		.thumb_func
 170              		.type	TimerHandler, %function
 171              	TimerHandler:
 172              	.LFB65:
  64:.\main.c      **** 
  65:.\main.c      **** CY_ISR(TimerHandler){
 173              		.loc 1 65 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
  66:.\main.c      ****     Timer_Stop();
 183              		.loc 1 66 0
 184 0004 FFF7FEFF 		bl	Timer_Stop
  67:.\main.c      ****     timerExpired = true;
 185              		.loc 1 67 0
 186 0008 024B     		ldr	r3, .L12
 187 000a 0122     		movs	r2, #1
 188 000c 1A70     		strb	r2, [r3]
  68:.\main.c      ****     Timer_STATUS;   //clear the timer interrupt
 189              		.loc 1 68 0
 190 000e 024B     		ldr	r3, .L12+4
 191 0010 1B78     		ldrb	r3, [r3]
  69:.\main.c      **** }
 192              		.loc 1 69 0
 193 0012 80BD     		pop	{r7, pc}
 194              	.L13:
 195              		.align	2
 196              	.L12:
 197 0014 00000000 		.word	timerExpired
 198 0018 6B640040 		.word	1073767531
 199              		.cfi_endproc
 200              	.LFE65:
 201              		.size	TimerHandler, .-TimerHandler
 202              		.section	.text.ReceiveTimerISR,"ax",%progbits
 203              		.align	2
 204              		.global	ReceiveTimerISR
 205              		.thumb
 206              		.thumb_func
 207              		.type	ReceiveTimerISR, %function
 208              	ReceiveTimerISR:
 209              	.LFB66:
  70:.\main.c      **** 
  71:.\main.c      **** //TODO changing from reading to just repeting last data
  72:.\main.c      **** CY_ISR(ReceiveTimerISR){
 210              		.loc 1 72 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 6


 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              		.cfi_def_cfa_offset 4
 217              		.cfi_offset 7, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
  73:.\main.c      ****     diffManReceivedData[receivedDataCount] = diffManReceivedData[receivedDataCount-1];
 220              		.loc 1 73 0
 221 0004 094B     		ldr	r3, .L15
 222 0006 1B68     		ldr	r3, [r3]
 223 0008 084A     		ldr	r2, .L15
 224 000a 1268     		ldr	r2, [r2]
 225 000c 013A     		subs	r2, r2, #1
 226 000e 0849     		ldr	r1, .L15+4
 227 0010 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 228 0012 074A     		ldr	r2, .L15+4
 229 0014 D154     		strb	r1, [r2, r3]
  74:.\main.c      ****     //or  diffManReceivedData[receivedDataCount] = Receive_Read();
  75:.\main.c      ****     receivedDataCount++;
 230              		.loc 1 75 0
 231 0016 054B     		ldr	r3, .L15
 232 0018 1B68     		ldr	r3, [r3]
 233 001a 0133     		adds	r3, r3, #1
 234 001c 034A     		ldr	r2, .L15
 235 001e 1360     		str	r3, [r2]
  76:.\main.c      ****     //timerInterruptCount++;//TODO remove
  77:.\main.c      ****     Receive_Timer_STATUS;   //clear interrupt
 236              		.loc 1 77 0
 237 0020 044B     		ldr	r3, .L15+8
 238 0022 1B78     		ldrb	r3, [r3]
  78:.\main.c      **** }
 239              		.loc 1 78 0
 240 0024 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 0026 5DF8047B 		ldr	r7, [sp], #4
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 002a 7047     		bx	lr
 247              	.L16:
 248              		.align	2
 249              	.L15:
 250 002c 00000000 		.word	receivedDataCount
 251 0030 00000000 		.word	diffManReceivedData
 252 0034 6F640040 		.word	1073767535
 253              		.cfi_endproc
 254              	.LFE66:
 255              		.size	ReceiveTimerISR, .-ReceiveTimerISR
 256              		.section	.text.main,"ax",%progbits
 257              		.align	2
 258              		.global	main
 259              		.thumb
 260              		.thumb_func
 261              		.type	main, %function
 262              	main:
 263              	.LFB67:
  79:.\main.c      **** 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 7


  80:.\main.c      **** int main()
  81:.\main.c      **** {
 264              		.loc 1 81 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 112
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 9CB0     		sub	sp, sp, #112
 273              		.cfi_def_cfa_offset 120
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
  82:.\main.c      **** 
  83:.\main.c      ****     char rx;
  84:.\main.c      ****     char lineString[100];
  85:.\main.c      ****     uint8 stringPosition = 0;
 276              		.loc 1 85 0
 277 0006 0023     		movs	r3, #0
 278 0008 87F86F30 		strb	r3, [r7, #111]
  86:.\main.c      ****     timerExpired = false;
 279              		.loc 1 86 0
 280 000c 7A4B     		ldr	r3, .L38
 281 000e 0022     		movs	r2, #0
 282 0010 1A70     		strb	r2, [r3]
  87:.\main.c      ****     dataTransmissionComplete = false;
 283              		.loc 1 87 0
 284 0012 7A4B     		ldr	r3, .L38+4
 285 0014 0022     		movs	r2, #0
 286 0016 1A70     		strb	r2, [r3]
  88:.\main.c      ****     powerOnEdge = true; //When the system powers up, it creates a rising edge. 
 287              		.loc 1 88 0
 288 0018 794B     		ldr	r3, .L38+8
 289 001a 0122     		movs	r2, #1
 290 001c 1A70     		strb	r2, [r3]
  89:.\main.c      ****     //We want to ignore this edge on the rising edge.
  90:.\main.c      ****     
  91:.\main.c      ****     /*
  92:.\main.c      ****     Get value from system clock and
  93:.\main.c      ****     place in seconds variable.
  94:.\main.c      ****     */
  95:.\main.c      ****     time_t seconds; 
  96:.\main.c      ****     time(&seconds);
 291              		.loc 1 96 0
 292 001e 3B1D     		adds	r3, r7, #4
 293 0020 1846     		mov	r0, r3
 294 0022 FFF7FEFF 		bl	time
  97:.\main.c      ****     /*
  98:.\main.c      ****     Convert seconds to a unsigned
  99:.\main.c      ****     integer for seed for random number generator
 100:.\main.c      ****     */
 101:.\main.c      ****     srand((unsigned int) seconds);
 295              		.loc 1 101 0
 296 0026 7B68     		ldr	r3, [r7, #4]
 297 0028 1846     		mov	r0, r3
 298 002a FFF7FEFF 		bl	srand
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 8


 102:.\main.c      ****             
 103:.\main.c      ****     TX_pin_Write(1);  //set TX line to high to start
 299              		.loc 1 103 0
 300 002e 0120     		movs	r0, #1
 301 0030 FFF7FEFF 		bl	TX_pin_Write
 104:.\main.c      ****     
 105:.\main.c      ****     /* Enable Global Interrupts */
 106:.\main.c      ****     CyGlobalIntEnable;  
 302              		.loc 1 106 0
 303              	@ 106 ".\main.c" 1
 304 0034 62B6     		CPSIE   i
 305              	@ 0 "" 2
 107:.\main.c      ****     
 108:.\main.c      ****     Receive_ClearInterrupt();//TODO clearing first edge
 306              		.loc 1 108 0
 307              		.thumb
 308 0036 FFF7FEFF 		bl	Receive_ClearInterrupt
 109:.\main.c      ****     
 110:.\main.c      ****     LCD_Start();
 309              		.loc 1 110 0
 310 003a FFF7FEFF 		bl	LCD_Start
 111:.\main.c      ****     
 112:.\main.c      ****     //enable collision detection
 113:.\main.c      ****     Idle_Collision_IRQ_StartEx(Idle_Collision_ISR);
 311              		.loc 1 113 0
 312 003e 7148     		ldr	r0, .L38+12
 313 0040 FFF7FEFF 		bl	Idle_Collision_IRQ_StartEx
 114:.\main.c      ****     Edge_detect_IRQ_StartEx(Edge_detect_ISR);
 314              		.loc 1 114 0
 315 0044 7048     		ldr	r0, .L38+16
 316 0046 FFF7FEFF 		bl	Edge_detect_IRQ_StartEx
 115:.\main.c      ****     Idle_Collision_Timer_Start();
 317              		.loc 1 115 0
 318 004a FFF7FEFF 		bl	Idle_Collision_Timer_Start
 116:.\main.c      **** 
 117:.\main.c      ****     /* Start USBFS Operation with 3V operation */
 118:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
 319              		.loc 1 118 0
 320 004e 0020     		movs	r0, #0
 321 0050 0021     		movs	r1, #0
 322 0052 FFF7FEFF 		bl	USBUART_1_Start
 119:.\main.c      ****     
 120:.\main.c      ****     //start tranmission timer
 121:.\main.c      ****     TimerISR_StartEx(TimerHandler);
 323              		.loc 1 121 0
 324 0056 6D48     		ldr	r0, .L38+20
 325 0058 FFF7FEFF 		bl	TimerISR_StartEx
 122:.\main.c      **** 
 123:.\main.c      ****     ReceiveTimerIRQ_StartEx(ReceiveTimerISR); 
 326              		.loc 1 123 0
 327 005c 6C48     		ldr	r0, .L38+24
 328 005e FFF7FEFF 		bl	ReceiveTimerIRQ_StartEx
 124:.\main.c      ****     
 125:.\main.c      ****     receivedDataCount = 0;
 329              		.loc 1 125 0
 330 0062 6C4B     		ldr	r3, .L38+28
 331 0064 0022     		movs	r2, #0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 9


 332 0066 1A60     		str	r2, [r3]
 126:.\main.c      ****     receivedDataIndex = 0; 
 333              		.loc 1 126 0
 334 0068 6B4B     		ldr	r3, .L38+32
 335 006a 0022     		movs	r2, #0
 336 006c 1A60     		str	r2, [r3]
 127:.\main.c      ****     timerInterruptCount = 0;//TODO remove
 337              		.loc 1 127 0
 338 006e 6B4B     		ldr	r3, .L38+36
 339 0070 0022     		movs	r2, #0
 340 0072 1A60     		str	r2, [r3]
 341              	.L35:
 128:.\main.c      ****    
 129:.\main.c      ****     
 130:.\main.c      ****     /* Main Loop: */
 131:.\main.c      ****     for(;;)
 132:.\main.c      ****     {
 133:.\main.c      ****         setNetworkStateOnLEDs();
 342              		.loc 1 133 0
 343 0074 FFF7FEFF 		bl	setNetworkStateOnLEDs
 134:.\main.c      ****         
 135:.\main.c      ****         /*Receive*/
 136:.\main.c      ****         //Precondidtion: must finished receiving data so channel state machine at idle and wait for
 137:.\main.c      ****         if(networkState == idle && receivedDataCount >= 34){//TODO remove hardcode #
 344              		.loc 1 137 0
 345 0078 694B     		ldr	r3, .L38+40
 346 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 347 007c 002B     		cmp	r3, #0
 348 007e 2ED1     		bne	.L18
 349              		.loc 1 137 0 is_stmt 0 discriminator 1
 350 0080 644B     		ldr	r3, .L38+28
 351 0082 1B68     		ldr	r3, [r3]
 352 0084 212B     		cmp	r3, #33
 353 0086 2ADD     		ble	.L18
 354              	.LBB2:
 138:.\main.c      ****             
 139:.\main.c      ****             int i; //TODO remove
 140:.\main.c      ****             /*for(i=0; i<16;i++){
 141:.\main.c      ****                 LCD_PrintNumber(diffManReceivedData[i]);
 142:.\main.c      ****             }
 143:.\main.c      ****             LCD_Position(1,0);
 144:.\main.c      ****             for(i=16; i<34;i++){
 145:.\main.c      ****    
 146:.\main.c      ****                 LCD_PrintNumber(diffManReceivedData[i]);
 147:.\main.c      ****             }*/
 148:.\main.c      ****             CyDelay(100);
 355              		.loc 1 148 0 is_stmt 1
 356 0088 6420     		movs	r0, #100
 357 008a FFF7FEFF 		bl	CyDelay
 149:.\main.c      ****             LCD_ClearDisplay();
 358              		.loc 1 149 0
 359 008e 0120     		movs	r0, #1
 360 0090 FFF7FEFF 		bl	LCD_WriteControl
 150:.\main.c      ****             LCD_Position(0,0);
 361              		.loc 1 150 0
 362 0094 0020     		movs	r0, #0
 363 0096 0021     		movs	r1, #0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 10


 364 0098 FFF7FEFF 		bl	LCD_Position
 151:.\main.c      ****            /* for(i=34; i<receivedDataCount; i++){
 152:.\main.c      ****                 LCD_PrintNumber(diffManReceivedData[i]);
 153:.\main.c      ****             }*/
 154:.\main.c      ****                 //end remove
 155:.\main.c      ****             
 156:.\main.c      ****             //Verify that have received start bit (01). Note: ignore first edge from turning system
 157:.\main.c      ****             if(diffManReceivedData[0] == 0 && diffManReceivedData[1] == 1){
 365              		.loc 1 157 0
 366 009c 614B     		ldr	r3, .L38+44
 367 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 368 00a0 002B     		cmp	r3, #0
 369 00a2 16D1     		bne	.L19
 370              		.loc 1 157 0 is_stmt 0 discriminator 1
 371 00a4 5F4B     		ldr	r3, .L38+44
 372 00a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 373 00a8 012B     		cmp	r3, #1
 374 00aa 12D1     		bne	.L19
 158:.\main.c      ****                 
 159:.\main.c      ****                 //LCD_Position(0,0);//Center LCD
 160:.\main.c      ****                 receivedDataIndex = 2; //skip start bit (two half bits)
 375              		.loc 1 160 0 is_stmt 1
 376 00ac 5A4B     		ldr	r3, .L38+32
 377 00ae 0222     		movs	r2, #2
 378 00b0 1A60     		str	r2, [r3]
 161:.\main.c      ****                 while(receivedDataIndex < 19-1){     //Note: receivedDataCount-1 b/c gets one extra
 379              		.loc 1 161 0
 380 00b2 03E0     		b	.L20
 381              	.L21:
 162:.\main.c      ****                     //wait for 8 bits TODO bad comment
 163:.\main.c      ****                     //char receivedChar;     TODO move to global variable
 164:.\main.c      ****                     //char *charPtr = &receivedChar;
 165:.\main.c      ****                     diffManToASCII();
 382              		.loc 1 165 0
 383 00b4 FFF7FEFF 		bl	diffManToASCII
 166:.\main.c      ****                     
 167:.\main.c      ****                     printChar();
 384              		.loc 1 167 0
 385 00b8 FFF7FEFF 		bl	printChar
 386              	.L20:
 161:.\main.c      ****                     //wait for 8 bits TODO bad comment
 387              		.loc 1 161 0
 388 00bc 564B     		ldr	r3, .L38+32
 389 00be 1B68     		ldr	r3, [r3]
 390 00c0 112B     		cmp	r3, #17
 391 00c2 F7DD     		ble	.L21
 168:.\main.c      ****                 }
 169:.\main.c      ****                 receivedDataCount = 0;
 392              		.loc 1 169 0
 393 00c4 534B     		ldr	r3, .L38+28
 394 00c6 0022     		movs	r2, #0
 395 00c8 1A60     		str	r2, [r3]
 170:.\main.c      ****                 receivedDataIndex = 0; 
 396              		.loc 1 170 0
 397 00ca 534B     		ldr	r3, .L38+32
 398 00cc 0022     		movs	r2, #0
 399 00ce 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 11


 400 00d0 05E0     		b	.L18
 401              	.L19:
 171:.\main.c      ****             }
 172:.\main.c      ****             else{
 173:.\main.c      ****                 //Receive data did not start with the start bit
 174:.\main.c      ****                 receivedDataCount = 0;
 402              		.loc 1 174 0
 403 00d2 504B     		ldr	r3, .L38+28
 404 00d4 0022     		movs	r2, #0
 405 00d6 1A60     		str	r2, [r3]
 175:.\main.c      ****                 receivedDataIndex = 0; 
 406              		.loc 1 175 0
 407 00d8 4F4B     		ldr	r3, .L38+32
 408 00da 0022     		movs	r2, #0
 409 00dc 1A60     		str	r2, [r3]
 410              	.L18:
 411              	.LBE2:
 176:.\main.c      ****             }
 177:.\main.c      ****         }
 178:.\main.c      ****         else
 179:.\main.c      ****         {
 180:.\main.c      ****             //TODO prob remove this else
 181:.\main.c      ****         }
 182:.\main.c      ****         /*End Receive*/
 183:.\main.c      ****         
 184:.\main.c      ****         if(USBUART_1_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE reques
 412              		.loc 1 184 0
 413 00de FFF7FEFF 		bl	USBUART_1_IsConfigurationChanged
 414 00e2 0346     		mov	r3, r0
 415 00e4 002B     		cmp	r3, #0
 416 00e6 06D0     		beq	.L23
 185:.\main.c      ****         {
 186:.\main.c      ****             if(USBUART_1_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
 417              		.loc 1 186 0
 418 00e8 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 419 00ec 0346     		mov	r3, r0
 420 00ee 002B     		cmp	r3, #0
 421 00f0 01D0     		beq	.L23
 187:.\main.c      ****             {
 188:.\main.c      ****                 /* Enumeration is done, enable OUT endpoint for receive data from Host */
 189:.\main.c      ****                 USBUART_1_CDC_Init();
 422              		.loc 1 189 0
 423 00f2 FFF7FEFF 		bl	USBUART_1_CDC_Init
 424              	.L23:
 190:.\main.c      ****             }
 191:.\main.c      ****         }         
 192:.\main.c      ****         if(USBUART_1_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
 425              		.loc 1 192 0
 426 00f6 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 427 00fa 0346     		mov	r3, r0
 428 00fc 002B     		cmp	r3, #0
 429 00fe 79D0     		beq	.L24
 193:.\main.c      ****         {
 194:.\main.c      ****             if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
 430              		.loc 1 194 0
 431 0100 FFF7FEFF 		bl	USBUART_1_DataIsReady
 432 0104 0346     		mov	r3, r0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 12


 433 0106 002B     		cmp	r3, #0
 434 0108 74D0     		beq	.L24
 195:.\main.c      ****             {   
 196:.\main.c      ****                 rx = USBUART_1_GetChar();
 435              		.loc 1 196 0
 436 010a FFF7FEFF 		bl	USBUART_1_GetChar
 437 010e 0346     		mov	r3, r0
 438 0110 87F86E30 		strb	r3, [r7, #110]
 197:.\main.c      ****                 switch(rx){
 439              		.loc 1 197 0
 440 0114 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 441 0118 0D2B     		cmp	r3, #13
 442 011a 25D0     		beq	.L26
 443 011c 1B2B     		cmp	r3, #27
 444 011e 68D0     		beq	.L37
 445 0120 082B     		cmp	r3, #8
 446 0122 4CD1     		bne	.L36
 198:.\main.c      ****                     case 8://backspace
 199:.\main.c      ****                         if(stringPosition>0){
 447              		.loc 1 199 0
 448 0124 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 449 0128 002B     		cmp	r3, #0
 450 012a 1CD0     		beq	.L29
 200:.\main.c      ****                             stringPosition--;
 451              		.loc 1 200 0
 452 012c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 453 0130 013B     		subs	r3, r3, #1
 454 0132 87F86F30 		strb	r3, [r7, #111]
 201:.\main.c      ****                             lineString[stringPosition] = '\0';
 455              		.loc 1 201 0
 456 0136 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 457 013a 07F17002 		add	r2, r7, #112
 458 013e 1344     		add	r3, r3, r2
 459 0140 0022     		movs	r2, #0
 460 0142 03F8682C 		strb	r2, [r3, #-104]
 202:.\main.c      ****                             //backspace space backspace
 203:.\main.c      ****                             while(USBUART_1_CDCIsReady() == 0u); 
 461              		.loc 1 203 0
 462 0146 00BF     		nop
 463              	.L30:
 464              		.loc 1 203 0 is_stmt 0 discriminator 1
 465 0148 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 466 014c 0346     		mov	r3, r0
 467 014e 002B     		cmp	r3, #0
 468 0150 FAD0     		beq	.L30
 204:.\main.c      ****                             USBUART_1_PutChar(8);
 469              		.loc 1 204 0 is_stmt 1
 470 0152 0820     		movs	r0, #8
 471 0154 FFF7FEFF 		bl	USBUART_1_PutChar
 205:.\main.c      ****                             USBUART_1_PutChar(32);
 472              		.loc 1 205 0
 473 0158 2020     		movs	r0, #32
 474 015a FFF7FEFF 		bl	USBUART_1_PutChar
 206:.\main.c      ****                             USBUART_1_PutChar(8);
 475              		.loc 1 206 0
 476 015e 0820     		movs	r0, #8
 477 0160 FFF7FEFF 		bl	USBUART_1_PutChar
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 13


 207:.\main.c      ****                         }
 208:.\main.c      ****                         break;
 478              		.loc 1 208 0
 479 0164 46E0     		b	.L24
 480              	.L29:
 481 0166 45E0     		b	.L24
 482              	.L26:
 209:.\main.c      ****                     case 13://enter (carriage return)
 210:.\main.c      ****                         initDiffManEncodedArray();
 483              		.loc 1 210 0
 484 0168 FFF7FEFF 		bl	initDiffManEncodedArray
 211:.\main.c      ****                         stringToDiffMan(lineString, stringPosition);
 485              		.loc 1 211 0
 486 016c 07F10802 		add	r2, r7, #8
 487 0170 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 488 0174 1046     		mov	r0, r2
 489 0176 1946     		mov	r1, r3
 490 0178 FFF7FEFF 		bl	stringToDiffMan
 212:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u);
 491              		.loc 1 212 0
 492 017c 00BF     		nop
 493              	.L31:
 494              		.loc 1 212 0 is_stmt 0 discriminator 1
 495 017e FFF7FEFF 		bl	USBUART_1_CDCIsReady
 496 0182 0346     		mov	r3, r0
 497 0184 002B     		cmp	r3, #0
 498 0186 FAD0     		beq	.L31
 213:.\main.c      ****                         USBUART_1_PutCRLF();
 499              		.loc 1 213 0 is_stmt 1
 500 0188 FFF7FEFF 		bl	USBUART_1_PutCRLF
 214:.\main.c      ****                         
 215:.\main.c      ****                         //keep looping until data is transmitted
 216:.\main.c      ****                         while(!dataTransmissionComplete){
 501              		.loc 1 216 0
 502 018c 03E0     		b	.L32
 503              	.L33:
 217:.\main.c      ****                             transmitData();
 504              		.loc 1 217 0
 505 018e FFF7FEFF 		bl	transmitData
 218:.\main.c      ****                             setNetworkStateOnLEDs();
 506              		.loc 1 218 0
 507 0192 FFF7FEFF 		bl	setNetworkStateOnLEDs
 508              	.L32:
 216:.\main.c      ****                             transmitData();
 509              		.loc 1 216 0
 510 0196 194B     		ldr	r3, .L38+4
 511 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 019a 83F00103 		eor	r3, r3, #1
 513 019e DBB2     		uxtb	r3, r3
 514 01a0 002B     		cmp	r3, #0
 515 01a2 F4D1     		bne	.L33
 219:.\main.c      ****                         }
 220:.\main.c      ****                         dataTransmissionComplete = false;
 516              		.loc 1 220 0
 517 01a4 154B     		ldr	r3, .L38+4
 518 01a6 0022     		movs	r2, #0
 519 01a8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 14


 221:.\main.c      ****                         TX_pin_Write(1);    //set line to logic-1 after transmission
 520              		.loc 1 221 0
 521 01aa 0120     		movs	r0, #1
 522 01ac FFF7FEFF 		bl	TX_pin_Write
 222:.\main.c      ****                         //reset index
 223:.\main.c      ****                         halfBitIndex = 0;
 523              		.loc 1 223 0
 524 01b0 1D4B     		ldr	r3, .L38+48
 525 01b2 0022     		movs	r2, #0
 526 01b4 1A60     		str	r2, [r3]
 224:.\main.c      ****                         stringPosition = 0; 
 527              		.loc 1 224 0
 528 01b6 0023     		movs	r3, #0
 529 01b8 87F86F30 		strb	r3, [r7, #111]
 225:.\main.c      ****                         break;
 530              		.loc 1 225 0
 531 01bc 1AE0     		b	.L24
 532              	.L36:
 226:.\main.c      ****                     case 27://escape
 227:.\main.c      ****                         break;
 228:.\main.c      ****                     default://everything else
 229:.\main.c      ****                         lineString[stringPosition] = rx;
 533              		.loc 1 229 0
 534 01be 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 535 01c2 07F17002 		add	r2, r7, #112
 536 01c6 1344     		add	r3, r3, r2
 537 01c8 97F86E20 		ldrb	r2, [r7, #110]
 538 01cc 03F8682C 		strb	r2, [r3, #-104]
 230:.\main.c      ****                         stringPosition++;
 539              		.loc 1 230 0
 540 01d0 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 541 01d4 0133     		adds	r3, r3, #1
 542 01d6 87F86F30 		strb	r3, [r7, #111]
 231:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u); 
 543              		.loc 1 231 0
 544 01da 00BF     		nop
 545              	.L34:
 546              		.loc 1 231 0 is_stmt 0 discriminator 1
 547 01dc FFF7FEFF 		bl	USBUART_1_CDCIsReady
 548 01e0 0346     		mov	r3, r0
 549 01e2 002B     		cmp	r3, #0
 550 01e4 FAD0     		beq	.L34
 232:.\main.c      ****                         USBUART_1_PutChar(rx);       /* Send data back to PC */
 551              		.loc 1 232 0 is_stmt 1
 552 01e6 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 553 01ea 1846     		mov	r0, r3
 554 01ec FFF7FEFF 		bl	USBUART_1_PutChar
 233:.\main.c      ****                         break;
 555              		.loc 1 233 0
 556 01f0 00E0     		b	.L24
 557              	.L37:
 227:.\main.c      ****                     default://everything else
 558              		.loc 1 227 0
 559 01f2 00BF     		nop
 560              	.L24:
 234:.\main.c      ****                 }
 235:.\main.c      ****             }
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 15


 236:.\main.c      ****         }
 237:.\main.c      ****     }   
 561              		.loc 1 237 0 discriminator 1
 562 01f4 3EE7     		b	.L35
 563              	.L39:
 564 01f6 00BF     		.align	2
 565              	.L38:
 566 01f8 00000000 		.word	timerExpired
 567 01fc 00000000 		.word	dataTransmissionComplete
 568 0200 00000000 		.word	powerOnEdge
 569 0204 00000000 		.word	Idle_Collision_ISR
 570 0208 00000000 		.word	Edge_detect_ISR
 571 020c 00000000 		.word	TimerHandler
 572 0210 00000000 		.word	ReceiveTimerISR
 573 0214 00000000 		.word	receivedDataCount
 574 0218 00000000 		.word	receivedDataIndex
 575 021c 00000000 		.word	timerInterruptCount
 576 0220 00000000 		.word	networkState
 577 0224 00000000 		.word	diffManReceivedData
 578 0228 00000000 		.word	halfBitIndex
 579              		.cfi_endproc
 580              	.LFE67:
 581              		.size	main, .-main
 582              		.section	.text.initDiffManEncodedArray,"ax",%progbits
 583              		.align	2
 584              		.global	initDiffManEncodedArray
 585              		.thumb
 586              		.thumb_func
 587              		.type	initDiffManEncodedArray, %function
 588              	initDiffManEncodedArray:
 589              	.LFB68:
 238:.\main.c      **** }
 239:.\main.c      **** 
 240:.\main.c      **** /*
 241:.\main.c      **** init dif man encoded data array with a leading "starting bit". The starting bit is madeup of the 
 242:.\main.c      **** half bits 01. 
 243:.\main.c      **** Only call when starting to transfer a new string
 244:.\main.c      **** */
 245:.\main.c      **** void initDiffManEncodedArray(){
 590              		.loc 1 245 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 246:.\main.c      ****     halfBitIndex = 0;
 600              		.loc 1 246 0
 601 0004 0E4B     		ldr	r3, .L41
 602 0006 0022     		movs	r2, #0
 603 0008 1A60     		str	r2, [r3]
 247:.\main.c      ****     diffManEncodedData[halfBitIndex] = 0;
 604              		.loc 1 247 0
 605 000a 0D4B     		ldr	r3, .L41
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 16


 606 000c 1B68     		ldr	r3, [r3]
 607 000e 0D4A     		ldr	r2, .L41+4
 608 0010 0021     		movs	r1, #0
 609 0012 42F82310 		str	r1, [r2, r3, lsl #2]
 248:.\main.c      ****     halfBitIndex++;
 610              		.loc 1 248 0
 611 0016 0A4B     		ldr	r3, .L41
 612 0018 1B68     		ldr	r3, [r3]
 613 001a 0133     		adds	r3, r3, #1
 614 001c 084A     		ldr	r2, .L41
 615 001e 1360     		str	r3, [r2]
 249:.\main.c      ****     diffManEncodedData[halfBitIndex] = 1;
 616              		.loc 1 249 0
 617 0020 074B     		ldr	r3, .L41
 618 0022 1B68     		ldr	r3, [r3]
 619 0024 074A     		ldr	r2, .L41+4
 620 0026 0121     		movs	r1, #1
 621 0028 42F82310 		str	r1, [r2, r3, lsl #2]
 250:.\main.c      ****     halfBitIndex++;
 622              		.loc 1 250 0
 623 002c 044B     		ldr	r3, .L41
 624 002e 1B68     		ldr	r3, [r3]
 625 0030 0133     		adds	r3, r3, #1
 626 0032 034A     		ldr	r2, .L41
 627 0034 1360     		str	r3, [r2]
 251:.\main.c      **** }
 628              		.loc 1 251 0
 629 0036 BD46     		mov	sp, r7
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0038 5DF8047B 		ldr	r7, [sp], #4
 633              		.cfi_restore 7
 634              		.cfi_def_cfa_offset 0
 635 003c 7047     		bx	lr
 636              	.L42:
 637 003e 00BF     		.align	2
 638              	.L41:
 639 0040 00000000 		.word	halfBitIndex
 640 0044 00000000 		.word	diffManEncodedData
 641              		.cfi_endproc
 642              	.LFE68:
 643              		.size	initDiffManEncodedArray, .-initDiffManEncodedArray
 644              		.section	.text.stringToDiffMan,"ax",%progbits
 645              		.align	2
 646              		.global	stringToDiffMan
 647              		.thumb
 648              		.thumb_func
 649              		.type	stringToDiffMan, %function
 650              	stringToDiffMan:
 651              	.LFB69:
 252:.\main.c      **** 
 253:.\main.c      **** /*
 254:.\main.c      **** Enter key has been pressed, change binary data into diff man data.
 255:.\main.c      **** Call from main. Requires main to access diffManEncodedData array
 256:.\main.c      **** */
 257:.\main.c      **** void stringToDiffMan(char lineString[], uint8 stringPosition){
 652              		.loc 1 257 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 17


 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 80B5     		push	{r7, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 84B0     		sub	sp, sp, #16
 661              		.cfi_def_cfa_offset 24
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 665 0008 0B46     		mov	r3, r1
 666 000a FB70     		strb	r3, [r7, #3]
 258:.\main.c      **** 
 259:.\main.c      ****     unsigned int i = 0;
 667              		.loc 1 259 0
 668 000c 0023     		movs	r3, #0
 669 000e FB60     		str	r3, [r7, #12]
 260:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 670              		.loc 1 260 0
 671 0010 0023     		movs	r3, #0
 672 0012 FB60     		str	r3, [r7, #12]
 673 0014 09E0     		b	.L44
 674              	.L45:
 261:.\main.c      ****         asciiToDiffMan(lineString[i]);
 675              		.loc 1 261 0 discriminator 3
 676 0016 7A68     		ldr	r2, [r7, #4]
 677 0018 FB68     		ldr	r3, [r7, #12]
 678 001a 1344     		add	r3, r3, r2
 679 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680 001e 1846     		mov	r0, r3
 681 0020 FFF7FEFF 		bl	asciiToDiffMan
 260:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 682              		.loc 1 260 0 discriminator 3
 683 0024 FB68     		ldr	r3, [r7, #12]
 684 0026 0133     		adds	r3, r3, #1
 685 0028 FB60     		str	r3, [r7, #12]
 686              	.L44:
 260:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 687              		.loc 1 260 0 is_stmt 0 discriminator 1
 688 002a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 689 002c FB68     		ldr	r3, [r7, #12]
 690 002e 9A42     		cmp	r2, r3
 691 0030 F1D8     		bhi	.L45
 262:.\main.c      ****     }
 263:.\main.c      **** }
 692              		.loc 1 263 0 is_stmt 1
 693 0032 1037     		adds	r7, r7, #16
 694              		.cfi_def_cfa_offset 8
 695 0034 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0036 80BD     		pop	{r7, pc}
 699              		.cfi_endproc
 700              	.LFE69:
 701              		.size	stringToDiffMan, .-stringToDiffMan
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 18


 702              		.section	.text.asciiToDiffMan,"ax",%progbits
 703              		.align	2
 704              		.global	asciiToDiffMan
 705              		.thumb
 706              		.thumb_func
 707              		.type	asciiToDiffMan, %function
 708              	asciiToDiffMan:
 709              	.LFB70:
 264:.\main.c      **** 
 265:.\main.c      **** /*
 266:.\main.c      **** Helper method. Do not call from main.
 267:.\main.c      **** Converts a ascii char to a differental manchester line encoded version
 268:.\main.c      **** */
 269:.\main.c      **** void asciiToDiffMan(char asciiChar)
 270:.\main.c      **** {
 710              		.loc 1 270 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 104
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715 0000 80B4     		push	{r7}
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 7, -4
 718 0002 9BB0     		sub	sp, sp, #108
 719              		.cfi_def_cfa_offset 112
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 0346     		mov	r3, r0
 723 0008 FB71     		strb	r3, [r7, #7]
 271:.\main.c      ****     uint8 previousHalfBit = diffManEncodedData[halfBitIndex-1];
 724              		.loc 1 271 0
 725 000a 6C4B     		ldr	r3, .L58
 726 000c 1B68     		ldr	r3, [r3]
 727 000e 013B     		subs	r3, r3, #1
 728 0010 6B4A     		ldr	r2, .L58+4
 729 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 730 0016 87F86730 		strb	r3, [r7, #103]
 272:.\main.c      ****     //send starting 1 bit (encoded)
 273:.\main.c      ****     if(previousHalfBit == 1){
 731              		.loc 1 273 0
 732 001a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 733 001e 012B     		cmp	r3, #1
 734 0020 16D1     		bne	.L47
 274:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 735              		.loc 1 274 0
 736 0022 664B     		ldr	r3, .L58
 737 0024 1B68     		ldr	r3, [r3]
 738 0026 664A     		ldr	r2, .L58+4
 739 0028 0121     		movs	r1, #1
 740 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 275:.\main.c      ****         halfBitIndex++;
 741              		.loc 1 275 0
 742 002e 634B     		ldr	r3, .L58
 743 0030 1B68     		ldr	r3, [r3]
 744 0032 0133     		adds	r3, r3, #1
 745 0034 614A     		ldr	r2, .L58
 746 0036 1360     		str	r3, [r2]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 19


 276:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 747              		.loc 1 276 0
 748 0038 604B     		ldr	r3, .L58
 749 003a 1B68     		ldr	r3, [r3]
 750 003c 604A     		ldr	r2, .L58+4
 751 003e 0021     		movs	r1, #0
 752 0040 42F82310 		str	r1, [r2, r3, lsl #2]
 277:.\main.c      ****         halfBitIndex++;
 753              		.loc 1 277 0
 754 0044 5D4B     		ldr	r3, .L58
 755 0046 1B68     		ldr	r3, [r3]
 756 0048 0133     		adds	r3, r3, #1
 757 004a 5C4A     		ldr	r2, .L58
 758 004c 1360     		str	r3, [r2]
 759 004e 15E0     		b	.L48
 760              	.L47:
 278:.\main.c      ****     }else{
 279:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 761              		.loc 1 279 0
 762 0050 5A4B     		ldr	r3, .L58
 763 0052 1B68     		ldr	r3, [r3]
 764 0054 5A4A     		ldr	r2, .L58+4
 765 0056 0021     		movs	r1, #0
 766 0058 42F82310 		str	r1, [r2, r3, lsl #2]
 280:.\main.c      ****         halfBitIndex++;
 767              		.loc 1 280 0
 768 005c 574B     		ldr	r3, .L58
 769 005e 1B68     		ldr	r3, [r3]
 770 0060 0133     		adds	r3, r3, #1
 771 0062 564A     		ldr	r2, .L58
 772 0064 1360     		str	r3, [r2]
 281:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 773              		.loc 1 281 0
 774 0066 554B     		ldr	r3, .L58
 775 0068 1B68     		ldr	r3, [r3]
 776 006a 554A     		ldr	r2, .L58+4
 777 006c 0121     		movs	r1, #1
 778 006e 42F82310 		str	r1, [r2, r3, lsl #2]
 282:.\main.c      ****         halfBitIndex++;
 779              		.loc 1 282 0
 780 0072 524B     		ldr	r3, .L58
 781 0074 1B68     		ldr	r3, [r3]
 782 0076 0133     		adds	r3, r3, #1
 783 0078 504A     		ldr	r2, .L58
 784 007a 1360     		str	r3, [r2]
 785              	.L48:
 283:.\main.c      ****     } 
 284:.\main.c      ****     previousHalfBit = diffManEncodedData[halfBitIndex-1];
 786              		.loc 1 284 0
 787 007c 4F4B     		ldr	r3, .L58
 788 007e 1B68     		ldr	r3, [r3]
 789 0080 013B     		subs	r3, r3, #1
 790 0082 4F4A     		ldr	r2, .L58+4
 791 0084 52F82330 		ldr	r3, [r2, r3, lsl #2]
 792 0088 87F86730 		strb	r3, [r7, #103]
 285:.\main.c      **** 
 286:.\main.c      ****     
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 20


 287:.\main.c      ****     //convert asciil char to binary value (which will be 7 bits)
 288:.\main.c      ****     unsigned int binaryValueOfChar[20];//index zero is LSB 
 289:.\main.c      ****     int i;
 290:.\main.c      ****     for(i=0; asciiChar>0; i++)
 793              		.loc 1 290 0
 794 008c 0023     		movs	r3, #0
 795 008e 3B66     		str	r3, [r7, #96]
 796 0090 0FE0     		b	.L49
 797              	.L50:
 291:.\main.c      ****     { 
 292:.\main.c      ****         binaryValueOfChar[i]=asciiChar%2; 
 798              		.loc 1 292 0 discriminator 3
 799 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 800 0094 03F00102 		and	r2, r3, #1
 801 0098 3B6E     		ldr	r3, [r7, #96]
 802 009a 9B00     		lsls	r3, r3, #2
 803 009c 07F16801 		add	r1, r7, #104
 804 00a0 0B44     		add	r3, r3, r1
 805 00a2 43F85C2C 		str	r2, [r3, #-92]
 293:.\main.c      ****         asciiChar=asciiChar/2;
 806              		.loc 1 293 0 discriminator 3
 807 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 808 00a8 5B08     		lsrs	r3, r3, #1
 809 00aa FB71     		strb	r3, [r7, #7]
 290:.\main.c      ****     { 
 810              		.loc 1 290 0 discriminator 3
 811 00ac 3B6E     		ldr	r3, [r7, #96]
 812 00ae 0133     		adds	r3, r3, #1
 813 00b0 3B66     		str	r3, [r7, #96]
 814              	.L49:
 290:.\main.c      ****     { 
 815              		.loc 1 290 0 is_stmt 0 discriminator 1
 816 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 817 00b4 002B     		cmp	r3, #0
 818 00b6 ECD1     		bne	.L50
 294:.\main.c      ****     }
 295:.\main.c      **** 
 296:.\main.c      ****     //differential encode the 7 bits (from the binary version of the char)
 297:.\main.c      ****     //must start at the end of the array so to encode the MSB first 
 298:.\main.c      ****     int j;
 299:.\main.c      ****     for(j=INDEX_OF_MSB;j>=0;j--) 
 819              		.loc 1 299 0 is_stmt 1
 820 00b8 0623     		movs	r3, #6
 821 00ba FB65     		str	r3, [r7, #92]
 822 00bc 76E0     		b	.L51
 823              	.L57:
 300:.\main.c      ****     {
 301:.\main.c      ****         if(binaryValueOfChar[j] == 1)
 824              		.loc 1 301 0
 825 00be FB6D     		ldr	r3, [r7, #92]
 826 00c0 9B00     		lsls	r3, r3, #2
 827 00c2 07F16802 		add	r2, r7, #104
 828 00c6 1344     		add	r3, r3, r2
 829 00c8 53F85C3C 		ldr	r3, [r3, #-92]
 830 00cc 012B     		cmp	r3, #1
 831 00ce 31D1     		bne	.L52
 302:.\main.c      ****         {
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 21


 303:.\main.c      ****             //bit == 1
 304:.\main.c      ****             if(previousHalfBit == 1)
 832              		.loc 1 304 0
 833 00d0 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 834 00d4 012B     		cmp	r3, #1
 835 00d6 16D1     		bne	.L53
 305:.\main.c      ****             {
 306:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 836              		.loc 1 306 0
 837 00d8 384B     		ldr	r3, .L58
 838 00da 1B68     		ldr	r3, [r3]
 839 00dc 384A     		ldr	r2, .L58+4
 840 00de 0121     		movs	r1, #1
 841 00e0 42F82310 		str	r1, [r2, r3, lsl #2]
 307:.\main.c      ****                 halfBitIndex++;
 842              		.loc 1 307 0
 843 00e4 354B     		ldr	r3, .L58
 844 00e6 1B68     		ldr	r3, [r3]
 845 00e8 0133     		adds	r3, r3, #1
 846 00ea 344A     		ldr	r2, .L58
 847 00ec 1360     		str	r3, [r2]
 308:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 848              		.loc 1 308 0
 849 00ee 334B     		ldr	r3, .L58
 850 00f0 1B68     		ldr	r3, [r3]
 851 00f2 334A     		ldr	r2, .L58+4
 852 00f4 0021     		movs	r1, #0
 853 00f6 42F82310 		str	r1, [r2, r3, lsl #2]
 309:.\main.c      ****                 halfBitIndex++;    
 854              		.loc 1 309 0
 855 00fa 304B     		ldr	r3, .L58
 856 00fc 1B68     		ldr	r3, [r3]
 857 00fe 0133     		adds	r3, r3, #1
 858 0100 2E4A     		ldr	r2, .L58
 859 0102 1360     		str	r3, [r2]
 860 0104 47E0     		b	.L55
 861              	.L53:
 310:.\main.c      ****             }
 311:.\main.c      ****             else
 312:.\main.c      ****             {
 313:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 862              		.loc 1 313 0
 863 0106 2D4B     		ldr	r3, .L58
 864 0108 1B68     		ldr	r3, [r3]
 865 010a 2D4A     		ldr	r2, .L58+4
 866 010c 0021     		movs	r1, #0
 867 010e 42F82310 		str	r1, [r2, r3, lsl #2]
 314:.\main.c      ****                 halfBitIndex++;
 868              		.loc 1 314 0
 869 0112 2A4B     		ldr	r3, .L58
 870 0114 1B68     		ldr	r3, [r3]
 871 0116 0133     		adds	r3, r3, #1
 872 0118 284A     		ldr	r2, .L58
 873 011a 1360     		str	r3, [r2]
 315:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 874              		.loc 1 315 0
 875 011c 274B     		ldr	r3, .L58
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 22


 876 011e 1B68     		ldr	r3, [r3]
 877 0120 274A     		ldr	r2, .L58+4
 878 0122 0121     		movs	r1, #1
 879 0124 42F82310 		str	r1, [r2, r3, lsl #2]
 316:.\main.c      ****                 halfBitIndex++;
 880              		.loc 1 316 0
 881 0128 244B     		ldr	r3, .L58
 882 012a 1B68     		ldr	r3, [r3]
 883 012c 0133     		adds	r3, r3, #1
 884 012e 234A     		ldr	r2, .L58
 885 0130 1360     		str	r3, [r2]
 886 0132 30E0     		b	.L55
 887              	.L52:
 317:.\main.c      ****             }
 318:.\main.c      ****             
 319:.\main.c      ****         }
 320:.\main.c      ****         else
 321:.\main.c      ****         {
 322:.\main.c      ****             //bit == 0
 323:.\main.c      ****             if(previousHalfBit == 1)
 888              		.loc 1 323 0
 889 0134 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 890 0138 012B     		cmp	r3, #1
 891 013a 16D1     		bne	.L56
 324:.\main.c      ****             {
 325:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 892              		.loc 1 325 0
 893 013c 1F4B     		ldr	r3, .L58
 894 013e 1B68     		ldr	r3, [r3]
 895 0140 1F4A     		ldr	r2, .L58+4
 896 0142 0021     		movs	r1, #0
 897 0144 42F82310 		str	r1, [r2, r3, lsl #2]
 326:.\main.c      ****                 halfBitIndex++;
 898              		.loc 1 326 0
 899 0148 1C4B     		ldr	r3, .L58
 900 014a 1B68     		ldr	r3, [r3]
 901 014c 0133     		adds	r3, r3, #1
 902 014e 1B4A     		ldr	r2, .L58
 903 0150 1360     		str	r3, [r2]
 327:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 904              		.loc 1 327 0
 905 0152 1A4B     		ldr	r3, .L58
 906 0154 1B68     		ldr	r3, [r3]
 907 0156 1A4A     		ldr	r2, .L58+4
 908 0158 0121     		movs	r1, #1
 909 015a 42F82310 		str	r1, [r2, r3, lsl #2]
 328:.\main.c      ****                 halfBitIndex++;
 910              		.loc 1 328 0
 911 015e 174B     		ldr	r3, .L58
 912 0160 1B68     		ldr	r3, [r3]
 913 0162 0133     		adds	r3, r3, #1
 914 0164 154A     		ldr	r2, .L58
 915 0166 1360     		str	r3, [r2]
 916 0168 15E0     		b	.L55
 917              	.L56:
 329:.\main.c      ****             }
 330:.\main.c      ****             else
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 23


 331:.\main.c      ****             {
 332:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 918              		.loc 1 332 0
 919 016a 144B     		ldr	r3, .L58
 920 016c 1B68     		ldr	r3, [r3]
 921 016e 144A     		ldr	r2, .L58+4
 922 0170 0121     		movs	r1, #1
 923 0172 42F82310 		str	r1, [r2, r3, lsl #2]
 333:.\main.c      ****                 halfBitIndex++;
 924              		.loc 1 333 0
 925 0176 114B     		ldr	r3, .L58
 926 0178 1B68     		ldr	r3, [r3]
 927 017a 0133     		adds	r3, r3, #1
 928 017c 0F4A     		ldr	r2, .L58
 929 017e 1360     		str	r3, [r2]
 334:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 930              		.loc 1 334 0
 931 0180 0E4B     		ldr	r3, .L58
 932 0182 1B68     		ldr	r3, [r3]
 933 0184 0E4A     		ldr	r2, .L58+4
 934 0186 0021     		movs	r1, #0
 935 0188 42F82310 		str	r1, [r2, r3, lsl #2]
 335:.\main.c      ****                 halfBitIndex++;
 936              		.loc 1 335 0
 937 018c 0B4B     		ldr	r3, .L58
 938 018e 1B68     		ldr	r3, [r3]
 939 0190 0133     		adds	r3, r3, #1
 940 0192 0A4A     		ldr	r2, .L58
 941 0194 1360     		str	r3, [r2]
 942              	.L55:
 336:.\main.c      ****             }
 337:.\main.c      ****         }
 338:.\main.c      ****         
 339:.\main.c      ****         previousHalfBit = diffManEncodedData[halfBitIndex-1];
 943              		.loc 1 339 0 discriminator 2
 944 0196 094B     		ldr	r3, .L58
 945 0198 1B68     		ldr	r3, [r3]
 946 019a 013B     		subs	r3, r3, #1
 947 019c 084A     		ldr	r2, .L58+4
 948 019e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 949 01a2 87F86730 		strb	r3, [r7, #103]
 299:.\main.c      ****     {
 950              		.loc 1 299 0 discriminator 2
 951 01a6 FB6D     		ldr	r3, [r7, #92]
 952 01a8 013B     		subs	r3, r3, #1
 953 01aa FB65     		str	r3, [r7, #92]
 954              	.L51:
 299:.\main.c      ****     {
 955              		.loc 1 299 0 is_stmt 0 discriminator 1
 956 01ac FB6D     		ldr	r3, [r7, #92]
 957 01ae 002B     		cmp	r3, #0
 958 01b0 85DA     		bge	.L57
 340:.\main.c      ****     }//end for
 341:.\main.c      ****    
 342:.\main.c      **** }//end function
 959              		.loc 1 342 0 is_stmt 1
 960 01b2 6C37     		adds	r7, r7, #108
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 24


 961              		.cfi_def_cfa_offset 4
 962 01b4 BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
 964              		@ sp needed
 965 01b6 5DF8047B 		ldr	r7, [sp], #4
 966              		.cfi_restore 7
 967              		.cfi_def_cfa_offset 0
 968 01ba 7047     		bx	lr
 969              	.L59:
 970              		.align	2
 971              	.L58:
 972 01bc 00000000 		.word	halfBitIndex
 973 01c0 00000000 		.word	diffManEncodedData
 974              		.cfi_endproc
 975              	.LFE70:
 976              		.size	asciiToDiffMan, .-asciiToDiffMan
 977              		.global	__aeabi_i2d
 978              		.global	__aeabi_ddiv
 979              		.global	__aeabi_dmul
 980              		.global	__aeabi_d2iz
 981              		.section	.text.transmitData,"ax",%progbits
 982              		.align	2
 983              		.global	transmitData
 984              		.thumb
 985              		.thumb_func
 986              		.type	transmitData, %function
 987              	transmitData:
 988              	.LFB71:
 343:.\main.c      **** 
 344:.\main.c      **** /*
 345:.\main.c      **** Transmits the diff man encoded data. Must have converted string to diff man before calling this met
 346:.\main.c      **** Checks network state before transmitting.
 347:.\main.c      **** Note: halfBitIndex will be equal to the size of the diffManEncodedData array at this point.
 348:.\main.c      **** */
 349:.\main.c      **** void transmitData(){
 989              		.loc 1 349 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 8
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 80B5     		push	{r7, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 82B0     		sub	sp, sp, #8
 998              		.cfi_def_cfa_offset 16
 999 0004 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 350:.\main.c      ****     int i;
 351:.\main.c      ****     for(i = 0; i < halfBitIndex; i++){
 1001              		.loc 1 351 0
 1002 0006 0023     		movs	r3, #0
 1003 0008 7B60     		str	r3, [r7, #4]
 1004 000a 47E0     		b	.L61
 1005              	.L65:
 352:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 353:.\main.c      ****         //Else break out of transmition and wait random time
 354:.\main.c      ****         if(networkState != idle){
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 25


 1006              		.loc 1 354 0
 1007 000c 2B4B     		ldr	r3, .L67
 1008 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0010 002B     		cmp	r3, #0
 1010 0012 2BD0     		beq	.L62
 355:.\main.c      ****             if(networkState == collision){
 1011              		.loc 1 355 0
 1012 0014 294B     		ldr	r3, .L67
 1013 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014 0018 022B     		cmp	r3, #2
 1015 001a 27D1     		bne	.L62
 1016              	.LBB3:
 356:.\main.c      ****                 TX_pin_Write(1);
 1017              		.loc 1 356 0
 1018 001c 0120     		movs	r0, #1
 1019 001e FFF7FEFF 		bl	TX_pin_Write
 357:.\main.c      ****                 int value = (getRandomNumber()/128.0)*800.0;
 1020              		.loc 1 357 0
 1021 0022 FFF7FEFF 		bl	getRandomNumber
 1022 0026 0346     		mov	r3, r0
 1023 0028 1846     		mov	r0, r3
 1024 002a FFF7FEFF 		bl	__aeabi_i2d
 1025 002e 0246     		mov	r2, r0
 1026 0030 0B46     		mov	r3, r1
 1027 0032 1046     		mov	r0, r2
 1028 0034 1946     		mov	r1, r3
 1029 0036 4FF00002 		mov	r2, #0
 1030 003a 214B     		ldr	r3, .L67+4
 1031 003c FFF7FEFF 		bl	__aeabi_ddiv
 1032 0040 0246     		mov	r2, r0
 1033 0042 0B46     		mov	r3, r1
 1034 0044 1046     		mov	r0, r2
 1035 0046 1946     		mov	r1, r3
 1036 0048 4FF00002 		mov	r2, #0
 1037 004c 1D4B     		ldr	r3, .L67+8
 1038 004e FFF7FEFF 		bl	__aeabi_dmul
 1039 0052 0246     		mov	r2, r0
 1040 0054 0B46     		mov	r3, r1
 1041 0056 1046     		mov	r0, r2
 1042 0058 1946     		mov	r1, r3
 1043 005a FFF7FEFF 		bl	__aeabi_d2iz
 1044 005e 0346     		mov	r3, r0
 1045 0060 3B60     		str	r3, [r7]
 358:.\main.c      ****                
 359:.\main.c      ****                 //Back-off a random time between 0 and 0.8 seconds
 360:.\main.c      ****                 CyDelay(value);
 1046              		.loc 1 360 0
 1047 0062 3B68     		ldr	r3, [r7]
 1048 0064 1846     		mov	r0, r3
 1049 0066 FFF7FEFF 		bl	CyDelay
 361:.\main.c      ****                 //LCD_Position(0,0);      
 362:.\main.c      ****                /// LCD_PrintNumber(value); TODO remove
 363:.\main.c      ****                 break;
 1050              		.loc 1 363 0
 1051 006a 1CE0     		b	.L63
 1052              	.L62:
 1053              	.LBE3:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 26


 364:.\main.c      ****             }
 365:.\main.c      ****         }
 366:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 1054              		.loc 1 366 0
 1055 006c 164A     		ldr	r2, .L67+12
 1056 006e 7B68     		ldr	r3, [r7, #4]
 1057 0070 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1058 0074 DBB2     		uxtb	r3, r3
 1059 0076 1846     		mov	r0, r3
 1060 0078 FFF7FEFF 		bl	TX_pin_Write
 367:.\main.c      ****         Timer_Start();
 1061              		.loc 1 367 0
 1062 007c FFF7FEFF 		bl	Timer_Start
 368:.\main.c      ****         while(!timerExpired); 
 1063              		.loc 1 368 0
 1064 0080 00BF     		nop
 1065              	.L64:
 1066              		.loc 1 368 0 is_stmt 0 discriminator 1
 1067 0082 124B     		ldr	r3, .L67+16
 1068 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1069 0086 83F00103 		eor	r3, r3, #1
 1070 008a DBB2     		uxtb	r3, r3
 1071 008c 002B     		cmp	r3, #0
 1072 008e F8D1     		bne	.L64
 369:.\main.c      ****         timerExpired = false;
 1073              		.loc 1 369 0 is_stmt 1 discriminator 2
 1074 0090 0E4B     		ldr	r3, .L67+16
 1075 0092 0022     		movs	r2, #0
 1076 0094 1A70     		strb	r2, [r3]
 351:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 1077              		.loc 1 351 0 discriminator 2
 1078 0096 7B68     		ldr	r3, [r7, #4]
 1079 0098 0133     		adds	r3, r3, #1
 1080 009a 7B60     		str	r3, [r7, #4]
 1081              	.L61:
 351:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 1082              		.loc 1 351 0 is_stmt 0 discriminator 1
 1083 009c 0C4B     		ldr	r3, .L67+20
 1084 009e 1B68     		ldr	r3, [r3]
 1085 00a0 7A68     		ldr	r2, [r7, #4]
 1086 00a2 9A42     		cmp	r2, r3
 1087 00a4 B2DB     		blt	.L65
 1088              	.L63:
 370:.\main.c      ****     }
 371:.\main.c      ****     
 372:.\main.c      ****     //when finished transmitting diff manchester encoded data, set flag 
 373:.\main.c      ****     if(i == halfBitIndex){
 1089              		.loc 1 373 0 is_stmt 1
 1090 00a6 0A4B     		ldr	r3, .L67+20
 1091 00a8 1B68     		ldr	r3, [r3]
 1092 00aa 7A68     		ldr	r2, [r7, #4]
 1093 00ac 9A42     		cmp	r2, r3
 1094 00ae 02D1     		bne	.L60
 374:.\main.c      ****         dataTransmissionComplete = true;
 1095              		.loc 1 374 0
 1096 00b0 084B     		ldr	r3, .L67+24
 1097 00b2 0122     		movs	r2, #1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 27


 1098 00b4 1A70     		strb	r2, [r3]
 1099              	.L60:
 375:.\main.c      ****     }
 376:.\main.c      **** }
 1100              		.loc 1 376 0
 1101 00b6 0837     		adds	r7, r7, #8
 1102              		.cfi_def_cfa_offset 8
 1103 00b8 BD46     		mov	sp, r7
 1104              		.cfi_def_cfa_register 13
 1105              		@ sp needed
 1106 00ba 80BD     		pop	{r7, pc}
 1107              	.L68:
 1108              		.align	2
 1109              	.L67:
 1110 00bc 00000000 		.word	networkState
 1111 00c0 00006040 		.word	1080033280
 1112 00c4 00008940 		.word	1082720256
 1113 00c8 00000000 		.word	diffManEncodedData
 1114 00cc 00000000 		.word	timerExpired
 1115 00d0 00000000 		.word	halfBitIndex
 1116 00d4 00000000 		.word	dataTransmissionComplete
 1117              		.cfi_endproc
 1118              	.LFE71:
 1119              		.size	transmitData, .-transmitData
 1120              		.section	.text.setNetworkStateOnLEDs,"ax",%progbits
 1121              		.align	2
 1122              		.global	setNetworkStateOnLEDs
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	setNetworkStateOnLEDs, %function
 1126              	setNetworkStateOnLEDs:
 1127              	.LFB72:
 377:.\main.c      **** 
 378:.\main.c      **** void setNetworkStateOnLEDs(){
 1128              		.loc 1 378 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 80B5     		push	{r7, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 7, -8
 1135              		.cfi_offset 14, -4
 1136 0002 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 379:.\main.c      **** 	 switch(networkState){
 1138              		.loc 1 379 0
 1139 0004 134B     		ldr	r3, .L75
 1140 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 0008 012B     		cmp	r3, #1
 1142 000a 04D0     		beq	.L71
 1143 000c 022B     		cmp	r3, #2
 1144 000e 16D0     		beq	.L72
 1145 0010 002B     		cmp	r3, #0
 1146 0012 0AD0     		beq	.L73
 380:.\main.c      ****         case busy:
 381:.\main.c      ****         {
 382:.\main.c      ****             LED4_Write(1);
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 28


 383:.\main.c      ****             LED3_Write(0);
 384:.\main.c      ****             LED2_Write(0);
 385:.\main.c      ****             break;
 386:.\main.c      ****         }
 387:.\main.c      ****         case idle:
 388:.\main.c      ****         {
 389:.\main.c      ****             LED3_Write(1);
 390:.\main.c      ****             LED4_Write(0);
 391:.\main.c      ****             LED2_Write(0);
 392:.\main.c      ****             break;
 393:.\main.c      ****         }
 394:.\main.c      ****         case collision:
 395:.\main.c      ****         {
 396:.\main.c      ****             LED2_Write(1);
 397:.\main.c      ****             LED4_Write(0);
 398:.\main.c      ****             LED3_Write(0);
 399:.\main.c      ****             break;
 400:.\main.c      ****         }
 401:.\main.c      ****         default:
 402:.\main.c      ****         {
 403:.\main.c      ****            //error
 404:.\main.c      ****             break;
 1147              		.loc 1 404 0
 1148 0014 1DE0     		b	.L69
 1149              	.L71:
 382:.\main.c      ****             LED3_Write(0);
 1150              		.loc 1 382 0
 1151 0016 0120     		movs	r0, #1
 1152 0018 FFF7FEFF 		bl	LED4_Write
 383:.\main.c      ****             LED2_Write(0);
 1153              		.loc 1 383 0
 1154 001c 0020     		movs	r0, #0
 1155 001e FFF7FEFF 		bl	LED3_Write
 384:.\main.c      ****             break;
 1156              		.loc 1 384 0
 1157 0022 0020     		movs	r0, #0
 1158 0024 FFF7FEFF 		bl	LED2_Write
 385:.\main.c      ****         }
 1159              		.loc 1 385 0
 1160 0028 13E0     		b	.L69
 1161              	.L73:
 389:.\main.c      ****             LED4_Write(0);
 1162              		.loc 1 389 0
 1163 002a 0120     		movs	r0, #1
 1164 002c FFF7FEFF 		bl	LED3_Write
 390:.\main.c      ****             LED2_Write(0);
 1165              		.loc 1 390 0
 1166 0030 0020     		movs	r0, #0
 1167 0032 FFF7FEFF 		bl	LED4_Write
 391:.\main.c      ****             break;
 1168              		.loc 1 391 0
 1169 0036 0020     		movs	r0, #0
 1170 0038 FFF7FEFF 		bl	LED2_Write
 392:.\main.c      ****         }
 1171              		.loc 1 392 0
 1172 003c 09E0     		b	.L69
 1173              	.L72:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 29


 396:.\main.c      ****             LED4_Write(0);
 1174              		.loc 1 396 0
 1175 003e 0120     		movs	r0, #1
 1176 0040 FFF7FEFF 		bl	LED2_Write
 397:.\main.c      ****             LED3_Write(0);
 1177              		.loc 1 397 0
 1178 0044 0020     		movs	r0, #0
 1179 0046 FFF7FEFF 		bl	LED4_Write
 398:.\main.c      ****             break;
 1180              		.loc 1 398 0
 1181 004a 0020     		movs	r0, #0
 1182 004c FFF7FEFF 		bl	LED3_Write
 399:.\main.c      ****         }
 1183              		.loc 1 399 0
 1184 0050 00BF     		nop
 1185              	.L69:
 405:.\main.c      ****         } 
 406:.\main.c      **** 	}
 407:.\main.c      **** }
 1186              		.loc 1 407 0
 1187 0052 80BD     		pop	{r7, pc}
 1188              	.L76:
 1189              		.align	2
 1190              	.L75:
 1191 0054 00000000 		.word	networkState
 1192              		.cfi_endproc
 1193              	.LFE72:
 1194              		.size	setNetworkStateOnLEDs, .-setNetworkStateOnLEDs
 1195              		.section	.text.getRandomNumber,"ax",%progbits
 1196              		.align	2
 1197              		.global	getRandomNumber
 1198              		.thumb
 1199              		.thumb_func
 1200              		.type	getRandomNumber, %function
 1201              	getRandomNumber:
 1202              	.LFB73:
 408:.\main.c      **** 
 409:.\main.c      **** /*
 410:.\main.c      **** Generates a random value from 1 to 128. Used in the random backoff time equation: (N/128)(0.800 sec
 411:.\main.c      **** */
 412:.\main.c      **** int getRandomNumber()
 413:.\main.c      **** {
 1203              		.loc 1 413 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 16
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207 0000 80B5     		push	{r7, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 84B0     		sub	sp, sp, #16
 1212              		.cfi_def_cfa_offset 24
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 414:.\main.c      ****     const int MIN_N = 1;
 1215              		.loc 1 414 0
 1216 0006 0123     		movs	r3, #1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 30


 1217 0008 FB60     		str	r3, [r7, #12]
 415:.\main.c      ****     const int MAX_N = 128;
 1218              		.loc 1 415 0
 1219 000a 8023     		movs	r3, #128
 1220 000c BB60     		str	r3, [r7, #8]
 416:.\main.c      ****         
 417:.\main.c      ****     int n;
 418:.\main.c      **** /*
 419:.\main.c      ****     Get first and second random numbers.
 420:.\main.c      ****     */
 421:.\main.c      ****     n =rand() % (MAX_N - MIN_N + 1) + MIN_N;
 1221              		.loc 1 421 0
 1222 000e FFF7FEFF 		bl	rand
 1223 0012 0246     		mov	r2, r0
 1224 0014 B968     		ldr	r1, [r7, #8]
 1225 0016 FB68     		ldr	r3, [r7, #12]
 1226 0018 CB1A     		subs	r3, r1, r3
 1227 001a 0133     		adds	r3, r3, #1
 1228 001c 92FBF3F1 		sdiv	r1, r2, r3
 1229 0020 03FB01F3 		mul	r3, r3, r1
 1230 0024 D21A     		subs	r2, r2, r3
 1231 0026 FB68     		ldr	r3, [r7, #12]
 1232 0028 1344     		add	r3, r3, r2
 1233 002a 7B60     		str	r3, [r7, #4]
 422:.\main.c      ****     return n;
 1234              		.loc 1 422 0
 1235 002c 7B68     		ldr	r3, [r7, #4]
 423:.\main.c      **** }
 1236              		.loc 1 423 0
 1237 002e 1846     		mov	r0, r3
 1238 0030 1037     		adds	r7, r7, #16
 1239              		.cfi_def_cfa_offset 8
 1240 0032 BD46     		mov	sp, r7
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 0034 80BD     		pop	{r7, pc}
 1244              		.cfi_endproc
 1245              	.LFE73:
 1246              		.size	getRandomNumber, .-getRandomNumber
 1247 0036 00BF     		.section	.text.diffManToASCII,"ax",%progbits
 1248              		.align	2
 1249              		.global	diffManToASCII
 1250              		.thumb
 1251              		.thumb_func
 1252              		.type	diffManToASCII, %function
 1253              	diffManToASCII:
 1254              	.LFB74:
 424:.\main.c      **** 
 425:.\main.c      **** /*
 426:.\main.c      **** Helper method.
 427:.\main.c      **** Convert differental manchester line encoded byte to ascii char
 428:.\main.c      **** 
 429:.\main.c      **** charPtr = pointer to char 
 430:.\main.c      **** */
 431:.\main.c      **** void diffManToASCII()
 432:.\main.c      **** {
 1255              		.loc 1 432 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 31


 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260 0000 80B4     		push	{r7}
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 7, -4
 1263 0002 83B0     		sub	sp, sp, #12
 1264              		.cfi_def_cfa_offset 16
 1265 0004 00AF     		add	r7, sp, #0
 1266              		.cfi_def_cfa_register 7
 433:.\main.c      ****     int i;
 434:.\main.c      ****     for(i = 0; i < EIGHT_BITS; i++){
 1267              		.loc 1 434 0
 1268 0006 0023     		movs	r3, #0
 1269 0008 7B60     		str	r3, [r7, #4]
 1270 000a 42E0     		b	.L80
 1271              	.L86:
 1272              	.LBB4:
 435:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1273              		.loc 1 435 0
 1274 000c 254B     		ldr	r3, .L87
 1275 000e 1B68     		ldr	r3, [r3]
 1276 0010 013B     		subs	r3, r3, #1
 1277 0012 254A     		ldr	r2, .L87+4
 1278 0014 D35C     		ldrb	r3, [r2, r3]
 1279 0016 FB70     		strb	r3, [r7, #3]
 436:.\main.c      ****         //send starting 1 bit (encoded)
 437:.\main.c      ****         if(diffManReceivedData[receivedDataIndex] == 1){
 1280              		.loc 1 437 0
 1281 0018 224B     		ldr	r3, .L87
 1282 001a 1B68     		ldr	r3, [r3]
 1283 001c 224A     		ldr	r2, .L87+4
 1284 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1285 0020 012B     		cmp	r3, #1
 1286 0022 17D1     		bne	.L81
 438:.\main.c      ****             //current half bit is 1
 439:.\main.c      ****             if(previousHalfBit == 1)
 1287              		.loc 1 439 0
 1288 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1289 0026 012B     		cmp	r3, #1
 1290 0028 0FD1     		bne	.L82
 440:.\main.c      ****             {
 441:.\main.c      ****                 receivedChar |= (1 << (7 - i));      
 1291              		.loc 1 441 0
 1292 002a 7B68     		ldr	r3, [r7, #4]
 1293 002c C3F10703 		rsb	r3, r3, #7
 1294 0030 0122     		movs	r2, #1
 1295 0032 02FA03F3 		lsl	r3, r2, r3
 1296 0036 DAB2     		uxtb	r2, r3
 1297 0038 1C4B     		ldr	r3, .L87+8
 1298 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 003c DBB2     		uxtb	r3, r3
 1300 003e 1343     		orrs	r3, r3, r2
 1301 0040 DBB2     		uxtb	r3, r3
 1302 0042 DAB2     		uxtb	r2, r3
 1303 0044 194B     		ldr	r3, .L87+8
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 32


 1304 0046 1A70     		strb	r2, [r3]
 1305 0048 1BE0     		b	.L84
 1306              	.L82:
 442:.\main.c      ****             }
 443:.\main.c      ****             else
 444:.\main.c      ****             {
 445:.\main.c      ****                 receivedChar |= (0 << (7 - i));    
 1307              		.loc 1 445 0
 1308 004a 184B     		ldr	r3, .L87+8
 1309 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1310 004e 174B     		ldr	r3, .L87+8
 1311 0050 1A70     		strb	r2, [r3]
 1312 0052 16E0     		b	.L84
 1313              	.L81:
 446:.\main.c      ****             }
 447:.\main.c      ****         }
 448:.\main.c      ****         else{
 449:.\main.c      ****             //current half bit is 0
 450:.\main.c      ****             if(previousHalfBit == 1)
 1314              		.loc 1 450 0
 1315 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1316 0056 012B     		cmp	r3, #1
 1317 0058 04D1     		bne	.L85
 451:.\main.c      ****             {
 452:.\main.c      ****                 receivedChar |= (0 << (7 - i));    
 1318              		.loc 1 452 0
 1319 005a 144B     		ldr	r3, .L87+8
 1320 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1321 005e 134B     		ldr	r3, .L87+8
 1322 0060 1A70     		strb	r2, [r3]
 1323 0062 0EE0     		b	.L84
 1324              	.L85:
 453:.\main.c      ****             }
 454:.\main.c      ****             else
 455:.\main.c      ****             {
 456:.\main.c      ****                 receivedChar |= (1 << (7 - i));    
 1325              		.loc 1 456 0
 1326 0064 7B68     		ldr	r3, [r7, #4]
 1327 0066 C3F10703 		rsb	r3, r3, #7
 1328 006a 0122     		movs	r2, #1
 1329 006c 02FA03F3 		lsl	r3, r2, r3
 1330 0070 DAB2     		uxtb	r2, r3
 1331 0072 0E4B     		ldr	r3, .L87+8
 1332 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0076 DBB2     		uxtb	r3, r3
 1334 0078 1343     		orrs	r3, r3, r2
 1335 007a DBB2     		uxtb	r3, r3
 1336 007c DAB2     		uxtb	r2, r3
 1337 007e 0B4B     		ldr	r3, .L87+8
 1338 0080 1A70     		strb	r2, [r3]
 1339              	.L84:
 457:.\main.c      ****             }
 458:.\main.c      ****         } 
 459:.\main.c      ****         receivedDataIndex += 2;
 1340              		.loc 1 459 0 discriminator 2
 1341 0082 084B     		ldr	r3, .L87
 1342 0084 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 33


 1343 0086 0233     		adds	r3, r3, #2
 1344 0088 064A     		ldr	r2, .L87
 1345 008a 1360     		str	r3, [r2]
 1346              	.LBE4:
 434:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1347              		.loc 1 434 0 discriminator 2
 1348 008c 7B68     		ldr	r3, [r7, #4]
 1349 008e 0133     		adds	r3, r3, #1
 1350 0090 7B60     		str	r3, [r7, #4]
 1351              	.L80:
 434:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1352              		.loc 1 434 0 is_stmt 0 discriminator 1
 1353 0092 7B68     		ldr	r3, [r7, #4]
 1354 0094 072B     		cmp	r3, #7
 1355 0096 B9DD     		ble	.L86
 460:.\main.c      ****     }//end for loop
 461:.\main.c      **** }
 1356              		.loc 1 461 0 is_stmt 1
 1357 0098 0C37     		adds	r7, r7, #12
 1358              		.cfi_def_cfa_offset 4
 1359 009a BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 009c 5DF8047B 		ldr	r7, [sp], #4
 1363              		.cfi_restore 7
 1364              		.cfi_def_cfa_offset 0
 1365 00a0 7047     		bx	lr
 1366              	.L88:
 1367 00a2 00BF     		.align	2
 1368              	.L87:
 1369 00a4 00000000 		.word	receivedDataIndex
 1370 00a8 00000000 		.word	diffManReceivedData
 1371 00ac 00000000 		.word	receivedChar
 1372              		.cfi_endproc
 1373              	.LFE74:
 1374              		.size	diffManToASCII, .-diffManToASCII
 1375              		.section	.text.printChar,"ax",%progbits
 1376              		.align	2
 1377              		.global	printChar
 1378              		.thumb
 1379              		.thumb_func
 1380              		.type	printChar, %function
 1381              	printChar:
 1382              	.LFB75:
 462:.\main.c      **** 
 463:.\main.c      **** //Formats char and prints to LCD
 464:.\main.c      **** void printChar(){
 1383              		.loc 1 464 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387 0000 80B5     		push	{r7, lr}
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 34


 465:.\main.c      ****     ///Remove leading 1 bit of char
 466:.\main.c      ****     receivedChar &= ASCII_CHAR_MASK;
 1393              		.loc 1 466 0
 1394 0004 064B     		ldr	r3, .L90
 1395 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 0008 03F07F03 		and	r3, r3, #127
 1397 000c DAB2     		uxtb	r2, r3
 1398 000e 044B     		ldr	r3, .L90
 1399 0010 1A70     		strb	r2, [r3]
 467:.\main.c      ****     
 468:.\main.c      ****     LCD_PutChar(receivedChar); 
 1400              		.loc 1 468 0
 1401 0012 034B     		ldr	r3, .L90
 1402 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 0016 1846     		mov	r0, r3
 1404 0018 FFF7FEFF 		bl	LCD_PutChar
 469:.\main.c      **** }
 1405              		.loc 1 469 0
 1406 001c 80BD     		pop	{r7, pc}
 1407              	.L91:
 1408 001e 00BF     		.align	2
 1409              	.L90:
 1410 0020 00000000 		.word	receivedChar
 1411              		.cfi_endproc
 1412              	.LFE75:
 1413              		.size	printChar, .-printChar
 1414              		.text
 1415              	.Letext0:
 1416              		.file 2 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1417              		.file 3 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1418              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1419              		.file 5 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1420              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1421              		.section	.debug_info,"",%progbits
 1422              	.Ldebug_info0:
 1423 0000 62040000 		.4byte	0x462
 1424 0004 0400     		.2byte	0x4
 1425 0006 00000000 		.4byte	.Ldebug_abbrev0
 1426 000a 04       		.byte	0x4
 1427 000b 01       		.uleb128 0x1
 1428 000c 1C010000 		.4byte	.LASF58
 1429 0010 01       		.byte	0x1
 1430 0011 4A030000 		.4byte	.LASF59
 1431 0015 A6000000 		.4byte	.LASF60
 1432 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1433 001d 00000000 		.4byte	0
 1434 0021 00000000 		.4byte	.Ldebug_line0
 1435 0025 02       		.uleb128 0x2
 1436 0026 01       		.byte	0x1
 1437 0027 06       		.byte	0x6
 1438 0028 FF010000 		.4byte	.LASF0
 1439 002c 02       		.uleb128 0x2
 1440 002d 01       		.byte	0x1
 1441 002e 08       		.byte	0x8
 1442 002f CA010000 		.4byte	.LASF1
 1443 0033 02       		.uleb128 0x2
 1444 0034 02       		.byte	0x2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 35


 1445 0035 05       		.byte	0x5
 1446 0036 67000000 		.4byte	.LASF2
 1447 003a 02       		.uleb128 0x2
 1448 003b 02       		.byte	0x2
 1449 003c 07       		.byte	0x7
 1450 003d 8F020000 		.4byte	.LASF3
 1451 0041 03       		.uleb128 0x3
 1452 0042 53030000 		.4byte	.LASF9
 1453 0046 02       		.byte	0x2
 1454 0047 3F       		.byte	0x3f
 1455 0048 4C000000 		.4byte	0x4c
 1456 004c 02       		.uleb128 0x2
 1457 004d 04       		.byte	0x4
 1458 004e 05       		.byte	0x5
 1459 004f 6F020000 		.4byte	.LASF4
 1460 0053 02       		.uleb128 0x2
 1461 0054 04       		.byte	0x4
 1462 0055 07       		.byte	0x7
 1463 0056 3B020000 		.4byte	.LASF5
 1464 005a 02       		.uleb128 0x2
 1465 005b 08       		.byte	0x8
 1466 005c 05       		.byte	0x5
 1467 005d E3000000 		.4byte	.LASF6
 1468 0061 02       		.uleb128 0x2
 1469 0062 08       		.byte	0x8
 1470 0063 07       		.byte	0x7
 1471 0064 F1000000 		.4byte	.LASF7
 1472 0068 04       		.uleb128 0x4
 1473 0069 04       		.byte	0x4
 1474 006a 05       		.byte	0x5
 1475 006b 696E7400 		.ascii	"int\000"
 1476 006f 02       		.uleb128 0x2
 1477 0070 04       		.byte	0x4
 1478 0071 07       		.byte	0x7
 1479 0072 2E020000 		.4byte	.LASF8
 1480 0076 03       		.uleb128 0x3
 1481 0077 87020000 		.4byte	.LASF10
 1482 007b 03       		.byte	0x3
 1483 007c 2C       		.byte	0x2c
 1484 007d 41000000 		.4byte	0x41
 1485 0081 03       		.uleb128 0x3
 1486 0082 95000000 		.4byte	.LASF11
 1487 0086 04       		.byte	0x4
 1488 0087 C2       		.byte	0xc2
 1489 0088 2C000000 		.4byte	0x2c
 1490 008c 02       		.uleb128 0x2
 1491 008d 04       		.byte	0x4
 1492 008e 04       		.byte	0x4
 1493 008f DD000000 		.4byte	.LASF12
 1494 0093 02       		.uleb128 0x2
 1495 0094 08       		.byte	0x8
 1496 0095 04       		.byte	0x4
 1497 0096 DE020000 		.4byte	.LASF13
 1498 009a 02       		.uleb128 0x2
 1499 009b 01       		.byte	0x1
 1500 009c 08       		.byte	0x8
 1501 009d 5D020000 		.4byte	.LASF14
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 36


 1502 00a1 05       		.uleb128 0x5
 1503 00a2 C7020000 		.4byte	.LASF15
 1504 00a6 04       		.byte	0x4
 1505 00a7 6C01     		.2byte	0x16c
 1506 00a9 AD000000 		.4byte	0xad
 1507 00ad 06       		.uleb128 0x6
 1508 00ae 81000000 		.4byte	0x81
 1509 00b2 02       		.uleb128 0x2
 1510 00b3 04       		.byte	0x4
 1511 00b4 07       		.byte	0x7
 1512 00b5 36000000 		.4byte	.LASF16
 1513 00b9 07       		.uleb128 0x7
 1514 00ba 04       		.byte	0x4
 1515 00bb 9A000000 		.4byte	0x9a
 1516 00bf 03       		.uleb128 0x3
 1517 00c0 81000000 		.4byte	.LASF17
 1518 00c4 05       		.byte	0x5
 1519 00c5 7A       		.byte	0x7a
 1520 00c6 4C000000 		.4byte	0x4c
 1521 00ca 08       		.uleb128 0x8
 1522 00cb 20000000 		.4byte	.LASF61
 1523 00cf 01       		.byte	0x1
 1524 00d0 01       		.byte	0x1
 1525 00d1 1F       		.byte	0x1f
 1526 00d2 E9000000 		.4byte	0xe9
 1527 00d6 09       		.uleb128 0x9
 1528 00d7 1A020000 		.4byte	.LASF18
 1529 00db 00       		.sleb128 0
 1530 00dc 09       		.uleb128 0x9
 1531 00dd B0020000 		.4byte	.LASF19
 1532 00e1 01       		.sleb128 1
 1533 00e2 09       		.uleb128 0x9
 1534 00e3 77000000 		.4byte	.LASF20
 1535 00e7 02       		.sleb128 2
 1536 00e8 00       		.byte	0
 1537 00e9 0A       		.uleb128 0xa
 1538 00ea 0D000000 		.4byte	.LASF21
 1539 00ee 01       		.byte	0x1
 1540 00ef 26       		.byte	0x26
 1541 00f0 00000000 		.4byte	.LFB63
 1542 00f4 28000000 		.4byte	.LFE63-.LFB63
 1543 00f8 01       		.uleb128 0x1
 1544 00f9 9C       		.byte	0x9c
 1545 00fa 0A       		.uleb128 0xa
 1546 00fb 57000000 		.4byte	.LASF22
 1547 00ff 01       		.byte	0x1
 1548 0100 30       		.byte	0x30
 1549 0101 00000000 		.4byte	.LFB64
 1550 0105 58000000 		.4byte	.LFE64-.LFB64
 1551 0109 01       		.uleb128 0x1
 1552 010a 9C       		.byte	0x9c
 1553 010b 0A       		.uleb128 0xa
 1554 010c 77030000 		.4byte	.LASF23
 1555 0110 01       		.byte	0x1
 1556 0111 41       		.byte	0x41
 1557 0112 00000000 		.4byte	.LFB65
 1558 0116 1C000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 37


 1559 011a 01       		.uleb128 0x1
 1560 011b 9C       		.byte	0x9c
 1561 011c 0B       		.uleb128 0xb
 1562 011d 28030000 		.4byte	.LASF24
 1563 0121 01       		.byte	0x1
 1564 0122 48       		.byte	0x48
 1565 0123 00000000 		.4byte	.LFB66
 1566 0127 38000000 		.4byte	.LFE66-.LFB66
 1567 012b 01       		.uleb128 0x1
 1568 012c 9C       		.byte	0x9c
 1569 012d 0C       		.uleb128 0xc
 1570 012e 52000000 		.4byte	.LASF28
 1571 0132 01       		.byte	0x1
 1572 0133 50       		.byte	0x50
 1573 0134 68000000 		.4byte	0x68
 1574 0138 00000000 		.4byte	.LFB67
 1575 013c 2C020000 		.4byte	.LFE67-.LFB67
 1576 0140 01       		.uleb128 0x1
 1577 0141 9C       		.byte	0x9c
 1578 0142 93010000 		.4byte	0x193
 1579 0146 0D       		.uleb128 0xd
 1580 0147 727800   		.ascii	"rx\000"
 1581 014a 01       		.byte	0x1
 1582 014b 53       		.byte	0x53
 1583 014c 9A000000 		.4byte	0x9a
 1584 0150 02       		.uleb128 0x2
 1585 0151 91       		.byte	0x91
 1586 0152 76       		.sleb128 -10
 1587 0153 0E       		.uleb128 0xe
 1588 0154 9B000000 		.4byte	.LASF25
 1589 0158 01       		.byte	0x1
 1590 0159 54       		.byte	0x54
 1591 015a 93010000 		.4byte	0x193
 1592 015e 03       		.uleb128 0x3
 1593 015f 91       		.byte	0x91
 1594 0160 907F     		.sleb128 -112
 1595 0162 0E       		.uleb128 0xe
 1596 0163 78020000 		.4byte	.LASF26
 1597 0167 01       		.byte	0x1
 1598 0168 55       		.byte	0x55
 1599 0169 81000000 		.4byte	0x81
 1600 016d 02       		.uleb128 0x2
 1601 016e 91       		.byte	0x91
 1602 016f 77       		.sleb128 -9
 1603 0170 0E       		.uleb128 0xe
 1604 0171 A2020000 		.4byte	.LASF27
 1605 0175 01       		.byte	0x1
 1606 0176 5F       		.byte	0x5f
 1607 0177 BF000000 		.4byte	0xbf
 1608 017b 03       		.uleb128 0x3
 1609 017c 91       		.byte	0x91
 1610 017d 8C7F     		.sleb128 -116
 1611 017f 0F       		.uleb128 0xf
 1612 0180 88000000 		.4byte	.LBB2
 1613 0184 56000000 		.4byte	.LBE2-.LBB2
 1614 0188 10       		.uleb128 0x10
 1615 0189 6900     		.ascii	"i\000"
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 38


 1616 018b 01       		.byte	0x1
 1617 018c 8B       		.byte	0x8b
 1618 018d 68000000 		.4byte	0x68
 1619 0191 00       		.byte	0
 1620 0192 00       		.byte	0
 1621 0193 11       		.uleb128 0x11
 1622 0194 9A000000 		.4byte	0x9a
 1623 0198 A3010000 		.4byte	0x1a3
 1624 019c 12       		.uleb128 0x12
 1625 019d B2000000 		.4byte	0xb2
 1626 01a1 63       		.byte	0x63
 1627 01a2 00       		.byte	0
 1628 01a3 13       		.uleb128 0x13
 1629 01a4 E7010000 		.4byte	.LASF35
 1630 01a8 01       		.byte	0x1
 1631 01a9 F5       		.byte	0xf5
 1632 01aa 00000000 		.4byte	.LFB68
 1633 01ae 48000000 		.4byte	.LFE68-.LFB68
 1634 01b2 01       		.uleb128 0x1
 1635 01b3 9C       		.byte	0x9c
 1636 01b4 14       		.uleb128 0x14
 1637 01b5 BA010000 		.4byte	.LASF29
 1638 01b9 01       		.byte	0x1
 1639 01ba 0101     		.2byte	0x101
 1640 01bc 00000000 		.4byte	.LFB69
 1641 01c0 38000000 		.4byte	.LFE69-.LFB69
 1642 01c4 01       		.uleb128 0x1
 1643 01c5 9C       		.byte	0x9c
 1644 01c6 F6010000 		.4byte	0x1f6
 1645 01ca 15       		.uleb128 0x15
 1646 01cb 9B000000 		.4byte	.LASF25
 1647 01cf 01       		.byte	0x1
 1648 01d0 0101     		.2byte	0x101
 1649 01d2 B9000000 		.4byte	0xb9
 1650 01d6 02       		.uleb128 0x2
 1651 01d7 91       		.byte	0x91
 1652 01d8 6C       		.sleb128 -20
 1653 01d9 15       		.uleb128 0x15
 1654 01da 78020000 		.4byte	.LASF26
 1655 01de 01       		.byte	0x1
 1656 01df 0101     		.2byte	0x101
 1657 01e1 81000000 		.4byte	0x81
 1658 01e5 02       		.uleb128 0x2
 1659 01e6 91       		.byte	0x91
 1660 01e7 6B       		.sleb128 -21
 1661 01e8 16       		.uleb128 0x16
 1662 01e9 6900     		.ascii	"i\000"
 1663 01eb 01       		.byte	0x1
 1664 01ec 0301     		.2byte	0x103
 1665 01ee 6F000000 		.4byte	0x6f
 1666 01f2 02       		.uleb128 0x2
 1667 01f3 91       		.byte	0x91
 1668 01f4 74       		.sleb128 -12
 1669 01f5 00       		.byte	0
 1670 01f6 17       		.uleb128 0x17
 1671 01f7 0B020000 		.4byte	.LASF30
 1672 01fb 01       		.byte	0x1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 39


 1673 01fc 0D01     		.2byte	0x10d
 1674 01fe 00000000 		.4byte	.LFB70
 1675 0202 C4010000 		.4byte	.LFE70-.LFB70
 1676 0206 01       		.uleb128 0x1
 1677 0207 9C       		.byte	0x9c
 1678 0208 56020000 		.4byte	0x256
 1679 020c 15       		.uleb128 0x15
 1680 020d 53020000 		.4byte	.LASF31
 1681 0211 01       		.byte	0x1
 1682 0212 0D01     		.2byte	0x10d
 1683 0214 9A000000 		.4byte	0x9a
 1684 0218 03       		.uleb128 0x3
 1685 0219 91       		.byte	0x91
 1686 021a 977F     		.sleb128 -105
 1687 021c 18       		.uleb128 0x18
 1688 021d 91030000 		.4byte	.LASF32
 1689 0221 01       		.byte	0x1
 1690 0222 0F01     		.2byte	0x10f
 1691 0224 81000000 		.4byte	0x81
 1692 0228 02       		.uleb128 0x2
 1693 0229 91       		.byte	0x91
 1694 022a 77       		.sleb128 -9
 1695 022b 18       		.uleb128 0x18
 1696 022c 38030000 		.4byte	.LASF33
 1697 0230 01       		.byte	0x1
 1698 0231 2001     		.2byte	0x120
 1699 0233 56020000 		.4byte	0x256
 1700 0237 03       		.uleb128 0x3
 1701 0238 91       		.byte	0x91
 1702 0239 9C7F     		.sleb128 -100
 1703 023b 16       		.uleb128 0x16
 1704 023c 6900     		.ascii	"i\000"
 1705 023e 01       		.byte	0x1
 1706 023f 2101     		.2byte	0x121
 1707 0241 68000000 		.4byte	0x68
 1708 0245 02       		.uleb128 0x2
 1709 0246 91       		.byte	0x91
 1710 0247 70       		.sleb128 -16
 1711 0248 16       		.uleb128 0x16
 1712 0249 6A00     		.ascii	"j\000"
 1713 024b 01       		.byte	0x1
 1714 024c 2A01     		.2byte	0x12a
 1715 024e 68000000 		.4byte	0x68
 1716 0252 02       		.uleb128 0x2
 1717 0253 91       		.byte	0x91
 1718 0254 6C       		.sleb128 -20
 1719 0255 00       		.byte	0
 1720 0256 11       		.uleb128 0x11
 1721 0257 6F000000 		.4byte	0x6f
 1722 025b 66020000 		.4byte	0x266
 1723 025f 12       		.uleb128 0x12
 1724 0260 B2000000 		.4byte	0xb2
 1725 0264 13       		.byte	0x13
 1726 0265 00       		.byte	0
 1727 0266 19       		.uleb128 0x19
 1728 0267 00000000 		.4byte	.LASF40
 1729 026b 01       		.byte	0x1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 40


 1730 026c 5D01     		.2byte	0x15d
 1731 026e 00000000 		.4byte	.LFB71
 1732 0272 D8000000 		.4byte	.LFE71-.LFB71
 1733 0276 01       		.uleb128 0x1
 1734 0277 9C       		.byte	0x9c
 1735 0278 A3020000 		.4byte	0x2a3
 1736 027c 16       		.uleb128 0x16
 1737 027d 6900     		.ascii	"i\000"
 1738 027f 01       		.byte	0x1
 1739 0280 5E01     		.2byte	0x15e
 1740 0282 68000000 		.4byte	0x68
 1741 0286 02       		.uleb128 0x2
 1742 0287 91       		.byte	0x91
 1743 0288 74       		.sleb128 -12
 1744 0289 0F       		.uleb128 0xf
 1745 028a 1C000000 		.4byte	.LBB3
 1746 028e 50000000 		.4byte	.LBE3-.LBB3
 1747 0292 18       		.uleb128 0x18
 1748 0293 71000000 		.4byte	.LASF34
 1749 0297 01       		.byte	0x1
 1750 0298 6501     		.2byte	0x165
 1751 029a 68000000 		.4byte	0x68
 1752 029e 02       		.uleb128 0x2
 1753 029f 91       		.byte	0x91
 1754 02a0 70       		.sleb128 -16
 1755 02a1 00       		.byte	0
 1756 02a2 00       		.byte	0
 1757 02a3 1A       		.uleb128 0x1a
 1758 02a4 E5020000 		.4byte	.LASF36
 1759 02a8 01       		.byte	0x1
 1760 02a9 7A01     		.2byte	0x17a
 1761 02ab 00000000 		.4byte	.LFB72
 1762 02af 58000000 		.4byte	.LFE72-.LFB72
 1763 02b3 01       		.uleb128 0x1
 1764 02b4 9C       		.byte	0x9c
 1765 02b5 1B       		.uleb128 0x1b
 1766 02b6 26000000 		.4byte	.LASF37
 1767 02ba 01       		.byte	0x1
 1768 02bb 9C01     		.2byte	0x19c
 1769 02bd 68000000 		.4byte	0x68
 1770 02c1 00000000 		.4byte	.LFB73
 1771 02c5 36000000 		.4byte	.LFE73-.LFB73
 1772 02c9 01       		.uleb128 0x1
 1773 02ca 9C       		.byte	0x9c
 1774 02cb FB020000 		.4byte	0x2fb
 1775 02cf 18       		.uleb128 0x18
 1776 02d0 4D020000 		.4byte	.LASF38
 1777 02d4 01       		.byte	0x1
 1778 02d5 9E01     		.2byte	0x19e
 1779 02d7 FB020000 		.4byte	0x2fb
 1780 02db 02       		.uleb128 0x2
 1781 02dc 91       		.byte	0x91
 1782 02dd 74       		.sleb128 -12
 1783 02de 18       		.uleb128 0x18
 1784 02df AA010000 		.4byte	.LASF39
 1785 02e3 01       		.byte	0x1
 1786 02e4 9F01     		.2byte	0x19f
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 41


 1787 02e6 FB020000 		.4byte	0x2fb
 1788 02ea 02       		.uleb128 0x2
 1789 02eb 91       		.byte	0x91
 1790 02ec 70       		.sleb128 -16
 1791 02ed 16       		.uleb128 0x16
 1792 02ee 6E00     		.ascii	"n\000"
 1793 02f0 01       		.byte	0x1
 1794 02f1 A101     		.2byte	0x1a1
 1795 02f3 68000000 		.4byte	0x68
 1796 02f7 02       		.uleb128 0x2
 1797 02f8 91       		.byte	0x91
 1798 02f9 6C       		.sleb128 -20
 1799 02fa 00       		.byte	0
 1800 02fb 1C       		.uleb128 0x1c
 1801 02fc 68000000 		.4byte	0x68
 1802 0300 1D       		.uleb128 0x1d
 1803 0301 1F020000 		.4byte	.LASF41
 1804 0305 01       		.byte	0x1
 1805 0306 AF01     		.2byte	0x1af
 1806 0308 00000000 		.4byte	.LFB74
 1807 030c B0000000 		.4byte	.LFE74-.LFB74
 1808 0310 01       		.uleb128 0x1
 1809 0311 9C       		.byte	0x9c
 1810 0312 3D030000 		.4byte	0x33d
 1811 0316 16       		.uleb128 0x16
 1812 0317 6900     		.ascii	"i\000"
 1813 0319 01       		.byte	0x1
 1814 031a B101     		.2byte	0x1b1
 1815 031c 68000000 		.4byte	0x68
 1816 0320 02       		.uleb128 0x2
 1817 0321 91       		.byte	0x91
 1818 0322 74       		.sleb128 -12
 1819 0323 0F       		.uleb128 0xf
 1820 0324 0C000000 		.4byte	.LBB4
 1821 0328 80000000 		.4byte	.LBE4-.LBB4
 1822 032c 18       		.uleb128 0x18
 1823 032d 91030000 		.4byte	.LASF32
 1824 0331 01       		.byte	0x1
 1825 0332 B301     		.2byte	0x1b3
 1826 0334 81000000 		.4byte	0x81
 1827 0338 02       		.uleb128 0x2
 1828 0339 91       		.byte	0x91
 1829 033a 73       		.sleb128 -13
 1830 033b 00       		.byte	0
 1831 033c 00       		.byte	0
 1832 033d 1A       		.uleb128 0x1a
 1833 033e B0010000 		.4byte	.LASF42
 1834 0342 01       		.byte	0x1
 1835 0343 D001     		.2byte	0x1d0
 1836 0345 00000000 		.4byte	.LFB75
 1837 0349 24000000 		.4byte	.LFE75-.LFB75
 1838 034d 01       		.uleb128 0x1
 1839 034e 9C       		.byte	0x9c
 1840 034f 1E       		.uleb128 0x1e
 1841 0350 84030000 		.4byte	.LASF43
 1842 0354 06       		.byte	0x6
 1843 0355 2A06     		.2byte	0x62a
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 42


 1844 0357 5B030000 		.4byte	0x35b
 1845 035b 06       		.uleb128 0x6
 1846 035c 76000000 		.4byte	0x76
 1847 0360 11       		.uleb128 0x11
 1848 0361 68000000 		.4byte	0x68
 1849 0365 71030000 		.4byte	0x371
 1850 0369 1F       		.uleb128 0x1f
 1851 036a B2000000 		.4byte	0xb2
 1852 036e 1F03     		.2byte	0x31f
 1853 0370 00       		.byte	0
 1854 0371 20       		.uleb128 0x20
 1855 0372 3F000000 		.4byte	.LASF44
 1856 0376 01       		.byte	0x1
 1857 0377 1A       		.byte	0x1a
 1858 0378 60030000 		.4byte	0x360
 1859 037c 05       		.uleb128 0x5
 1860 037d 03       		.byte	0x3
 1861 037e 00000000 		.4byte	diffManEncodedData
 1862 0382 11       		.uleb128 0x11
 1863 0383 81000000 		.4byte	0x81
 1864 0387 92030000 		.4byte	0x392
 1865 038b 12       		.uleb128 0x12
 1866 038c B2000000 		.4byte	0xb2
 1867 0390 63       		.byte	0x63
 1868 0391 00       		.byte	0
 1869 0392 20       		.uleb128 0x20
 1870 0393 FB020000 		.4byte	.LASF45
 1871 0397 01       		.byte	0x1
 1872 0398 1B       		.byte	0x1b
 1873 0399 82030000 		.4byte	0x382
 1874 039d 05       		.uleb128 0x5
 1875 039e 03       		.byte	0x3
 1876 039f 00000000 		.4byte	diffManReceivedData
 1877 03a3 20       		.uleb128 0x20
 1878 03a4 CC020000 		.4byte	.LASF46
 1879 03a8 01       		.byte	0x1
 1880 03a9 1C       		.byte	0x1c
 1881 03aa 68000000 		.4byte	0x68
 1882 03ae 05       		.uleb128 0x5
 1883 03af 03       		.byte	0x3
 1884 03b0 00000000 		.4byte	receivedDataIndex
 1885 03b4 20       		.uleb128 0x20
 1886 03b5 B5020000 		.4byte	.LASF47
 1887 03b9 01       		.byte	0x1
 1888 03ba 1C       		.byte	0x1c
 1889 03bb 68000000 		.4byte	0x68
 1890 03bf 05       		.uleb128 0x5
 1891 03c0 03       		.byte	0x3
 1892 03c1 00000000 		.4byte	receivedDataCount
 1893 03c5 20       		.uleb128 0x20
 1894 03c6 5D030000 		.4byte	.LASF48
 1895 03ca 01       		.byte	0x1
 1896 03cb 1D       		.byte	0x1d
 1897 03cc 68000000 		.4byte	0x68
 1898 03d0 05       		.uleb128 0x5
 1899 03d1 03       		.byte	0x3
 1900 03d2 00000000 		.4byte	halfBitIndex
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 43


 1901 03d6 20       		.uleb128 0x20
 1902 03d7 D8010000 		.4byte	.LASF49
 1903 03db 01       		.byte	0x1
 1904 03dc 1D       		.byte	0x1d
 1905 03dd 68000000 		.4byte	0x68
 1906 03e1 05       		.uleb128 0x5
 1907 03e2 03       		.byte	0x3
 1908 03e3 00000000 		.4byte	currentDataPos
 1909 03e7 20       		.uleb128 0x20
 1910 03e8 6A030000 		.4byte	.LASF50
 1911 03ec 01       		.byte	0x1
 1912 03ed 1D       		.byte	0x1d
 1913 03ee 68000000 		.4byte	0x68
 1914 03f2 05       		.uleb128 0x5
 1915 03f3 03       		.byte	0x3
 1916 03f4 00000000 		.4byte	lengthOfData
 1917 03f8 20       		.uleb128 0x20
 1918 03f9 A1030000 		.4byte	.LASF51
 1919 03fd 01       		.byte	0x1
 1920 03fe 1E       		.byte	0x1e
 1921 03ff 09040000 		.4byte	0x409
 1922 0403 05       		.uleb128 0x5
 1923 0404 03       		.byte	0x3
 1924 0405 00000000 		.4byte	timerExpired
 1925 0409 02       		.uleb128 0x2
 1926 040a 01       		.byte	0x1
 1927 040b 02       		.byte	0x2
 1928 040c AA020000 		.4byte	.LASF52
 1929 0410 20       		.uleb128 0x20
 1930 0411 0F030000 		.4byte	.LASF53
 1931 0415 01       		.byte	0x1
 1932 0416 1E       		.byte	0x1e
 1933 0417 09040000 		.4byte	0x409
 1934 041b 05       		.uleb128 0x5
 1935 041c 03       		.byte	0x3
 1936 041d 00000000 		.4byte	dataTransmissionComplete
 1937 0421 20       		.uleb128 0x20
 1938 0422 AE030000 		.4byte	.LASF54
 1939 0426 01       		.byte	0x1
 1940 0427 1E       		.byte	0x1e
 1941 0428 09040000 		.4byte	0x409
 1942 042c 05       		.uleb128 0x5
 1943 042d 03       		.byte	0x3
 1944 042e 00000000 		.4byte	powerOnEdge
 1945 0432 20       		.uleb128 0x20
 1946 0433 88000000 		.4byte	.LASF55
 1947 0437 01       		.byte	0x1
 1948 0438 1F       		.byte	0x1f
 1949 0439 CA000000 		.4byte	0xca
 1950 043d 05       		.uleb128 0x5
 1951 043e 03       		.byte	0x3
 1952 043f 00000000 		.4byte	networkState
 1953 0443 20       		.uleb128 0x20
 1954 0444 62020000 		.4byte	.LASF56
 1955 0448 01       		.byte	0x1
 1956 0449 21       		.byte	0x21
 1957 044a 9A000000 		.4byte	0x9a
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 44


 1958 044e 05       		.uleb128 0x5
 1959 044f 03       		.byte	0x3
 1960 0450 00000000 		.4byte	receivedChar
 1961 0454 20       		.uleb128 0x20
 1962 0455 08010000 		.4byte	.LASF57
 1963 0459 01       		.byte	0x1
 1964 045a 24       		.byte	0x24
 1965 045b 68000000 		.4byte	0x68
 1966 045f 05       		.uleb128 0x5
 1967 0460 03       		.byte	0x3
 1968 0461 00000000 		.4byte	timerInterruptCount
 1969 0465 00       		.byte	0
 1970              		.section	.debug_abbrev,"",%progbits
 1971              	.Ldebug_abbrev0:
 1972 0000 01       		.uleb128 0x1
 1973 0001 11       		.uleb128 0x11
 1974 0002 01       		.byte	0x1
 1975 0003 25       		.uleb128 0x25
 1976 0004 0E       		.uleb128 0xe
 1977 0005 13       		.uleb128 0x13
 1978 0006 0B       		.uleb128 0xb
 1979 0007 03       		.uleb128 0x3
 1980 0008 0E       		.uleb128 0xe
 1981 0009 1B       		.uleb128 0x1b
 1982 000a 0E       		.uleb128 0xe
 1983 000b 55       		.uleb128 0x55
 1984 000c 17       		.uleb128 0x17
 1985 000d 11       		.uleb128 0x11
 1986 000e 01       		.uleb128 0x1
 1987 000f 10       		.uleb128 0x10
 1988 0010 17       		.uleb128 0x17
 1989 0011 00       		.byte	0
 1990 0012 00       		.byte	0
 1991 0013 02       		.uleb128 0x2
 1992 0014 24       		.uleb128 0x24
 1993 0015 00       		.byte	0
 1994 0016 0B       		.uleb128 0xb
 1995 0017 0B       		.uleb128 0xb
 1996 0018 3E       		.uleb128 0x3e
 1997 0019 0B       		.uleb128 0xb
 1998 001a 03       		.uleb128 0x3
 1999 001b 0E       		.uleb128 0xe
 2000 001c 00       		.byte	0
 2001 001d 00       		.byte	0
 2002 001e 03       		.uleb128 0x3
 2003 001f 16       		.uleb128 0x16
 2004 0020 00       		.byte	0
 2005 0021 03       		.uleb128 0x3
 2006 0022 0E       		.uleb128 0xe
 2007 0023 3A       		.uleb128 0x3a
 2008 0024 0B       		.uleb128 0xb
 2009 0025 3B       		.uleb128 0x3b
 2010 0026 0B       		.uleb128 0xb
 2011 0027 49       		.uleb128 0x49
 2012 0028 13       		.uleb128 0x13
 2013 0029 00       		.byte	0
 2014 002a 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 45


 2015 002b 04       		.uleb128 0x4
 2016 002c 24       		.uleb128 0x24
 2017 002d 00       		.byte	0
 2018 002e 0B       		.uleb128 0xb
 2019 002f 0B       		.uleb128 0xb
 2020 0030 3E       		.uleb128 0x3e
 2021 0031 0B       		.uleb128 0xb
 2022 0032 03       		.uleb128 0x3
 2023 0033 08       		.uleb128 0x8
 2024 0034 00       		.byte	0
 2025 0035 00       		.byte	0
 2026 0036 05       		.uleb128 0x5
 2027 0037 16       		.uleb128 0x16
 2028 0038 00       		.byte	0
 2029 0039 03       		.uleb128 0x3
 2030 003a 0E       		.uleb128 0xe
 2031 003b 3A       		.uleb128 0x3a
 2032 003c 0B       		.uleb128 0xb
 2033 003d 3B       		.uleb128 0x3b
 2034 003e 05       		.uleb128 0x5
 2035 003f 49       		.uleb128 0x49
 2036 0040 13       		.uleb128 0x13
 2037 0041 00       		.byte	0
 2038 0042 00       		.byte	0
 2039 0043 06       		.uleb128 0x6
 2040 0044 35       		.uleb128 0x35
 2041 0045 00       		.byte	0
 2042 0046 49       		.uleb128 0x49
 2043 0047 13       		.uleb128 0x13
 2044 0048 00       		.byte	0
 2045 0049 00       		.byte	0
 2046 004a 07       		.uleb128 0x7
 2047 004b 0F       		.uleb128 0xf
 2048 004c 00       		.byte	0
 2049 004d 0B       		.uleb128 0xb
 2050 004e 0B       		.uleb128 0xb
 2051 004f 49       		.uleb128 0x49
 2052 0050 13       		.uleb128 0x13
 2053 0051 00       		.byte	0
 2054 0052 00       		.byte	0
 2055 0053 08       		.uleb128 0x8
 2056 0054 04       		.uleb128 0x4
 2057 0055 01       		.byte	0x1
 2058 0056 03       		.uleb128 0x3
 2059 0057 0E       		.uleb128 0xe
 2060 0058 0B       		.uleb128 0xb
 2061 0059 0B       		.uleb128 0xb
 2062 005a 3A       		.uleb128 0x3a
 2063 005b 0B       		.uleb128 0xb
 2064 005c 3B       		.uleb128 0x3b
 2065 005d 0B       		.uleb128 0xb
 2066 005e 01       		.uleb128 0x1
 2067 005f 13       		.uleb128 0x13
 2068 0060 00       		.byte	0
 2069 0061 00       		.byte	0
 2070 0062 09       		.uleb128 0x9
 2071 0063 28       		.uleb128 0x28
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 46


 2072 0064 00       		.byte	0
 2073 0065 03       		.uleb128 0x3
 2074 0066 0E       		.uleb128 0xe
 2075 0067 1C       		.uleb128 0x1c
 2076 0068 0D       		.uleb128 0xd
 2077 0069 00       		.byte	0
 2078 006a 00       		.byte	0
 2079 006b 0A       		.uleb128 0xa
 2080 006c 2E       		.uleb128 0x2e
 2081 006d 00       		.byte	0
 2082 006e 3F       		.uleb128 0x3f
 2083 006f 19       		.uleb128 0x19
 2084 0070 03       		.uleb128 0x3
 2085 0071 0E       		.uleb128 0xe
 2086 0072 3A       		.uleb128 0x3a
 2087 0073 0B       		.uleb128 0xb
 2088 0074 3B       		.uleb128 0x3b
 2089 0075 0B       		.uleb128 0xb
 2090 0076 27       		.uleb128 0x27
 2091 0077 19       		.uleb128 0x19
 2092 0078 11       		.uleb128 0x11
 2093 0079 01       		.uleb128 0x1
 2094 007a 12       		.uleb128 0x12
 2095 007b 06       		.uleb128 0x6
 2096 007c 40       		.uleb128 0x40
 2097 007d 18       		.uleb128 0x18
 2098 007e 9642     		.uleb128 0x2116
 2099 0080 19       		.uleb128 0x19
 2100 0081 00       		.byte	0
 2101 0082 00       		.byte	0
 2102 0083 0B       		.uleb128 0xb
 2103 0084 2E       		.uleb128 0x2e
 2104 0085 00       		.byte	0
 2105 0086 3F       		.uleb128 0x3f
 2106 0087 19       		.uleb128 0x19
 2107 0088 03       		.uleb128 0x3
 2108 0089 0E       		.uleb128 0xe
 2109 008a 3A       		.uleb128 0x3a
 2110 008b 0B       		.uleb128 0xb
 2111 008c 3B       		.uleb128 0x3b
 2112 008d 0B       		.uleb128 0xb
 2113 008e 27       		.uleb128 0x27
 2114 008f 19       		.uleb128 0x19
 2115 0090 11       		.uleb128 0x11
 2116 0091 01       		.uleb128 0x1
 2117 0092 12       		.uleb128 0x12
 2118 0093 06       		.uleb128 0x6
 2119 0094 40       		.uleb128 0x40
 2120 0095 18       		.uleb128 0x18
 2121 0096 9742     		.uleb128 0x2117
 2122 0098 19       		.uleb128 0x19
 2123 0099 00       		.byte	0
 2124 009a 00       		.byte	0
 2125 009b 0C       		.uleb128 0xc
 2126 009c 2E       		.uleb128 0x2e
 2127 009d 01       		.byte	0x1
 2128 009e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 47


 2129 009f 19       		.uleb128 0x19
 2130 00a0 03       		.uleb128 0x3
 2131 00a1 0E       		.uleb128 0xe
 2132 00a2 3A       		.uleb128 0x3a
 2133 00a3 0B       		.uleb128 0xb
 2134 00a4 3B       		.uleb128 0x3b
 2135 00a5 0B       		.uleb128 0xb
 2136 00a6 49       		.uleb128 0x49
 2137 00a7 13       		.uleb128 0x13
 2138 00a8 11       		.uleb128 0x11
 2139 00a9 01       		.uleb128 0x1
 2140 00aa 12       		.uleb128 0x12
 2141 00ab 06       		.uleb128 0x6
 2142 00ac 40       		.uleb128 0x40
 2143 00ad 18       		.uleb128 0x18
 2144 00ae 9642     		.uleb128 0x2116
 2145 00b0 19       		.uleb128 0x19
 2146 00b1 01       		.uleb128 0x1
 2147 00b2 13       		.uleb128 0x13
 2148 00b3 00       		.byte	0
 2149 00b4 00       		.byte	0
 2150 00b5 0D       		.uleb128 0xd
 2151 00b6 34       		.uleb128 0x34
 2152 00b7 00       		.byte	0
 2153 00b8 03       		.uleb128 0x3
 2154 00b9 08       		.uleb128 0x8
 2155 00ba 3A       		.uleb128 0x3a
 2156 00bb 0B       		.uleb128 0xb
 2157 00bc 3B       		.uleb128 0x3b
 2158 00bd 0B       		.uleb128 0xb
 2159 00be 49       		.uleb128 0x49
 2160 00bf 13       		.uleb128 0x13
 2161 00c0 02       		.uleb128 0x2
 2162 00c1 18       		.uleb128 0x18
 2163 00c2 00       		.byte	0
 2164 00c3 00       		.byte	0
 2165 00c4 0E       		.uleb128 0xe
 2166 00c5 34       		.uleb128 0x34
 2167 00c6 00       		.byte	0
 2168 00c7 03       		.uleb128 0x3
 2169 00c8 0E       		.uleb128 0xe
 2170 00c9 3A       		.uleb128 0x3a
 2171 00ca 0B       		.uleb128 0xb
 2172 00cb 3B       		.uleb128 0x3b
 2173 00cc 0B       		.uleb128 0xb
 2174 00cd 49       		.uleb128 0x49
 2175 00ce 13       		.uleb128 0x13
 2176 00cf 02       		.uleb128 0x2
 2177 00d0 18       		.uleb128 0x18
 2178 00d1 00       		.byte	0
 2179 00d2 00       		.byte	0
 2180 00d3 0F       		.uleb128 0xf
 2181 00d4 0B       		.uleb128 0xb
 2182 00d5 01       		.byte	0x1
 2183 00d6 11       		.uleb128 0x11
 2184 00d7 01       		.uleb128 0x1
 2185 00d8 12       		.uleb128 0x12
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 48


 2186 00d9 06       		.uleb128 0x6
 2187 00da 00       		.byte	0
 2188 00db 00       		.byte	0
 2189 00dc 10       		.uleb128 0x10
 2190 00dd 34       		.uleb128 0x34
 2191 00de 00       		.byte	0
 2192 00df 03       		.uleb128 0x3
 2193 00e0 08       		.uleb128 0x8
 2194 00e1 3A       		.uleb128 0x3a
 2195 00e2 0B       		.uleb128 0xb
 2196 00e3 3B       		.uleb128 0x3b
 2197 00e4 0B       		.uleb128 0xb
 2198 00e5 49       		.uleb128 0x49
 2199 00e6 13       		.uleb128 0x13
 2200 00e7 00       		.byte	0
 2201 00e8 00       		.byte	0
 2202 00e9 11       		.uleb128 0x11
 2203 00ea 01       		.uleb128 0x1
 2204 00eb 01       		.byte	0x1
 2205 00ec 49       		.uleb128 0x49
 2206 00ed 13       		.uleb128 0x13
 2207 00ee 01       		.uleb128 0x1
 2208 00ef 13       		.uleb128 0x13
 2209 00f0 00       		.byte	0
 2210 00f1 00       		.byte	0
 2211 00f2 12       		.uleb128 0x12
 2212 00f3 21       		.uleb128 0x21
 2213 00f4 00       		.byte	0
 2214 00f5 49       		.uleb128 0x49
 2215 00f6 13       		.uleb128 0x13
 2216 00f7 2F       		.uleb128 0x2f
 2217 00f8 0B       		.uleb128 0xb
 2218 00f9 00       		.byte	0
 2219 00fa 00       		.byte	0
 2220 00fb 13       		.uleb128 0x13
 2221 00fc 2E       		.uleb128 0x2e
 2222 00fd 00       		.byte	0
 2223 00fe 3F       		.uleb128 0x3f
 2224 00ff 19       		.uleb128 0x19
 2225 0100 03       		.uleb128 0x3
 2226 0101 0E       		.uleb128 0xe
 2227 0102 3A       		.uleb128 0x3a
 2228 0103 0B       		.uleb128 0xb
 2229 0104 3B       		.uleb128 0x3b
 2230 0105 0B       		.uleb128 0xb
 2231 0106 11       		.uleb128 0x11
 2232 0107 01       		.uleb128 0x1
 2233 0108 12       		.uleb128 0x12
 2234 0109 06       		.uleb128 0x6
 2235 010a 40       		.uleb128 0x40
 2236 010b 18       		.uleb128 0x18
 2237 010c 9742     		.uleb128 0x2117
 2238 010e 19       		.uleb128 0x19
 2239 010f 00       		.byte	0
 2240 0110 00       		.byte	0
 2241 0111 14       		.uleb128 0x14
 2242 0112 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 49


 2243 0113 01       		.byte	0x1
 2244 0114 3F       		.uleb128 0x3f
 2245 0115 19       		.uleb128 0x19
 2246 0116 03       		.uleb128 0x3
 2247 0117 0E       		.uleb128 0xe
 2248 0118 3A       		.uleb128 0x3a
 2249 0119 0B       		.uleb128 0xb
 2250 011a 3B       		.uleb128 0x3b
 2251 011b 05       		.uleb128 0x5
 2252 011c 27       		.uleb128 0x27
 2253 011d 19       		.uleb128 0x19
 2254 011e 11       		.uleb128 0x11
 2255 011f 01       		.uleb128 0x1
 2256 0120 12       		.uleb128 0x12
 2257 0121 06       		.uleb128 0x6
 2258 0122 40       		.uleb128 0x40
 2259 0123 18       		.uleb128 0x18
 2260 0124 9642     		.uleb128 0x2116
 2261 0126 19       		.uleb128 0x19
 2262 0127 01       		.uleb128 0x1
 2263 0128 13       		.uleb128 0x13
 2264 0129 00       		.byte	0
 2265 012a 00       		.byte	0
 2266 012b 15       		.uleb128 0x15
 2267 012c 05       		.uleb128 0x5
 2268 012d 00       		.byte	0
 2269 012e 03       		.uleb128 0x3
 2270 012f 0E       		.uleb128 0xe
 2271 0130 3A       		.uleb128 0x3a
 2272 0131 0B       		.uleb128 0xb
 2273 0132 3B       		.uleb128 0x3b
 2274 0133 05       		.uleb128 0x5
 2275 0134 49       		.uleb128 0x49
 2276 0135 13       		.uleb128 0x13
 2277 0136 02       		.uleb128 0x2
 2278 0137 18       		.uleb128 0x18
 2279 0138 00       		.byte	0
 2280 0139 00       		.byte	0
 2281 013a 16       		.uleb128 0x16
 2282 013b 34       		.uleb128 0x34
 2283 013c 00       		.byte	0
 2284 013d 03       		.uleb128 0x3
 2285 013e 08       		.uleb128 0x8
 2286 013f 3A       		.uleb128 0x3a
 2287 0140 0B       		.uleb128 0xb
 2288 0141 3B       		.uleb128 0x3b
 2289 0142 05       		.uleb128 0x5
 2290 0143 49       		.uleb128 0x49
 2291 0144 13       		.uleb128 0x13
 2292 0145 02       		.uleb128 0x2
 2293 0146 18       		.uleb128 0x18
 2294 0147 00       		.byte	0
 2295 0148 00       		.byte	0
 2296 0149 17       		.uleb128 0x17
 2297 014a 2E       		.uleb128 0x2e
 2298 014b 01       		.byte	0x1
 2299 014c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 50


 2300 014d 19       		.uleb128 0x19
 2301 014e 03       		.uleb128 0x3
 2302 014f 0E       		.uleb128 0xe
 2303 0150 3A       		.uleb128 0x3a
 2304 0151 0B       		.uleb128 0xb
 2305 0152 3B       		.uleb128 0x3b
 2306 0153 05       		.uleb128 0x5
 2307 0154 27       		.uleb128 0x27
 2308 0155 19       		.uleb128 0x19
 2309 0156 11       		.uleb128 0x11
 2310 0157 01       		.uleb128 0x1
 2311 0158 12       		.uleb128 0x12
 2312 0159 06       		.uleb128 0x6
 2313 015a 40       		.uleb128 0x40
 2314 015b 18       		.uleb128 0x18
 2315 015c 9742     		.uleb128 0x2117
 2316 015e 19       		.uleb128 0x19
 2317 015f 01       		.uleb128 0x1
 2318 0160 13       		.uleb128 0x13
 2319 0161 00       		.byte	0
 2320 0162 00       		.byte	0
 2321 0163 18       		.uleb128 0x18
 2322 0164 34       		.uleb128 0x34
 2323 0165 00       		.byte	0
 2324 0166 03       		.uleb128 0x3
 2325 0167 0E       		.uleb128 0xe
 2326 0168 3A       		.uleb128 0x3a
 2327 0169 0B       		.uleb128 0xb
 2328 016a 3B       		.uleb128 0x3b
 2329 016b 05       		.uleb128 0x5
 2330 016c 49       		.uleb128 0x49
 2331 016d 13       		.uleb128 0x13
 2332 016e 02       		.uleb128 0x2
 2333 016f 18       		.uleb128 0x18
 2334 0170 00       		.byte	0
 2335 0171 00       		.byte	0
 2336 0172 19       		.uleb128 0x19
 2337 0173 2E       		.uleb128 0x2e
 2338 0174 01       		.byte	0x1
 2339 0175 3F       		.uleb128 0x3f
 2340 0176 19       		.uleb128 0x19
 2341 0177 03       		.uleb128 0x3
 2342 0178 0E       		.uleb128 0xe
 2343 0179 3A       		.uleb128 0x3a
 2344 017a 0B       		.uleb128 0xb
 2345 017b 3B       		.uleb128 0x3b
 2346 017c 05       		.uleb128 0x5
 2347 017d 11       		.uleb128 0x11
 2348 017e 01       		.uleb128 0x1
 2349 017f 12       		.uleb128 0x12
 2350 0180 06       		.uleb128 0x6
 2351 0181 40       		.uleb128 0x40
 2352 0182 18       		.uleb128 0x18
 2353 0183 9642     		.uleb128 0x2116
 2354 0185 19       		.uleb128 0x19
 2355 0186 01       		.uleb128 0x1
 2356 0187 13       		.uleb128 0x13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 51


 2357 0188 00       		.byte	0
 2358 0189 00       		.byte	0
 2359 018a 1A       		.uleb128 0x1a
 2360 018b 2E       		.uleb128 0x2e
 2361 018c 00       		.byte	0
 2362 018d 3F       		.uleb128 0x3f
 2363 018e 19       		.uleb128 0x19
 2364 018f 03       		.uleb128 0x3
 2365 0190 0E       		.uleb128 0xe
 2366 0191 3A       		.uleb128 0x3a
 2367 0192 0B       		.uleb128 0xb
 2368 0193 3B       		.uleb128 0x3b
 2369 0194 05       		.uleb128 0x5
 2370 0195 11       		.uleb128 0x11
 2371 0196 01       		.uleb128 0x1
 2372 0197 12       		.uleb128 0x12
 2373 0198 06       		.uleb128 0x6
 2374 0199 40       		.uleb128 0x40
 2375 019a 18       		.uleb128 0x18
 2376 019b 9642     		.uleb128 0x2116
 2377 019d 19       		.uleb128 0x19
 2378 019e 00       		.byte	0
 2379 019f 00       		.byte	0
 2380 01a0 1B       		.uleb128 0x1b
 2381 01a1 2E       		.uleb128 0x2e
 2382 01a2 01       		.byte	0x1
 2383 01a3 3F       		.uleb128 0x3f
 2384 01a4 19       		.uleb128 0x19
 2385 01a5 03       		.uleb128 0x3
 2386 01a6 0E       		.uleb128 0xe
 2387 01a7 3A       		.uleb128 0x3a
 2388 01a8 0B       		.uleb128 0xb
 2389 01a9 3B       		.uleb128 0x3b
 2390 01aa 05       		.uleb128 0x5
 2391 01ab 49       		.uleb128 0x49
 2392 01ac 13       		.uleb128 0x13
 2393 01ad 11       		.uleb128 0x11
 2394 01ae 01       		.uleb128 0x1
 2395 01af 12       		.uleb128 0x12
 2396 01b0 06       		.uleb128 0x6
 2397 01b1 40       		.uleb128 0x40
 2398 01b2 18       		.uleb128 0x18
 2399 01b3 9642     		.uleb128 0x2116
 2400 01b5 19       		.uleb128 0x19
 2401 01b6 01       		.uleb128 0x1
 2402 01b7 13       		.uleb128 0x13
 2403 01b8 00       		.byte	0
 2404 01b9 00       		.byte	0
 2405 01ba 1C       		.uleb128 0x1c
 2406 01bb 26       		.uleb128 0x26
 2407 01bc 00       		.byte	0
 2408 01bd 49       		.uleb128 0x49
 2409 01be 13       		.uleb128 0x13
 2410 01bf 00       		.byte	0
 2411 01c0 00       		.byte	0
 2412 01c1 1D       		.uleb128 0x1d
 2413 01c2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 52


 2414 01c3 01       		.byte	0x1
 2415 01c4 3F       		.uleb128 0x3f
 2416 01c5 19       		.uleb128 0x19
 2417 01c6 03       		.uleb128 0x3
 2418 01c7 0E       		.uleb128 0xe
 2419 01c8 3A       		.uleb128 0x3a
 2420 01c9 0B       		.uleb128 0xb
 2421 01ca 3B       		.uleb128 0x3b
 2422 01cb 05       		.uleb128 0x5
 2423 01cc 11       		.uleb128 0x11
 2424 01cd 01       		.uleb128 0x1
 2425 01ce 12       		.uleb128 0x12
 2426 01cf 06       		.uleb128 0x6
 2427 01d0 40       		.uleb128 0x40
 2428 01d1 18       		.uleb128 0x18
 2429 01d2 9742     		.uleb128 0x2117
 2430 01d4 19       		.uleb128 0x19
 2431 01d5 01       		.uleb128 0x1
 2432 01d6 13       		.uleb128 0x13
 2433 01d7 00       		.byte	0
 2434 01d8 00       		.byte	0
 2435 01d9 1E       		.uleb128 0x1e
 2436 01da 34       		.uleb128 0x34
 2437 01db 00       		.byte	0
 2438 01dc 03       		.uleb128 0x3
 2439 01dd 0E       		.uleb128 0xe
 2440 01de 3A       		.uleb128 0x3a
 2441 01df 0B       		.uleb128 0xb
 2442 01e0 3B       		.uleb128 0x3b
 2443 01e1 05       		.uleb128 0x5
 2444 01e2 49       		.uleb128 0x49
 2445 01e3 13       		.uleb128 0x13
 2446 01e4 3F       		.uleb128 0x3f
 2447 01e5 19       		.uleb128 0x19
 2448 01e6 3C       		.uleb128 0x3c
 2449 01e7 19       		.uleb128 0x19
 2450 01e8 00       		.byte	0
 2451 01e9 00       		.byte	0
 2452 01ea 1F       		.uleb128 0x1f
 2453 01eb 21       		.uleb128 0x21
 2454 01ec 00       		.byte	0
 2455 01ed 49       		.uleb128 0x49
 2456 01ee 13       		.uleb128 0x13
 2457 01ef 2F       		.uleb128 0x2f
 2458 01f0 05       		.uleb128 0x5
 2459 01f1 00       		.byte	0
 2460 01f2 00       		.byte	0
 2461 01f3 20       		.uleb128 0x20
 2462 01f4 34       		.uleb128 0x34
 2463 01f5 00       		.byte	0
 2464 01f6 03       		.uleb128 0x3
 2465 01f7 0E       		.uleb128 0xe
 2466 01f8 3A       		.uleb128 0x3a
 2467 01f9 0B       		.uleb128 0xb
 2468 01fa 3B       		.uleb128 0x3b
 2469 01fb 0B       		.uleb128 0xb
 2470 01fc 49       		.uleb128 0x49
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 53


 2471 01fd 13       		.uleb128 0x13
 2472 01fe 3F       		.uleb128 0x3f
 2473 01ff 19       		.uleb128 0x19
 2474 0200 02       		.uleb128 0x2
 2475 0201 18       		.uleb128 0x18
 2476 0202 00       		.byte	0
 2477 0203 00       		.byte	0
 2478 0204 00       		.byte	0
 2479              		.section	.debug_aranges,"",%progbits
 2480 0000 7C000000 		.4byte	0x7c
 2481 0004 0200     		.2byte	0x2
 2482 0006 00000000 		.4byte	.Ldebug_info0
 2483 000a 04       		.byte	0x4
 2484 000b 00       		.byte	0
 2485 000c 0000     		.2byte	0
 2486 000e 0000     		.2byte	0
 2487 0010 00000000 		.4byte	.LFB63
 2488 0014 28000000 		.4byte	.LFE63-.LFB63
 2489 0018 00000000 		.4byte	.LFB64
 2490 001c 58000000 		.4byte	.LFE64-.LFB64
 2491 0020 00000000 		.4byte	.LFB65
 2492 0024 1C000000 		.4byte	.LFE65-.LFB65
 2493 0028 00000000 		.4byte	.LFB66
 2494 002c 38000000 		.4byte	.LFE66-.LFB66
 2495 0030 00000000 		.4byte	.LFB67
 2496 0034 2C020000 		.4byte	.LFE67-.LFB67
 2497 0038 00000000 		.4byte	.LFB68
 2498 003c 48000000 		.4byte	.LFE68-.LFB68
 2499 0040 00000000 		.4byte	.LFB69
 2500 0044 38000000 		.4byte	.LFE69-.LFB69
 2501 0048 00000000 		.4byte	.LFB70
 2502 004c C4010000 		.4byte	.LFE70-.LFB70
 2503 0050 00000000 		.4byte	.LFB71
 2504 0054 D8000000 		.4byte	.LFE71-.LFB71
 2505 0058 00000000 		.4byte	.LFB72
 2506 005c 58000000 		.4byte	.LFE72-.LFB72
 2507 0060 00000000 		.4byte	.LFB73
 2508 0064 36000000 		.4byte	.LFE73-.LFB73
 2509 0068 00000000 		.4byte	.LFB74
 2510 006c B0000000 		.4byte	.LFE74-.LFB74
 2511 0070 00000000 		.4byte	.LFB75
 2512 0074 24000000 		.4byte	.LFE75-.LFB75
 2513 0078 00000000 		.4byte	0
 2514 007c 00000000 		.4byte	0
 2515              		.section	.debug_ranges,"",%progbits
 2516              	.Ldebug_ranges0:
 2517 0000 00000000 		.4byte	.LFB63
 2518 0004 28000000 		.4byte	.LFE63
 2519 0008 00000000 		.4byte	.LFB64
 2520 000c 58000000 		.4byte	.LFE64
 2521 0010 00000000 		.4byte	.LFB65
 2522 0014 1C000000 		.4byte	.LFE65
 2523 0018 00000000 		.4byte	.LFB66
 2524 001c 38000000 		.4byte	.LFE66
 2525 0020 00000000 		.4byte	.LFB67
 2526 0024 2C020000 		.4byte	.LFE67
 2527 0028 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 54


 2528 002c 48000000 		.4byte	.LFE68
 2529 0030 00000000 		.4byte	.LFB69
 2530 0034 38000000 		.4byte	.LFE69
 2531 0038 00000000 		.4byte	.LFB70
 2532 003c C4010000 		.4byte	.LFE70
 2533 0040 00000000 		.4byte	.LFB71
 2534 0044 D8000000 		.4byte	.LFE71
 2535 0048 00000000 		.4byte	.LFB72
 2536 004c 58000000 		.4byte	.LFE72
 2537 0050 00000000 		.4byte	.LFB73
 2538 0054 36000000 		.4byte	.LFE73
 2539 0058 00000000 		.4byte	.LFB74
 2540 005c B0000000 		.4byte	.LFE74
 2541 0060 00000000 		.4byte	.LFB75
 2542 0064 24000000 		.4byte	.LFE75
 2543 0068 00000000 		.4byte	0
 2544 006c 00000000 		.4byte	0
 2545              		.section	.debug_line,"",%progbits
 2546              	.Ldebug_line0:
 2547 0000 D9030000 		.section	.debug_str,"MS",%progbits,1
 2547      0200AE01 
 2547      00000201 
 2547      FB0E0D00 
 2547      01010101 
 2548              	.LASF40:
 2549 0000 7472616E 		.ascii	"transmitData\000"
 2549      736D6974 
 2549      44617461 
 2549      00
 2550              	.LASF21:
 2551 000d 49646C65 		.ascii	"Idle_Collision_ISR\000"
 2551      5F436F6C 
 2551      6C697369 
 2551      6F6E5F49 
 2551      535200
 2552              	.LASF61:
 2553 0020 73746174 		.ascii	"state\000"
 2553      6500
 2554              	.LASF37:
 2555 0026 67657452 		.ascii	"getRandomNumber\000"
 2555      616E646F 
 2555      6D4E756D 
 2555      62657200 
 2556              	.LASF16:
 2557 0036 73697A65 		.ascii	"sizetype\000"
 2557      74797065 
 2557      00
 2558              	.LASF44:
 2559 003f 64696666 		.ascii	"diffManEncodedData\000"
 2559      4D616E45 
 2559      6E636F64 
 2559      65644461 
 2559      746100
 2560              	.LASF28:
 2561 0052 6D61696E 		.ascii	"main\000"
 2561      00
 2562              	.LASF22:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 55


 2563 0057 45646765 		.ascii	"Edge_detect_ISR\000"
 2563      5F646574 
 2563      6563745F 
 2563      49535200 
 2564              	.LASF2:
 2565 0067 73686F72 		.ascii	"short int\000"
 2565      7420696E 
 2565      7400
 2566              	.LASF34:
 2567 0071 76616C75 		.ascii	"value\000"
 2567      6500
 2568              	.LASF20:
 2569 0077 636F6C6C 		.ascii	"collision\000"
 2569      6973696F 
 2569      6E00
 2570              	.LASF17:
 2571 0081 74696D65 		.ascii	"time_t\000"
 2571      5F7400
 2572              	.LASF55:
 2573 0088 6E657477 		.ascii	"networkState\000"
 2573      6F726B53 
 2573      74617465 
 2573      00
 2574              	.LASF11:
 2575 0095 75696E74 		.ascii	"uint8\000"
 2575      3800
 2576              	.LASF25:
 2577 009b 6C696E65 		.ascii	"lineString\000"
 2577      53747269 
 2577      6E6700
 2578              	.LASF60:
 2579 00a6 443A5C4D 		.ascii	"D:\\MyDocs\\Documents\\CE4950\\USB_UART01\\USB_UART"
 2579      79446F63 
 2579      735C446F 
 2579      63756D65 
 2579      6E74735C 
 2580 00d4 30312E63 		.ascii	"01.cydsn\000"
 2580      7964736E 
 2580      00
 2581              	.LASF12:
 2582 00dd 666C6F61 		.ascii	"float\000"
 2582      7400
 2583              	.LASF6:
 2584 00e3 6C6F6E67 		.ascii	"long long int\000"
 2584      206C6F6E 
 2584      6720696E 
 2584      7400
 2585              	.LASF7:
 2586 00f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2586      206C6F6E 
 2586      6720756E 
 2586      7369676E 
 2586      65642069 
 2587              	.LASF57:
 2588 0108 74696D65 		.ascii	"timerInterruptCount\000"
 2588      72496E74 
 2588      65727275 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 56


 2588      7074436F 
 2588      756E7400 
 2589              	.LASF58:
 2590 011c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2590      4320342E 
 2590      392E3320 
 2590      32303135 
 2590      30333033 
 2591 014f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2591      20726576 
 2591      6973696F 
 2591      6E203232 
 2591      31323230 
 2592 0182 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2592      66756E63 
 2592      74696F6E 
 2592      2D736563 
 2592      74696F6E 
 2593              	.LASF39:
 2594 01aa 4D41585F 		.ascii	"MAX_N\000"
 2594      4E00
 2595              	.LASF42:
 2596 01b0 7072696E 		.ascii	"printChar\000"
 2596      74436861 
 2596      7200
 2597              	.LASF29:
 2598 01ba 73747269 		.ascii	"stringToDiffMan\000"
 2598      6E67546F 
 2598      44696666 
 2598      4D616E00 
 2599              	.LASF1:
 2600 01ca 756E7369 		.ascii	"unsigned char\000"
 2600      676E6564 
 2600      20636861 
 2600      7200
 2601              	.LASF49:
 2602 01d8 63757272 		.ascii	"currentDataPos\000"
 2602      656E7444 
 2602      61746150 
 2602      6F7300
 2603              	.LASF35:
 2604 01e7 696E6974 		.ascii	"initDiffManEncodedArray\000"
 2604      44696666 
 2604      4D616E45 
 2604      6E636F64 
 2604      65644172 
 2605              	.LASF0:
 2606 01ff 7369676E 		.ascii	"signed char\000"
 2606      65642063 
 2606      68617200 
 2607              	.LASF30:
 2608 020b 61736369 		.ascii	"asciiToDiffMan\000"
 2608      69546F44 
 2608      6966664D 
 2608      616E00
 2609              	.LASF18:
 2610 021a 69646C65 		.ascii	"idle\000"
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 57


 2610      00
 2611              	.LASF41:
 2612 021f 64696666 		.ascii	"diffManToASCII\000"
 2612      4D616E54 
 2612      6F415343 
 2612      494900
 2613              	.LASF8:
 2614 022e 756E7369 		.ascii	"unsigned int\000"
 2614      676E6564 
 2614      20696E74 
 2614      00
 2615              	.LASF5:
 2616 023b 6C6F6E67 		.ascii	"long unsigned int\000"
 2616      20756E73 
 2616      69676E65 
 2616      6420696E 
 2616      7400
 2617              	.LASF38:
 2618 024d 4D494E5F 		.ascii	"MIN_N\000"
 2618      4E00
 2619              	.LASF31:
 2620 0253 61736369 		.ascii	"asciiChar\000"
 2620      69436861 
 2620      7200
 2621              	.LASF14:
 2622 025d 63686172 		.ascii	"char\000"
 2622      00
 2623              	.LASF56:
 2624 0262 72656365 		.ascii	"receivedChar\000"
 2624      69766564 
 2624      43686172 
 2624      00
 2625              	.LASF4:
 2626 026f 6C6F6E67 		.ascii	"long int\000"
 2626      20696E74 
 2626      00
 2627              	.LASF26:
 2628 0278 73747269 		.ascii	"stringPosition\000"
 2628      6E67506F 
 2628      73697469 
 2628      6F6E00
 2629              	.LASF10:
 2630 0287 696E7433 		.ascii	"int32_t\000"
 2630      325F7400 
 2631              	.LASF3:
 2632 028f 73686F72 		.ascii	"short unsigned int\000"
 2632      7420756E 
 2632      7369676E 
 2632      65642069 
 2632      6E7400
 2633              	.LASF27:
 2634 02a2 7365636F 		.ascii	"seconds\000"
 2634      6E647300 
 2635              	.LASF52:
 2636 02aa 5F426F6F 		.ascii	"_Bool\000"
 2636      6C00
 2637              	.LASF19:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 58


 2638 02b0 62757379 		.ascii	"busy\000"
 2638      00
 2639              	.LASF47:
 2640 02b5 72656365 		.ascii	"receivedDataCount\000"
 2640      69766564 
 2640      44617461 
 2640      436F756E 
 2640      7400
 2641              	.LASF15:
 2642 02c7 72656738 		.ascii	"reg8\000"
 2642      00
 2643              	.LASF46:
 2644 02cc 72656365 		.ascii	"receivedDataIndex\000"
 2644      69766564 
 2644      44617461 
 2644      496E6465 
 2644      7800
 2645              	.LASF13:
 2646 02de 646F7562 		.ascii	"double\000"
 2646      6C6500
 2647              	.LASF36:
 2648 02e5 7365744E 		.ascii	"setNetworkStateOnLEDs\000"
 2648      6574776F 
 2648      726B5374 
 2648      6174654F 
 2648      6E4C4544 
 2649              	.LASF45:
 2650 02fb 64696666 		.ascii	"diffManReceivedData\000"
 2650      4D616E52 
 2650      65636569 
 2650      76656444 
 2650      61746100 
 2651              	.LASF53:
 2652 030f 64617461 		.ascii	"dataTransmissionComplete\000"
 2652      5472616E 
 2652      736D6973 
 2652      73696F6E 
 2652      436F6D70 
 2653              	.LASF24:
 2654 0328 52656365 		.ascii	"ReceiveTimerISR\000"
 2654      69766554 
 2654      696D6572 
 2654      49535200 
 2655              	.LASF33:
 2656 0338 62696E61 		.ascii	"binaryValueOfChar\000"
 2656      72795661 
 2656      6C75654F 
 2656      66436861 
 2656      7200
 2657              	.LASF59:
 2658 034a 2E5C6D61 		.ascii	".\\main.c\000"
 2658      696E2E63 
 2658      00
 2659              	.LASF9:
 2660 0353 5F5F696E 		.ascii	"__int32_t\000"
 2660      7433325F 
 2660      7400
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\cc12xUQd.s 			page 59


 2661              	.LASF48:
 2662 035d 68616C66 		.ascii	"halfBitIndex\000"
 2662      42697449 
 2662      6E646578 
 2662      00
 2663              	.LASF50:
 2664 036a 6C656E67 		.ascii	"lengthOfData\000"
 2664      74684F66 
 2664      44617461 
 2664      00
 2665              	.LASF23:
 2666 0377 54696D65 		.ascii	"TimerHandler\000"
 2666      7248616E 
 2666      646C6572 
 2666      00
 2667              	.LASF43:
 2668 0384 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2668      52784275 
 2668      66666572 
 2668      00
 2669              	.LASF32:
 2670 0391 70726576 		.ascii	"previousHalfBit\000"
 2670      696F7573 
 2670      48616C66 
 2670      42697400 
 2671              	.LASF51:
 2672 03a1 74696D65 		.ascii	"timerExpired\000"
 2672      72457870 
 2672      69726564 
 2672      00
 2673              	.LASF54:
 2674 03ae 706F7765 		.ascii	"powerOnEdge\000"
 2674      724F6E45 
 2674      64676500 
 2675              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
