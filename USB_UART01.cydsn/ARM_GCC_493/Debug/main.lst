ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	diffManEncodedData,3200,4
  19              		.global	halfBitIndex
  20              		.bss
  21              		.align	2
  22              		.type	halfBitIndex, %object
  23              		.size	halfBitIndex, 4
  24              	halfBitIndex:
  25 0000 00000000 		.space	4
  26              		.global	currentDataPos
  27              		.align	2
  28              		.type	currentDataPos, %object
  29              		.size	currentDataPos, 4
  30              	currentDataPos:
  31 0004 00000000 		.space	4
  32              		.comm	lengthOfData,4,4
  33              		.comm	timerExpired,1,1
  34              		.section	.text.TimerHandler,"ax",%progbits
  35              		.align	2
  36              		.global	TimerHandler
  37              		.thumb
  38              		.thumb_func
  39              		.type	TimerHandler, %function
  40              	TimerHandler:
  41              	.LFB63:
  42              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** This file performs a transmit. No collision is detected. 
   3:.\main.c      **** *******************************************************************************/
   4:.\main.c      **** 
   5:.\main.c      **** #include <device.h>
   6:.\main.c      **** #include <stdbool.h>
   7:.\main.c      **** #include "stdio.h"
   8:.\main.c      **** 
   9:.\main.c      **** void initDiffManEncodedArray();
  10:.\main.c      **** void stringToDiffMan(char*, uint8);
  11:.\main.c      **** void asciiToDiffMan(char);
  12:.\main.c      **** void transmitData();
  13:.\main.c      **** 
  14:.\main.c      **** #define INDEX_OF_MSB 6
  15:.\main.c      **** 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 2


  16:.\main.c      **** int diffManEncodedData[800];
  17:.\main.c      **** int halfBitIndex = 0, currentDataPos=0, lengthOfData;
  18:.\main.c      **** bool timerExpired;
  19:.\main.c      **** 
  20:.\main.c      **** CY_ISR(TimerHandler){
  43              		.loc 1 20 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  21:.\main.c      ****     Timer_STATUS;   //clear the timer interrupt
  53              		.loc 1 21 0
  54 0004 034B     		ldr	r3, .L2
  55 0006 1B78     		ldrb	r3, [r3]
  22:.\main.c      ****     Timer_Stop();
  56              		.loc 1 22 0
  57 0008 FFF7FEFF 		bl	Timer_Stop
  23:.\main.c      ****     timerExpired = true;
  58              		.loc 1 23 0
  59 000c 024B     		ldr	r3, .L2+4
  60 000e 0122     		movs	r2, #1
  61 0010 1A70     		strb	r2, [r3]
  24:.\main.c      **** }
  62              		.loc 1 24 0
  63 0012 80BD     		pop	{r7, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0014 6B640040 		.word	1073767531
  68 0018 00000000 		.word	timerExpired
  69              		.cfi_endproc
  70              	.LFE63:
  71              		.size	TimerHandler, .-TimerHandler
  72              		.section	.text.main,"ax",%progbits
  73              		.align	2
  74              		.global	main
  75              		.thumb
  76              		.thumb_func
  77              		.type	main, %function
  78              	main:
  79              	.LFB64:
  25:.\main.c      **** 
  26:.\main.c      **** int main()
  27:.\main.c      **** {
  80              		.loc 1 27 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 104
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 3


  88 0002 9AB0     		sub	sp, sp, #104
  89              		.cfi_def_cfa_offset 112
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  28:.\main.c      ****     char rx;
  29:.\main.c      ****     char lineString[100];
  30:.\main.c      ****     uint8 stringPosition = 0;
  92              		.loc 1 30 0
  93 0006 0023     		movs	r3, #0
  94 0008 87F86730 		strb	r3, [r7, #103]
  31:.\main.c      ****     timerExpired = false;
  95              		.loc 1 31 0
  96 000c 444B     		ldr	r3, .L18
  97 000e 0022     		movs	r2, #0
  98 0010 1A70     		strb	r2, [r3]
  32:.\main.c      ****     /* Enable Global Interrupts */
  33:.\main.c      ****     CyGlobalIntEnable;                        
  99              		.loc 1 33 0
 100              	@ 33 ".\main.c" 1
 101 0012 62B6     		CPSIE   i
 102              	@ 0 "" 2
  34:.\main.c      ****     
  35:.\main.c      ****     initDiffManEncodedArray();
 103              		.loc 1 35 0
 104              		.thumb
 105 0014 FFF7FEFF 		bl	initDiffManEncodedArray
  36:.\main.c      ****     TX_pin_Write(1);  //set TX line to high to start
 106              		.loc 1 36 0
 107 0018 0120     		movs	r0, #1
 108 001a FFF7FEFF 		bl	TX_pin_Write
  37:.\main.c      **** 
  38:.\main.c      ****     /* Start USBFS Operation with 3V operation */
  39:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
 109              		.loc 1 39 0
 110 001e 0020     		movs	r0, #0
 111 0020 0021     		movs	r1, #0
 112 0022 FFF7FEFF 		bl	USBUART_1_Start
  40:.\main.c      ****     TimerISR_StartEx(TimerHandler);
 113              		.loc 1 40 0
 114 0026 3F48     		ldr	r0, .L18+4
 115 0028 FFF7FEFF 		bl	TimerISR_StartEx
 116              	.L15:
  41:.\main.c      ****     
  42:.\main.c      ****     /* Main Loop: */
  43:.\main.c      ****     for(;;)
  44:.\main.c      ****     {
  45:.\main.c      ****         if(USBUART_1_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE reques
 117              		.loc 1 45 0
 118 002c FFF7FEFF 		bl	USBUART_1_IsConfigurationChanged
 119 0030 0346     		mov	r3, r0
 120 0032 002B     		cmp	r3, #0
 121 0034 06D0     		beq	.L5
  46:.\main.c      ****         {
  47:.\main.c      ****             if(USBUART_1_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
 122              		.loc 1 47 0
 123 0036 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 124 003a 0346     		mov	r3, r0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 4


 125 003c 002B     		cmp	r3, #0
 126 003e 01D0     		beq	.L5
  48:.\main.c      ****             {
  49:.\main.c      ****                 /* Enumeration is done, enable OUT endpoint for receive data from Host */
  50:.\main.c      ****                 USBUART_1_CDC_Init();
 127              		.loc 1 50 0
 128 0040 FFF7FEFF 		bl	USBUART_1_CDC_Init
 129              	.L5:
  51:.\main.c      ****             }
  52:.\main.c      ****         }         
  53:.\main.c      ****         if(USBUART_1_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
 130              		.loc 1 53 0
 131 0044 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 132 0048 0346     		mov	r3, r0
 133 004a 002B     		cmp	r3, #0
 134 004c 66D0     		beq	.L6
  54:.\main.c      ****         {
  55:.\main.c      ****             if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
 135              		.loc 1 55 0
 136 004e FFF7FEFF 		bl	USBUART_1_DataIsReady
 137 0052 0346     		mov	r3, r0
 138 0054 002B     		cmp	r3, #0
 139 0056 61D0     		beq	.L6
  56:.\main.c      ****             {   
  57:.\main.c      ****                 rx = USBUART_1_GetChar();
 140              		.loc 1 57 0
 141 0058 FFF7FEFF 		bl	USBUART_1_GetChar
 142 005c 0346     		mov	r3, r0
 143 005e 87F86630 		strb	r3, [r7, #102]
  58:.\main.c      ****                 switch(rx){
 144              		.loc 1 58 0
 145 0062 97F86630 		ldrb	r3, [r7, #102]	@ zero_extendqisi2
 146 0066 0D2B     		cmp	r3, #13
 147 0068 25D0     		beq	.L8
 148 006a 1B2B     		cmp	r3, #27
 149 006c 55D0     		beq	.L17
 150 006e 082B     		cmp	r3, #8
 151 0070 39D1     		bne	.L16
  59:.\main.c      ****                     case 8://backspace
  60:.\main.c      ****                         if(stringPosition>0){
 152              		.loc 1 60 0
 153 0072 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 154 0076 002B     		cmp	r3, #0
 155 0078 1CD0     		beq	.L11
  61:.\main.c      ****                             stringPosition--;
 156              		.loc 1 61 0
 157 007a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 158 007e 013B     		subs	r3, r3, #1
 159 0080 87F86730 		strb	r3, [r7, #103]
  62:.\main.c      ****                             lineString[stringPosition] = '\0';
 160              		.loc 1 62 0
 161 0084 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 162 0088 07F16802 		add	r2, r7, #104
 163 008c 1344     		add	r3, r3, r2
 164 008e 0022     		movs	r2, #0
 165 0090 03F8682C 		strb	r2, [r3, #-104]
  63:.\main.c      ****                             //backspace space backspace
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 5


  64:.\main.c      ****                             while(USBUART_1_CDCIsReady() == 0u); 
 166              		.loc 1 64 0
 167 0094 00BF     		nop
 168              	.L12:
 169              		.loc 1 64 0 is_stmt 0 discriminator 1
 170 0096 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 171 009a 0346     		mov	r3, r0
 172 009c 002B     		cmp	r3, #0
 173 009e FAD0     		beq	.L12
  65:.\main.c      ****                             USBUART_1_PutChar(8);
 174              		.loc 1 65 0 is_stmt 1
 175 00a0 0820     		movs	r0, #8
 176 00a2 FFF7FEFF 		bl	USBUART_1_PutChar
  66:.\main.c      ****                             USBUART_1_PutChar(32);
 177              		.loc 1 66 0
 178 00a6 2020     		movs	r0, #32
 179 00a8 FFF7FEFF 		bl	USBUART_1_PutChar
  67:.\main.c      ****                             USBUART_1_PutChar(8);
 180              		.loc 1 67 0
 181 00ac 0820     		movs	r0, #8
 182 00ae FFF7FEFF 		bl	USBUART_1_PutChar
  68:.\main.c      ****                         }
  69:.\main.c      ****                         break;
 183              		.loc 1 69 0
 184 00b2 33E0     		b	.L6
 185              	.L11:
 186 00b4 32E0     		b	.L6
 187              	.L8:
  70:.\main.c      ****                     case 13://enter (carriage return)
  71:.\main.c      ****                         stringToDiffMan(lineString, stringPosition);
 188              		.loc 1 71 0
 189 00b6 3A46     		mov	r2, r7
 190 00b8 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 191 00bc 1046     		mov	r0, r2
 192 00be 1946     		mov	r1, r3
 193 00c0 FFF7FEFF 		bl	stringToDiffMan
  72:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u);
 194              		.loc 1 72 0
 195 00c4 00BF     		nop
 196              	.L13:
 197              		.loc 1 72 0 is_stmt 0 discriminator 1
 198 00c6 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 199 00ca 0346     		mov	r3, r0
 200 00cc 002B     		cmp	r3, #0
 201 00ce FAD0     		beq	.L13
  73:.\main.c      ****                         USBUART_1_PutCRLF();
 202              		.loc 1 73 0 is_stmt 1
 203 00d0 FFF7FEFF 		bl	USBUART_1_PutCRLF
  74:.\main.c      **** 
  75:.\main.c      ****                         transmitData();
 204              		.loc 1 75 0
 205 00d4 FFF7FEFF 		bl	transmitData
  76:.\main.c      ****                         
  77:.\main.c      ****                         //reset index
  78:.\main.c      ****                         halfBitIndex = 0;
 206              		.loc 1 78 0
 207 00d8 134B     		ldr	r3, .L18+8
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 6


 208 00da 0022     		movs	r2, #0
 209 00dc 1A60     		str	r2, [r3]
  79:.\main.c      ****                         stringPosition = 0;
 210              		.loc 1 79 0
 211 00de 0023     		movs	r3, #0
 212 00e0 87F86730 		strb	r3, [r7, #103]
  80:.\main.c      ****                         break;
 213              		.loc 1 80 0
 214 00e4 1AE0     		b	.L6
 215              	.L16:
  81:.\main.c      ****                     case 27://escape
  82:.\main.c      ****                         break;
  83:.\main.c      ****                     default://everything else
  84:.\main.c      ****                         lineString[stringPosition] = rx;
 216              		.loc 1 84 0
 217 00e6 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 218 00ea 07F16802 		add	r2, r7, #104
 219 00ee 1344     		add	r3, r3, r2
 220 00f0 97F86620 		ldrb	r2, [r7, #102]
 221 00f4 03F8682C 		strb	r2, [r3, #-104]
  85:.\main.c      ****                         stringPosition++;
 222              		.loc 1 85 0
 223 00f8 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 224 00fc 0133     		adds	r3, r3, #1
 225 00fe 87F86730 		strb	r3, [r7, #103]
  86:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u); 
 226              		.loc 1 86 0
 227 0102 00BF     		nop
 228              	.L14:
 229              		.loc 1 86 0 is_stmt 0 discriminator 1
 230 0104 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 231 0108 0346     		mov	r3, r0
 232 010a 002B     		cmp	r3, #0
 233 010c FAD0     		beq	.L14
  87:.\main.c      ****                         USBUART_1_PutChar(rx);       /* Send data back to PC */
 234              		.loc 1 87 0 is_stmt 1
 235 010e 97F86630 		ldrb	r3, [r7, #102]	@ zero_extendqisi2
 236 0112 1846     		mov	r0, r3
 237 0114 FFF7FEFF 		bl	USBUART_1_PutChar
  88:.\main.c      ****                         break;
 238              		.loc 1 88 0
 239 0118 00E0     		b	.L6
 240              	.L17:
  82:.\main.c      ****                     default://everything else
 241              		.loc 1 82 0
 242 011a 00BF     		nop
 243              	.L6:
  89:.\main.c      ****                 }
  90:.\main.c      ****             }
  91:.\main.c      ****         }
  92:.\main.c      ****     }   
 244              		.loc 1 92 0 discriminator 1
 245 011c 86E7     		b	.L15
 246              	.L19:
 247 011e 00BF     		.align	2
 248              	.L18:
 249 0120 00000000 		.word	timerExpired
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 7


 250 0124 00000000 		.word	TimerHandler
 251 0128 00000000 		.word	halfBitIndex
 252              		.cfi_endproc
 253              	.LFE64:
 254              		.size	main, .-main
 255              		.section	.text.initDiffManEncodedArray,"ax",%progbits
 256              		.align	2
 257              		.global	initDiffManEncodedArray
 258              		.thumb
 259              		.thumb_func
 260              		.type	initDiffManEncodedArray, %function
 261              	initDiffManEncodedArray:
 262              	.LFB65:
  93:.\main.c      **** }
  94:.\main.c      **** 
  95:.\main.c      **** /*
  96:.\main.c      **** init dif man encoded data array with a leading "starting bit". The starting bit is madeup of the 
  97:.\main.c      **** half bits 01. 
  98:.\main.c      **** Only call when starting to transfer a new string
  99:.\main.c      **** */
 100:.\main.c      **** void initDiffManEncodedArray(){
 263              		.loc 1 100 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 101:.\main.c      ****     halfBitIndex = 0;
 273              		.loc 1 101 0
 274 0004 0E4B     		ldr	r3, .L21
 275 0006 0022     		movs	r2, #0
 276 0008 1A60     		str	r2, [r3]
 102:.\main.c      ****     diffManEncodedData[halfBitIndex] = 0;
 277              		.loc 1 102 0
 278 000a 0D4B     		ldr	r3, .L21
 279 000c 1B68     		ldr	r3, [r3]
 280 000e 0D4A     		ldr	r2, .L21+4
 281 0010 0021     		movs	r1, #0
 282 0012 42F82310 		str	r1, [r2, r3, lsl #2]
 103:.\main.c      ****     halfBitIndex++;
 283              		.loc 1 103 0
 284 0016 0A4B     		ldr	r3, .L21
 285 0018 1B68     		ldr	r3, [r3]
 286 001a 0133     		adds	r3, r3, #1
 287 001c 084A     		ldr	r2, .L21
 288 001e 1360     		str	r3, [r2]
 104:.\main.c      ****     diffManEncodedData[halfBitIndex] = 1;
 289              		.loc 1 104 0
 290 0020 074B     		ldr	r3, .L21
 291 0022 1B68     		ldr	r3, [r3]
 292 0024 074A     		ldr	r2, .L21+4
 293 0026 0121     		movs	r1, #1
 294 0028 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 8


 105:.\main.c      ****     halfBitIndex++;
 295              		.loc 1 105 0
 296 002c 044B     		ldr	r3, .L21
 297 002e 1B68     		ldr	r3, [r3]
 298 0030 0133     		adds	r3, r3, #1
 299 0032 034A     		ldr	r2, .L21
 300 0034 1360     		str	r3, [r2]
 106:.\main.c      **** }
 301              		.loc 1 106 0
 302 0036 BD46     		mov	sp, r7
 303              		.cfi_def_cfa_register 13
 304              		@ sp needed
 305 0038 5DF8047B 		ldr	r7, [sp], #4
 306              		.cfi_restore 7
 307              		.cfi_def_cfa_offset 0
 308 003c 7047     		bx	lr
 309              	.L22:
 310 003e 00BF     		.align	2
 311              	.L21:
 312 0040 00000000 		.word	halfBitIndex
 313 0044 00000000 		.word	diffManEncodedData
 314              		.cfi_endproc
 315              	.LFE65:
 316              		.size	initDiffManEncodedArray, .-initDiffManEncodedArray
 317              		.section	.text.stringToDiffMan,"ax",%progbits
 318              		.align	2
 319              		.global	stringToDiffMan
 320              		.thumb
 321              		.thumb_func
 322              		.type	stringToDiffMan, %function
 323              	stringToDiffMan:
 324              	.LFB66:
 107:.\main.c      **** 
 108:.\main.c      **** /*
 109:.\main.c      **** Enter key has been pressed, change binary data into diff man data.
 110:.\main.c      **** Call from main. Requires main to access diffManEncodedData array
 111:.\main.c      **** */
 112:.\main.c      **** void stringToDiffMan(char lineString[], uint8 stringPosition){
 325              		.loc 1 112 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 16
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 84B0     		sub	sp, sp, #16
 334              		.cfi_def_cfa_offset 24
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 337 0006 7860     		str	r0, [r7, #4]
 338 0008 0B46     		mov	r3, r1
 339 000a FB70     		strb	r3, [r7, #3]
 113:.\main.c      **** 
 114:.\main.c      ****     unsigned int i = 0;
 340              		.loc 1 114 0
 341 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 9


 342 000e FB60     		str	r3, [r7, #12]
 115:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 343              		.loc 1 115 0
 344 0010 0023     		movs	r3, #0
 345 0012 FB60     		str	r3, [r7, #12]
 346 0014 09E0     		b	.L24
 347              	.L25:
 116:.\main.c      ****         asciiToDiffMan(lineString[i]);
 348              		.loc 1 116 0 discriminator 3
 349 0016 7A68     		ldr	r2, [r7, #4]
 350 0018 FB68     		ldr	r3, [r7, #12]
 351 001a 1344     		add	r3, r3, r2
 352 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 353 001e 1846     		mov	r0, r3
 354 0020 FFF7FEFF 		bl	asciiToDiffMan
 115:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 355              		.loc 1 115 0 discriminator 3
 356 0024 FB68     		ldr	r3, [r7, #12]
 357 0026 0133     		adds	r3, r3, #1
 358 0028 FB60     		str	r3, [r7, #12]
 359              	.L24:
 115:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 360              		.loc 1 115 0 is_stmt 0 discriminator 1
 361 002a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 362 002c FB68     		ldr	r3, [r7, #12]
 363 002e 9A42     		cmp	r2, r3
 364 0030 F1D8     		bhi	.L25
 117:.\main.c      ****     }
 118:.\main.c      **** }
 365              		.loc 1 118 0 is_stmt 1
 366 0032 1037     		adds	r7, r7, #16
 367              		.cfi_def_cfa_offset 8
 368 0034 BD46     		mov	sp, r7
 369              		.cfi_def_cfa_register 13
 370              		@ sp needed
 371 0036 80BD     		pop	{r7, pc}
 372              		.cfi_endproc
 373              	.LFE66:
 374              		.size	stringToDiffMan, .-stringToDiffMan
 375              		.section	.text.asciiToDiffMan,"ax",%progbits
 376              		.align	2
 377              		.global	asciiToDiffMan
 378              		.thumb
 379              		.thumb_func
 380              		.type	asciiToDiffMan, %function
 381              	asciiToDiffMan:
 382              	.LFB67:
 119:.\main.c      **** 
 120:.\main.c      **** /*
 121:.\main.c      **** Helper method. Do not call from main.
 122:.\main.c      **** Converts a ascii char to a differental manchester line encoded version
 123:.\main.c      **** */
 124:.\main.c      **** void asciiToDiffMan(char asciiChar)
 125:.\main.c      **** {
 383              		.loc 1 125 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 104
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 10


 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 9BB0     		sub	sp, sp, #108
 392              		.cfi_def_cfa_offset 112
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 0346     		mov	r3, r0
 396 0008 FB71     		strb	r3, [r7, #7]
 126:.\main.c      ****     uint8 previousHalfBit = diffManEncodedData[halfBitIndex-1];
 397              		.loc 1 126 0
 398 000a 6C4B     		ldr	r3, .L38
 399 000c 1B68     		ldr	r3, [r3]
 400 000e 013B     		subs	r3, r3, #1
 401 0010 6B4A     		ldr	r2, .L38+4
 402 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 403 0016 87F86730 		strb	r3, [r7, #103]
 127:.\main.c      ****     //send starting 1 bit (encoded)
 128:.\main.c      ****     if(previousHalfBit == 1){
 404              		.loc 1 128 0
 405 001a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 406 001e 012B     		cmp	r3, #1
 407 0020 16D1     		bne	.L27
 129:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 408              		.loc 1 129 0
 409 0022 664B     		ldr	r3, .L38
 410 0024 1B68     		ldr	r3, [r3]
 411 0026 664A     		ldr	r2, .L38+4
 412 0028 0121     		movs	r1, #1
 413 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 130:.\main.c      ****         halfBitIndex++;
 414              		.loc 1 130 0
 415 002e 634B     		ldr	r3, .L38
 416 0030 1B68     		ldr	r3, [r3]
 417 0032 0133     		adds	r3, r3, #1
 418 0034 614A     		ldr	r2, .L38
 419 0036 1360     		str	r3, [r2]
 131:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 420              		.loc 1 131 0
 421 0038 604B     		ldr	r3, .L38
 422 003a 1B68     		ldr	r3, [r3]
 423 003c 604A     		ldr	r2, .L38+4
 424 003e 0021     		movs	r1, #0
 425 0040 42F82310 		str	r1, [r2, r3, lsl #2]
 132:.\main.c      ****         halfBitIndex++;
 426              		.loc 1 132 0
 427 0044 5D4B     		ldr	r3, .L38
 428 0046 1B68     		ldr	r3, [r3]
 429 0048 0133     		adds	r3, r3, #1
 430 004a 5C4A     		ldr	r2, .L38
 431 004c 1360     		str	r3, [r2]
 432 004e 15E0     		b	.L28
 433              	.L27:
 133:.\main.c      ****     }else{
 134:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 11


 434              		.loc 1 134 0
 435 0050 5A4B     		ldr	r3, .L38
 436 0052 1B68     		ldr	r3, [r3]
 437 0054 5A4A     		ldr	r2, .L38+4
 438 0056 0021     		movs	r1, #0
 439 0058 42F82310 		str	r1, [r2, r3, lsl #2]
 135:.\main.c      ****         halfBitIndex++;
 440              		.loc 1 135 0
 441 005c 574B     		ldr	r3, .L38
 442 005e 1B68     		ldr	r3, [r3]
 443 0060 0133     		adds	r3, r3, #1
 444 0062 564A     		ldr	r2, .L38
 445 0064 1360     		str	r3, [r2]
 136:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 446              		.loc 1 136 0
 447 0066 554B     		ldr	r3, .L38
 448 0068 1B68     		ldr	r3, [r3]
 449 006a 554A     		ldr	r2, .L38+4
 450 006c 0121     		movs	r1, #1
 451 006e 42F82310 		str	r1, [r2, r3, lsl #2]
 137:.\main.c      ****         halfBitIndex++;
 452              		.loc 1 137 0
 453 0072 524B     		ldr	r3, .L38
 454 0074 1B68     		ldr	r3, [r3]
 455 0076 0133     		adds	r3, r3, #1
 456 0078 504A     		ldr	r2, .L38
 457 007a 1360     		str	r3, [r2]
 458              	.L28:
 138:.\main.c      ****     } 
 139:.\main.c      ****     previousHalfBit = diffManEncodedData[halfBitIndex-1];
 459              		.loc 1 139 0
 460 007c 4F4B     		ldr	r3, .L38
 461 007e 1B68     		ldr	r3, [r3]
 462 0080 013B     		subs	r3, r3, #1
 463 0082 4F4A     		ldr	r2, .L38+4
 464 0084 52F82330 		ldr	r3, [r2, r3, lsl #2]
 465 0088 87F86730 		strb	r3, [r7, #103]
 140:.\main.c      **** 
 141:.\main.c      ****     
 142:.\main.c      ****     //convert asciil char to binary value (which will be 7 bits)
 143:.\main.c      ****     unsigned int binaryValueOfChar[20];//index zero is LSB 
 144:.\main.c      ****     int i;
 145:.\main.c      ****     for(i=0; asciiChar>0; i++)
 466              		.loc 1 145 0
 467 008c 0023     		movs	r3, #0
 468 008e 3B66     		str	r3, [r7, #96]
 469 0090 0FE0     		b	.L29
 470              	.L30:
 146:.\main.c      ****     { 
 147:.\main.c      ****         binaryValueOfChar[i]=asciiChar%2; 
 471              		.loc 1 147 0 discriminator 3
 472 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 473 0094 03F00102 		and	r2, r3, #1
 474 0098 3B6E     		ldr	r3, [r7, #96]
 475 009a 9B00     		lsls	r3, r3, #2
 476 009c 07F16801 		add	r1, r7, #104
 477 00a0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 12


 478 00a2 43F85C2C 		str	r2, [r3, #-92]
 148:.\main.c      ****         asciiChar=asciiChar/2;
 479              		.loc 1 148 0 discriminator 3
 480 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 481 00a8 5B08     		lsrs	r3, r3, #1
 482 00aa FB71     		strb	r3, [r7, #7]
 145:.\main.c      ****     { 
 483              		.loc 1 145 0 discriminator 3
 484 00ac 3B6E     		ldr	r3, [r7, #96]
 485 00ae 0133     		adds	r3, r3, #1
 486 00b0 3B66     		str	r3, [r7, #96]
 487              	.L29:
 145:.\main.c      ****     { 
 488              		.loc 1 145 0 is_stmt 0 discriminator 1
 489 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 490 00b4 002B     		cmp	r3, #0
 491 00b6 ECD1     		bne	.L30
 149:.\main.c      ****     }
 150:.\main.c      **** 
 151:.\main.c      ****     //differential encode the 7 bits (from the binary version of the char)
 152:.\main.c      ****     //must start at the end of the array so to encode the MSB first 
 153:.\main.c      ****     int j;
 154:.\main.c      ****     for(j=INDEX_OF_MSB;j>=0;j--) 
 492              		.loc 1 154 0 is_stmt 1
 493 00b8 0623     		movs	r3, #6
 494 00ba FB65     		str	r3, [r7, #92]
 495 00bc 76E0     		b	.L31
 496              	.L37:
 155:.\main.c      ****     {
 156:.\main.c      ****         if(binaryValueOfChar[j] == 1)
 497              		.loc 1 156 0
 498 00be FB6D     		ldr	r3, [r7, #92]
 499 00c0 9B00     		lsls	r3, r3, #2
 500 00c2 07F16802 		add	r2, r7, #104
 501 00c6 1344     		add	r3, r3, r2
 502 00c8 53F85C3C 		ldr	r3, [r3, #-92]
 503 00cc 012B     		cmp	r3, #1
 504 00ce 31D1     		bne	.L32
 157:.\main.c      ****         {
 158:.\main.c      ****             //bit == 1
 159:.\main.c      ****             if(previousHalfBit == 1)
 505              		.loc 1 159 0
 506 00d0 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 507 00d4 012B     		cmp	r3, #1
 508 00d6 16D1     		bne	.L33
 160:.\main.c      ****             {
 161:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 509              		.loc 1 161 0
 510 00d8 384B     		ldr	r3, .L38
 511 00da 1B68     		ldr	r3, [r3]
 512 00dc 384A     		ldr	r2, .L38+4
 513 00de 0121     		movs	r1, #1
 514 00e0 42F82310 		str	r1, [r2, r3, lsl #2]
 162:.\main.c      ****                 halfBitIndex++;
 515              		.loc 1 162 0
 516 00e4 354B     		ldr	r3, .L38
 517 00e6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 13


 518 00e8 0133     		adds	r3, r3, #1
 519 00ea 344A     		ldr	r2, .L38
 520 00ec 1360     		str	r3, [r2]
 163:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 521              		.loc 1 163 0
 522 00ee 334B     		ldr	r3, .L38
 523 00f0 1B68     		ldr	r3, [r3]
 524 00f2 334A     		ldr	r2, .L38+4
 525 00f4 0021     		movs	r1, #0
 526 00f6 42F82310 		str	r1, [r2, r3, lsl #2]
 164:.\main.c      ****                 halfBitIndex++;    
 527              		.loc 1 164 0
 528 00fa 304B     		ldr	r3, .L38
 529 00fc 1B68     		ldr	r3, [r3]
 530 00fe 0133     		adds	r3, r3, #1
 531 0100 2E4A     		ldr	r2, .L38
 532 0102 1360     		str	r3, [r2]
 533 0104 47E0     		b	.L35
 534              	.L33:
 165:.\main.c      ****             }
 166:.\main.c      ****             else
 167:.\main.c      ****             {
 168:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 535              		.loc 1 168 0
 536 0106 2D4B     		ldr	r3, .L38
 537 0108 1B68     		ldr	r3, [r3]
 538 010a 2D4A     		ldr	r2, .L38+4
 539 010c 0021     		movs	r1, #0
 540 010e 42F82310 		str	r1, [r2, r3, lsl #2]
 169:.\main.c      ****                 halfBitIndex++;
 541              		.loc 1 169 0
 542 0112 2A4B     		ldr	r3, .L38
 543 0114 1B68     		ldr	r3, [r3]
 544 0116 0133     		adds	r3, r3, #1
 545 0118 284A     		ldr	r2, .L38
 546 011a 1360     		str	r3, [r2]
 170:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 547              		.loc 1 170 0
 548 011c 274B     		ldr	r3, .L38
 549 011e 1B68     		ldr	r3, [r3]
 550 0120 274A     		ldr	r2, .L38+4
 551 0122 0121     		movs	r1, #1
 552 0124 42F82310 		str	r1, [r2, r3, lsl #2]
 171:.\main.c      ****                 halfBitIndex++;
 553              		.loc 1 171 0
 554 0128 244B     		ldr	r3, .L38
 555 012a 1B68     		ldr	r3, [r3]
 556 012c 0133     		adds	r3, r3, #1
 557 012e 234A     		ldr	r2, .L38
 558 0130 1360     		str	r3, [r2]
 559 0132 30E0     		b	.L35
 560              	.L32:
 172:.\main.c      ****             }
 173:.\main.c      ****             
 174:.\main.c      ****         }
 175:.\main.c      ****         else
 176:.\main.c      ****         {
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 14


 177:.\main.c      ****             //bit == 0
 178:.\main.c      ****             if(previousHalfBit == 1)
 561              		.loc 1 178 0
 562 0134 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 563 0138 012B     		cmp	r3, #1
 564 013a 16D1     		bne	.L36
 179:.\main.c      ****             {
 180:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 565              		.loc 1 180 0
 566 013c 1F4B     		ldr	r3, .L38
 567 013e 1B68     		ldr	r3, [r3]
 568 0140 1F4A     		ldr	r2, .L38+4
 569 0142 0021     		movs	r1, #0
 570 0144 42F82310 		str	r1, [r2, r3, lsl #2]
 181:.\main.c      ****                 halfBitIndex++;
 571              		.loc 1 181 0
 572 0148 1C4B     		ldr	r3, .L38
 573 014a 1B68     		ldr	r3, [r3]
 574 014c 0133     		adds	r3, r3, #1
 575 014e 1B4A     		ldr	r2, .L38
 576 0150 1360     		str	r3, [r2]
 182:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 577              		.loc 1 182 0
 578 0152 1A4B     		ldr	r3, .L38
 579 0154 1B68     		ldr	r3, [r3]
 580 0156 1A4A     		ldr	r2, .L38+4
 581 0158 0121     		movs	r1, #1
 582 015a 42F82310 		str	r1, [r2, r3, lsl #2]
 183:.\main.c      ****                 halfBitIndex++;
 583              		.loc 1 183 0
 584 015e 174B     		ldr	r3, .L38
 585 0160 1B68     		ldr	r3, [r3]
 586 0162 0133     		adds	r3, r3, #1
 587 0164 154A     		ldr	r2, .L38
 588 0166 1360     		str	r3, [r2]
 589 0168 15E0     		b	.L35
 590              	.L36:
 184:.\main.c      ****             }
 185:.\main.c      ****             else
 186:.\main.c      ****             {
 187:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 591              		.loc 1 187 0
 592 016a 144B     		ldr	r3, .L38
 593 016c 1B68     		ldr	r3, [r3]
 594 016e 144A     		ldr	r2, .L38+4
 595 0170 0121     		movs	r1, #1
 596 0172 42F82310 		str	r1, [r2, r3, lsl #2]
 188:.\main.c      ****                 halfBitIndex++;
 597              		.loc 1 188 0
 598 0176 114B     		ldr	r3, .L38
 599 0178 1B68     		ldr	r3, [r3]
 600 017a 0133     		adds	r3, r3, #1
 601 017c 0F4A     		ldr	r2, .L38
 602 017e 1360     		str	r3, [r2]
 189:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 603              		.loc 1 189 0
 604 0180 0E4B     		ldr	r3, .L38
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 15


 605 0182 1B68     		ldr	r3, [r3]
 606 0184 0E4A     		ldr	r2, .L38+4
 607 0186 0021     		movs	r1, #0
 608 0188 42F82310 		str	r1, [r2, r3, lsl #2]
 190:.\main.c      ****                 halfBitIndex++;
 609              		.loc 1 190 0
 610 018c 0B4B     		ldr	r3, .L38
 611 018e 1B68     		ldr	r3, [r3]
 612 0190 0133     		adds	r3, r3, #1
 613 0192 0A4A     		ldr	r2, .L38
 614 0194 1360     		str	r3, [r2]
 615              	.L35:
 191:.\main.c      ****             }
 192:.\main.c      ****         }
 193:.\main.c      ****         
 194:.\main.c      ****         previousHalfBit = diffManEncodedData[halfBitIndex-1];
 616              		.loc 1 194 0 discriminator 2
 617 0196 094B     		ldr	r3, .L38
 618 0198 1B68     		ldr	r3, [r3]
 619 019a 013B     		subs	r3, r3, #1
 620 019c 084A     		ldr	r2, .L38+4
 621 019e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 622 01a2 87F86730 		strb	r3, [r7, #103]
 154:.\main.c      ****     {
 623              		.loc 1 154 0 discriminator 2
 624 01a6 FB6D     		ldr	r3, [r7, #92]
 625 01a8 013B     		subs	r3, r3, #1
 626 01aa FB65     		str	r3, [r7, #92]
 627              	.L31:
 154:.\main.c      ****     {
 628              		.loc 1 154 0 is_stmt 0 discriminator 1
 629 01ac FB6D     		ldr	r3, [r7, #92]
 630 01ae 002B     		cmp	r3, #0
 631 01b0 85DA     		bge	.L37
 195:.\main.c      ****     }//end for
 196:.\main.c      ****    
 197:.\main.c      **** }//end function
 632              		.loc 1 197 0 is_stmt 1
 633 01b2 6C37     		adds	r7, r7, #108
 634              		.cfi_def_cfa_offset 4
 635 01b4 BD46     		mov	sp, r7
 636              		.cfi_def_cfa_register 13
 637              		@ sp needed
 638 01b6 5DF8047B 		ldr	r7, [sp], #4
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 01ba 7047     		bx	lr
 642              	.L39:
 643              		.align	2
 644              	.L38:
 645 01bc 00000000 		.word	halfBitIndex
 646 01c0 00000000 		.word	diffManEncodedData
 647              		.cfi_endproc
 648              	.LFE67:
 649              		.size	asciiToDiffMan, .-asciiToDiffMan
 650              		.section	.text.transmitData,"ax",%progbits
 651              		.align	2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 16


 652              		.global	transmitData
 653              		.thumb
 654              		.thumb_func
 655              		.type	transmitData, %function
 656              	transmitData:
 657              	.LFB68:
 198:.\main.c      **** 
 199:.\main.c      **** /*
 200:.\main.c      **** Transmits the diff man encoded data. Must have converted string to diff man before calling this met
 201:.\main.c      **** */
 202:.\main.c      **** void transmitData(){
 658              		.loc 1 202 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 82B0     		sub	sp, sp, #8
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 203:.\main.c      ****     int i;
 204:.\main.c      ****     for(i = 0;i < halfBitIndex; i++){
 670              		.loc 1 204 0
 671 0006 0023     		movs	r3, #0
 672 0008 7B60     		str	r3, [r7, #4]
 673 000a 17E0     		b	.L41
 674              	.L43:
 205:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 675              		.loc 1 205 0
 676 000c 114A     		ldr	r2, .L44
 677 000e 7B68     		ldr	r3, [r7, #4]
 678 0010 52F82330 		ldr	r3, [r2, r3, lsl #2]
 679 0014 DBB2     		uxtb	r3, r3
 680 0016 1846     		mov	r0, r3
 681 0018 FFF7FEFF 		bl	TX_pin_Write
 206:.\main.c      ****         Timer_Start();
 682              		.loc 1 206 0
 683 001c FFF7FEFF 		bl	Timer_Start
 207:.\main.c      ****         while(!timerExpired); 
 684              		.loc 1 207 0
 685 0020 00BF     		nop
 686              	.L42:
 687              		.loc 1 207 0 is_stmt 0 discriminator 1
 688 0022 0D4B     		ldr	r3, .L44+4
 689 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690 0026 83F00103 		eor	r3, r3, #1
 691 002a DBB2     		uxtb	r3, r3
 692 002c 002B     		cmp	r3, #0
 693 002e F8D1     		bne	.L42
 208:.\main.c      ****         timerExpired = false;
 694              		.loc 1 208 0 is_stmt 1 discriminator 2
 695 0030 094B     		ldr	r3, .L44+4
 696 0032 0022     		movs	r2, #0
 697 0034 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 17


 204:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 698              		.loc 1 204 0 discriminator 2
 699 0036 7B68     		ldr	r3, [r7, #4]
 700 0038 0133     		adds	r3, r3, #1
 701 003a 7B60     		str	r3, [r7, #4]
 702              	.L41:
 204:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 703              		.loc 1 204 0 is_stmt 0 discriminator 1
 704 003c 074B     		ldr	r3, .L44+8
 705 003e 1B68     		ldr	r3, [r3]
 706 0040 7A68     		ldr	r2, [r7, #4]
 707 0042 9A42     		cmp	r2, r3
 708 0044 E2DB     		blt	.L43
 209:.\main.c      ****     }
 210:.\main.c      ****     TX_pin_Write(1);    //set line to logic-1 after transmission
 709              		.loc 1 210 0 is_stmt 1
 710 0046 0120     		movs	r0, #1
 711 0048 FFF7FEFF 		bl	TX_pin_Write
 211:.\main.c      **** }
 712              		.loc 1 211 0
 713 004c 0837     		adds	r7, r7, #8
 714              		.cfi_def_cfa_offset 8
 715 004e BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0050 80BD     		pop	{r7, pc}
 719              	.L45:
 720 0052 00BF     		.align	2
 721              	.L44:
 722 0054 00000000 		.word	diffManEncodedData
 723 0058 00000000 		.word	timerExpired
 724 005c 00000000 		.word	halfBitIndex
 725              		.cfi_endproc
 726              	.LFE68:
 727              		.size	transmitData, .-transmitData
 728              		.text
 729              	.Letext0:
 730              		.file 2 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 731              		.file 3 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 732              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 733              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 734              		.section	.debug_info,"",%progbits
 735              	.Ldebug_info0:
 736 0000 7A020000 		.4byte	0x27a
 737 0004 0400     		.2byte	0x4
 738 0006 00000000 		.4byte	.Ldebug_abbrev0
 739 000a 04       		.byte	0x4
 740 000b 01       		.uleb128 0x1
 741 000c 6A000000 		.4byte	.LASF32
 742 0010 01       		.byte	0x1
 743 0011 14010000 		.4byte	.LASF33
 744 0015 1D000000 		.4byte	.LASF34
 745 0019 00000000 		.4byte	.Ldebug_ranges0+0
 746 001d 00000000 		.4byte	0
 747 0021 00000000 		.4byte	.Ldebug_line0
 748 0025 02       		.uleb128 0x2
 749 0026 01       		.byte	0x1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 18


 750 0027 06       		.byte	0x6
 751 0028 45020000 		.4byte	.LASF0
 752 002c 02       		.uleb128 0x2
 753 002d 01       		.byte	0x1
 754 002e 08       		.byte	0x8
 755 002f A4010000 		.4byte	.LASF1
 756 0033 02       		.uleb128 0x2
 757 0034 02       		.byte	0x2
 758 0035 05       		.byte	0x5
 759 0036 1F020000 		.4byte	.LASF2
 760 003a 02       		.uleb128 0x2
 761 003b 02       		.byte	0x2
 762 003c 07       		.byte	0x7
 763 003d 56010000 		.4byte	.LASF3
 764 0041 03       		.uleb128 0x3
 765 0042 13000000 		.4byte	.LASF9
 766 0046 02       		.byte	0x2
 767 0047 3F       		.byte	0x3f
 768 0048 4C000000 		.4byte	0x4c
 769 004c 02       		.uleb128 0x2
 770 004d 04       		.byte	0x4
 771 004e 05       		.byte	0x5
 772 004f 2F020000 		.4byte	.LASF4
 773 0053 02       		.uleb128 0x2
 774 0054 04       		.byte	0x4
 775 0055 07       		.byte	0x7
 776 0056 44010000 		.4byte	.LASF5
 777 005a 02       		.uleb128 0x2
 778 005b 08       		.byte	0x8
 779 005c 05       		.byte	0x5
 780 005d E7010000 		.4byte	.LASF6
 781 0061 02       		.uleb128 0x2
 782 0062 08       		.byte	0x8
 783 0063 07       		.byte	0x7
 784 0064 BF010000 		.4byte	.LASF7
 785 0068 04       		.uleb128 0x4
 786 0069 04       		.byte	0x4
 787 006a 05       		.byte	0x5
 788 006b 696E7400 		.ascii	"int\000"
 789 006f 02       		.uleb128 0x2
 790 0070 04       		.byte	0x4
 791 0071 07       		.byte	0x7
 792 0072 B2010000 		.4byte	.LASF8
 793 0076 03       		.uleb128 0x3
 794 0077 D6010000 		.4byte	.LASF10
 795 007b 03       		.byte	0x3
 796 007c 2C       		.byte	0x2c
 797 007d 41000000 		.4byte	0x41
 798 0081 03       		.uleb128 0x3
 799 0082 29020000 		.4byte	.LASF11
 800 0086 04       		.byte	0x4
 801 0087 C2       		.byte	0xc2
 802 0088 2C000000 		.4byte	0x2c
 803 008c 02       		.uleb128 0x2
 804 008d 04       		.byte	0x4
 805 008e 04       		.byte	0x4
 806 008f 1D010000 		.4byte	.LASF12
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 19


 807 0093 02       		.uleb128 0x2
 808 0094 08       		.byte	0x8
 809 0095 04       		.byte	0x4
 810 0096 8E010000 		.4byte	.LASF13
 811 009a 02       		.uleb128 0x2
 812 009b 01       		.byte	0x1
 813 009c 08       		.byte	0x8
 814 009d 02020000 		.4byte	.LASF14
 815 00a1 05       		.uleb128 0x5
 816 00a2 3F010000 		.4byte	.LASF15
 817 00a6 04       		.byte	0x4
 818 00a7 6C01     		.2byte	0x16c
 819 00a9 AD000000 		.4byte	0xad
 820 00ad 06       		.uleb128 0x6
 821 00ae 81000000 		.4byte	0x81
 822 00b2 02       		.uleb128 0x2
 823 00b3 04       		.byte	0x4
 824 00b4 07       		.byte	0x7
 825 00b5 DE010000 		.4byte	.LASF16
 826 00b9 07       		.uleb128 0x7
 827 00ba 04       		.byte	0x4
 828 00bb 9A000000 		.4byte	0x9a
 829 00bf 08       		.uleb128 0x8
 830 00c0 07010000 		.4byte	.LASF35
 831 00c4 01       		.byte	0x1
 832 00c5 14       		.byte	0x14
 833 00c6 00000000 		.4byte	.LFB63
 834 00ca 1C000000 		.4byte	.LFE63-.LFB63
 835 00ce 01       		.uleb128 0x1
 836 00cf 9C       		.byte	0x9c
 837 00d0 09       		.uleb128 0x9
 838 00d1 95010000 		.4byte	.LASF19
 839 00d5 01       		.byte	0x1
 840 00d6 1A       		.byte	0x1a
 841 00d7 68000000 		.4byte	0x68
 842 00db 00000000 		.4byte	.LFB64
 843 00df 2C010000 		.4byte	.LFE64-.LFB64
 844 00e3 01       		.uleb128 0x1
 845 00e4 9C       		.byte	0x9c
 846 00e5 14010000 		.4byte	0x114
 847 00e9 0A       		.uleb128 0xa
 848 00ea 727800   		.ascii	"rx\000"
 849 00ed 01       		.byte	0x1
 850 00ee 1C       		.byte	0x1c
 851 00ef 9A000000 		.4byte	0x9a
 852 00f3 02       		.uleb128 0x2
 853 00f4 91       		.byte	0x91
 854 00f5 76       		.sleb128 -10
 855 00f6 0B       		.uleb128 0xb
 856 00f7 69010000 		.4byte	.LASF17
 857 00fb 01       		.byte	0x1
 858 00fc 1D       		.byte	0x1d
 859 00fd 14010000 		.4byte	0x114
 860 0101 03       		.uleb128 0x3
 861 0102 91       		.byte	0x91
 862 0103 907F     		.sleb128 -112
 863 0105 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 20


 864 0106 F8000000 		.4byte	.LASF18
 865 010a 01       		.byte	0x1
 866 010b 1E       		.byte	0x1e
 867 010c 81000000 		.4byte	0x81
 868 0110 02       		.uleb128 0x2
 869 0111 91       		.byte	0x91
 870 0112 77       		.sleb128 -9
 871 0113 00       		.byte	0
 872 0114 0C       		.uleb128 0xc
 873 0115 9A000000 		.4byte	0x9a
 874 0119 24010000 		.4byte	0x124
 875 011d 0D       		.uleb128 0xd
 876 011e B2000000 		.4byte	0xb2
 877 0122 63       		.byte	0x63
 878 0123 00       		.byte	0
 879 0124 0E       		.uleb128 0xe
 880 0125 07020000 		.4byte	.LASF36
 881 0129 01       		.byte	0x1
 882 012a 64       		.byte	0x64
 883 012b 00000000 		.4byte	.LFB65
 884 012f 48000000 		.4byte	.LFE65-.LFB65
 885 0133 01       		.uleb128 0x1
 886 0134 9C       		.byte	0x9c
 887 0135 0F       		.uleb128 0xf
 888 0136 61020000 		.4byte	.LASF20
 889 013a 01       		.byte	0x1
 890 013b 70       		.byte	0x70
 891 013c 00000000 		.4byte	.LFB66
 892 0140 38000000 		.4byte	.LFE66-.LFB66
 893 0144 01       		.uleb128 0x1
 894 0145 9C       		.byte	0x9c
 895 0146 73010000 		.4byte	0x173
 896 014a 10       		.uleb128 0x10
 897 014b 69010000 		.4byte	.LASF17
 898 014f 01       		.byte	0x1
 899 0150 70       		.byte	0x70
 900 0151 B9000000 		.4byte	0xb9
 901 0155 02       		.uleb128 0x2
 902 0156 91       		.byte	0x91
 903 0157 6C       		.sleb128 -20
 904 0158 10       		.uleb128 0x10
 905 0159 F8000000 		.4byte	.LASF18
 906 015d 01       		.byte	0x1
 907 015e 70       		.byte	0x70
 908 015f 81000000 		.4byte	0x81
 909 0163 02       		.uleb128 0x2
 910 0164 91       		.byte	0x91
 911 0165 6B       		.sleb128 -21
 912 0166 0A       		.uleb128 0xa
 913 0167 6900     		.ascii	"i\000"
 914 0169 01       		.byte	0x1
 915 016a 72       		.byte	0x72
 916 016b 6F000000 		.4byte	0x6f
 917 016f 02       		.uleb128 0x2
 918 0170 91       		.byte	0x91
 919 0171 74       		.sleb128 -12
 920 0172 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 21


 921 0173 11       		.uleb128 0x11
 922 0174 89020000 		.4byte	.LASF21
 923 0178 01       		.byte	0x1
 924 0179 7C       		.byte	0x7c
 925 017a 00000000 		.4byte	.LFB67
 926 017e C4010000 		.4byte	.LFE67-.LFB67
 927 0182 01       		.uleb128 0x1
 928 0183 9C       		.byte	0x9c
 929 0184 CD010000 		.4byte	0x1cd
 930 0188 10       		.uleb128 0x10
 931 0189 9A010000 		.4byte	.LASF22
 932 018d 01       		.byte	0x1
 933 018e 7C       		.byte	0x7c
 934 018f 9A000000 		.4byte	0x9a
 935 0193 03       		.uleb128 0x3
 936 0194 91       		.byte	0x91
 937 0195 977F     		.sleb128 -105
 938 0197 0B       		.uleb128 0xb
 939 0198 51020000 		.4byte	.LASF23
 940 019c 01       		.byte	0x1
 941 019d 7E       		.byte	0x7e
 942 019e 81000000 		.4byte	0x81
 943 01a2 02       		.uleb128 0x2
 944 01a3 91       		.byte	0x91
 945 01a4 77       		.sleb128 -9
 946 01a5 0B       		.uleb128 0xb
 947 01a6 77020000 		.4byte	.LASF24
 948 01aa 01       		.byte	0x1
 949 01ab 8F       		.byte	0x8f
 950 01ac CD010000 		.4byte	0x1cd
 951 01b0 03       		.uleb128 0x3
 952 01b1 91       		.byte	0x91
 953 01b2 9C7F     		.sleb128 -100
 954 01b4 0A       		.uleb128 0xa
 955 01b5 6900     		.ascii	"i\000"
 956 01b7 01       		.byte	0x1
 957 01b8 90       		.byte	0x90
 958 01b9 68000000 		.4byte	0x68
 959 01bd 02       		.uleb128 0x2
 960 01be 91       		.byte	0x91
 961 01bf 70       		.sleb128 -16
 962 01c0 0A       		.uleb128 0xa
 963 01c1 6A00     		.ascii	"j\000"
 964 01c3 01       		.byte	0x1
 965 01c4 99       		.byte	0x99
 966 01c5 68000000 		.4byte	0x68
 967 01c9 02       		.uleb128 0x2
 968 01ca 91       		.byte	0x91
 969 01cb 6C       		.sleb128 -20
 970 01cc 00       		.byte	0
 971 01cd 0C       		.uleb128 0xc
 972 01ce 6F000000 		.4byte	0x6f
 973 01d2 DD010000 		.4byte	0x1dd
 974 01d6 0D       		.uleb128 0xd
 975 01d7 B2000000 		.4byte	0xb2
 976 01db 13       		.byte	0x13
 977 01dc 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 22


 978 01dd 12       		.uleb128 0x12
 979 01de 23010000 		.4byte	.LASF37
 980 01e2 01       		.byte	0x1
 981 01e3 CA       		.byte	0xca
 982 01e4 00000000 		.4byte	.LFB68
 983 01e8 60000000 		.4byte	.LFE68-.LFB68
 984 01ec 01       		.uleb128 0x1
 985 01ed 9C       		.byte	0x9c
 986 01ee FF010000 		.4byte	0x1ff
 987 01f2 0A       		.uleb128 0xa
 988 01f3 6900     		.ascii	"i\000"
 989 01f5 01       		.byte	0x1
 990 01f6 CB       		.byte	0xcb
 991 01f7 68000000 		.4byte	0x68
 992 01fb 02       		.uleb128 0x2
 993 01fc 91       		.byte	0x91
 994 01fd 74       		.sleb128 -12
 995 01fe 00       		.byte	0
 996 01ff 13       		.uleb128 0x13
 997 0200 74010000 		.4byte	.LASF25
 998 0204 05       		.byte	0x5
 999 0205 2A06     		.2byte	0x62a
 1000 0207 0B020000 		.4byte	0x20b
 1001 020b 06       		.uleb128 0x6
 1002 020c 76000000 		.4byte	0x76
 1003 0210 0C       		.uleb128 0xc
 1004 0211 68000000 		.4byte	0x68
 1005 0215 21020000 		.4byte	0x221
 1006 0219 14       		.uleb128 0x14
 1007 021a B2000000 		.4byte	0xb2
 1008 021e 1F03     		.2byte	0x31f
 1009 0220 00       		.byte	0
 1010 0221 15       		.uleb128 0x15
 1011 0222 00000000 		.4byte	.LASF26
 1012 0226 01       		.byte	0x1
 1013 0227 10       		.byte	0x10
 1014 0228 10020000 		.4byte	0x210
 1015 022c 05       		.uleb128 0x5
 1016 022d 03       		.byte	0x3
 1017 022e 00000000 		.4byte	diffManEncodedData
 1018 0232 15       		.uleb128 0x15
 1019 0233 81010000 		.4byte	.LASF27
 1020 0237 01       		.byte	0x1
 1021 0238 11       		.byte	0x11
 1022 0239 68000000 		.4byte	0x68
 1023 023d 05       		.uleb128 0x5
 1024 023e 03       		.byte	0x3
 1025 023f 00000000 		.4byte	halfBitIndex
 1026 0243 15       		.uleb128 0x15
 1027 0244 30010000 		.4byte	.LASF28
 1028 0248 01       		.byte	0x1
 1029 0249 11       		.byte	0x11
 1030 024a 68000000 		.4byte	0x68
 1031 024e 05       		.uleb128 0x5
 1032 024f 03       		.byte	0x3
 1033 0250 00000000 		.4byte	currentDataPos
 1034 0254 15       		.uleb128 0x15
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 23


 1035 0255 F5010000 		.4byte	.LASF29
 1036 0259 01       		.byte	0x1
 1037 025a 11       		.byte	0x11
 1038 025b 68000000 		.4byte	0x68
 1039 025f 05       		.uleb128 0x5
 1040 0260 03       		.byte	0x3
 1041 0261 00000000 		.4byte	lengthOfData
 1042 0265 15       		.uleb128 0x15
 1043 0266 38020000 		.4byte	.LASF30
 1044 026a 01       		.byte	0x1
 1045 026b 12       		.byte	0x12
 1046 026c 76020000 		.4byte	0x276
 1047 0270 05       		.uleb128 0x5
 1048 0271 03       		.byte	0x3
 1049 0272 00000000 		.4byte	timerExpired
 1050 0276 02       		.uleb128 0x2
 1051 0277 01       		.byte	0x1
 1052 0278 02       		.byte	0x2
 1053 0279 71020000 		.4byte	.LASF31
 1054 027d 00       		.byte	0
 1055              		.section	.debug_abbrev,"",%progbits
 1056              	.Ldebug_abbrev0:
 1057 0000 01       		.uleb128 0x1
 1058 0001 11       		.uleb128 0x11
 1059 0002 01       		.byte	0x1
 1060 0003 25       		.uleb128 0x25
 1061 0004 0E       		.uleb128 0xe
 1062 0005 13       		.uleb128 0x13
 1063 0006 0B       		.uleb128 0xb
 1064 0007 03       		.uleb128 0x3
 1065 0008 0E       		.uleb128 0xe
 1066 0009 1B       		.uleb128 0x1b
 1067 000a 0E       		.uleb128 0xe
 1068 000b 55       		.uleb128 0x55
 1069 000c 17       		.uleb128 0x17
 1070 000d 11       		.uleb128 0x11
 1071 000e 01       		.uleb128 0x1
 1072 000f 10       		.uleb128 0x10
 1073 0010 17       		.uleb128 0x17
 1074 0011 00       		.byte	0
 1075 0012 00       		.byte	0
 1076 0013 02       		.uleb128 0x2
 1077 0014 24       		.uleb128 0x24
 1078 0015 00       		.byte	0
 1079 0016 0B       		.uleb128 0xb
 1080 0017 0B       		.uleb128 0xb
 1081 0018 3E       		.uleb128 0x3e
 1082 0019 0B       		.uleb128 0xb
 1083 001a 03       		.uleb128 0x3
 1084 001b 0E       		.uleb128 0xe
 1085 001c 00       		.byte	0
 1086 001d 00       		.byte	0
 1087 001e 03       		.uleb128 0x3
 1088 001f 16       		.uleb128 0x16
 1089 0020 00       		.byte	0
 1090 0021 03       		.uleb128 0x3
 1091 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 24


 1092 0023 3A       		.uleb128 0x3a
 1093 0024 0B       		.uleb128 0xb
 1094 0025 3B       		.uleb128 0x3b
 1095 0026 0B       		.uleb128 0xb
 1096 0027 49       		.uleb128 0x49
 1097 0028 13       		.uleb128 0x13
 1098 0029 00       		.byte	0
 1099 002a 00       		.byte	0
 1100 002b 04       		.uleb128 0x4
 1101 002c 24       		.uleb128 0x24
 1102 002d 00       		.byte	0
 1103 002e 0B       		.uleb128 0xb
 1104 002f 0B       		.uleb128 0xb
 1105 0030 3E       		.uleb128 0x3e
 1106 0031 0B       		.uleb128 0xb
 1107 0032 03       		.uleb128 0x3
 1108 0033 08       		.uleb128 0x8
 1109 0034 00       		.byte	0
 1110 0035 00       		.byte	0
 1111 0036 05       		.uleb128 0x5
 1112 0037 16       		.uleb128 0x16
 1113 0038 00       		.byte	0
 1114 0039 03       		.uleb128 0x3
 1115 003a 0E       		.uleb128 0xe
 1116 003b 3A       		.uleb128 0x3a
 1117 003c 0B       		.uleb128 0xb
 1118 003d 3B       		.uleb128 0x3b
 1119 003e 05       		.uleb128 0x5
 1120 003f 49       		.uleb128 0x49
 1121 0040 13       		.uleb128 0x13
 1122 0041 00       		.byte	0
 1123 0042 00       		.byte	0
 1124 0043 06       		.uleb128 0x6
 1125 0044 35       		.uleb128 0x35
 1126 0045 00       		.byte	0
 1127 0046 49       		.uleb128 0x49
 1128 0047 13       		.uleb128 0x13
 1129 0048 00       		.byte	0
 1130 0049 00       		.byte	0
 1131 004a 07       		.uleb128 0x7
 1132 004b 0F       		.uleb128 0xf
 1133 004c 00       		.byte	0
 1134 004d 0B       		.uleb128 0xb
 1135 004e 0B       		.uleb128 0xb
 1136 004f 49       		.uleb128 0x49
 1137 0050 13       		.uleb128 0x13
 1138 0051 00       		.byte	0
 1139 0052 00       		.byte	0
 1140 0053 08       		.uleb128 0x8
 1141 0054 2E       		.uleb128 0x2e
 1142 0055 00       		.byte	0
 1143 0056 3F       		.uleb128 0x3f
 1144 0057 19       		.uleb128 0x19
 1145 0058 03       		.uleb128 0x3
 1146 0059 0E       		.uleb128 0xe
 1147 005a 3A       		.uleb128 0x3a
 1148 005b 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 25


 1149 005c 3B       		.uleb128 0x3b
 1150 005d 0B       		.uleb128 0xb
 1151 005e 27       		.uleb128 0x27
 1152 005f 19       		.uleb128 0x19
 1153 0060 11       		.uleb128 0x11
 1154 0061 01       		.uleb128 0x1
 1155 0062 12       		.uleb128 0x12
 1156 0063 06       		.uleb128 0x6
 1157 0064 40       		.uleb128 0x40
 1158 0065 18       		.uleb128 0x18
 1159 0066 9642     		.uleb128 0x2116
 1160 0068 19       		.uleb128 0x19
 1161 0069 00       		.byte	0
 1162 006a 00       		.byte	0
 1163 006b 09       		.uleb128 0x9
 1164 006c 2E       		.uleb128 0x2e
 1165 006d 01       		.byte	0x1
 1166 006e 3F       		.uleb128 0x3f
 1167 006f 19       		.uleb128 0x19
 1168 0070 03       		.uleb128 0x3
 1169 0071 0E       		.uleb128 0xe
 1170 0072 3A       		.uleb128 0x3a
 1171 0073 0B       		.uleb128 0xb
 1172 0074 3B       		.uleb128 0x3b
 1173 0075 0B       		.uleb128 0xb
 1174 0076 49       		.uleb128 0x49
 1175 0077 13       		.uleb128 0x13
 1176 0078 11       		.uleb128 0x11
 1177 0079 01       		.uleb128 0x1
 1178 007a 12       		.uleb128 0x12
 1179 007b 06       		.uleb128 0x6
 1180 007c 40       		.uleb128 0x40
 1181 007d 18       		.uleb128 0x18
 1182 007e 9642     		.uleb128 0x2116
 1183 0080 19       		.uleb128 0x19
 1184 0081 01       		.uleb128 0x1
 1185 0082 13       		.uleb128 0x13
 1186 0083 00       		.byte	0
 1187 0084 00       		.byte	0
 1188 0085 0A       		.uleb128 0xa
 1189 0086 34       		.uleb128 0x34
 1190 0087 00       		.byte	0
 1191 0088 03       		.uleb128 0x3
 1192 0089 08       		.uleb128 0x8
 1193 008a 3A       		.uleb128 0x3a
 1194 008b 0B       		.uleb128 0xb
 1195 008c 3B       		.uleb128 0x3b
 1196 008d 0B       		.uleb128 0xb
 1197 008e 49       		.uleb128 0x49
 1198 008f 13       		.uleb128 0x13
 1199 0090 02       		.uleb128 0x2
 1200 0091 18       		.uleb128 0x18
 1201 0092 00       		.byte	0
 1202 0093 00       		.byte	0
 1203 0094 0B       		.uleb128 0xb
 1204 0095 34       		.uleb128 0x34
 1205 0096 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 26


 1206 0097 03       		.uleb128 0x3
 1207 0098 0E       		.uleb128 0xe
 1208 0099 3A       		.uleb128 0x3a
 1209 009a 0B       		.uleb128 0xb
 1210 009b 3B       		.uleb128 0x3b
 1211 009c 0B       		.uleb128 0xb
 1212 009d 49       		.uleb128 0x49
 1213 009e 13       		.uleb128 0x13
 1214 009f 02       		.uleb128 0x2
 1215 00a0 18       		.uleb128 0x18
 1216 00a1 00       		.byte	0
 1217 00a2 00       		.byte	0
 1218 00a3 0C       		.uleb128 0xc
 1219 00a4 01       		.uleb128 0x1
 1220 00a5 01       		.byte	0x1
 1221 00a6 49       		.uleb128 0x49
 1222 00a7 13       		.uleb128 0x13
 1223 00a8 01       		.uleb128 0x1
 1224 00a9 13       		.uleb128 0x13
 1225 00aa 00       		.byte	0
 1226 00ab 00       		.byte	0
 1227 00ac 0D       		.uleb128 0xd
 1228 00ad 21       		.uleb128 0x21
 1229 00ae 00       		.byte	0
 1230 00af 49       		.uleb128 0x49
 1231 00b0 13       		.uleb128 0x13
 1232 00b1 2F       		.uleb128 0x2f
 1233 00b2 0B       		.uleb128 0xb
 1234 00b3 00       		.byte	0
 1235 00b4 00       		.byte	0
 1236 00b5 0E       		.uleb128 0xe
 1237 00b6 2E       		.uleb128 0x2e
 1238 00b7 00       		.byte	0
 1239 00b8 3F       		.uleb128 0x3f
 1240 00b9 19       		.uleb128 0x19
 1241 00ba 03       		.uleb128 0x3
 1242 00bb 0E       		.uleb128 0xe
 1243 00bc 3A       		.uleb128 0x3a
 1244 00bd 0B       		.uleb128 0xb
 1245 00be 3B       		.uleb128 0x3b
 1246 00bf 0B       		.uleb128 0xb
 1247 00c0 11       		.uleb128 0x11
 1248 00c1 01       		.uleb128 0x1
 1249 00c2 12       		.uleb128 0x12
 1250 00c3 06       		.uleb128 0x6
 1251 00c4 40       		.uleb128 0x40
 1252 00c5 18       		.uleb128 0x18
 1253 00c6 9742     		.uleb128 0x2117
 1254 00c8 19       		.uleb128 0x19
 1255 00c9 00       		.byte	0
 1256 00ca 00       		.byte	0
 1257 00cb 0F       		.uleb128 0xf
 1258 00cc 2E       		.uleb128 0x2e
 1259 00cd 01       		.byte	0x1
 1260 00ce 3F       		.uleb128 0x3f
 1261 00cf 19       		.uleb128 0x19
 1262 00d0 03       		.uleb128 0x3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 27


 1263 00d1 0E       		.uleb128 0xe
 1264 00d2 3A       		.uleb128 0x3a
 1265 00d3 0B       		.uleb128 0xb
 1266 00d4 3B       		.uleb128 0x3b
 1267 00d5 0B       		.uleb128 0xb
 1268 00d6 27       		.uleb128 0x27
 1269 00d7 19       		.uleb128 0x19
 1270 00d8 11       		.uleb128 0x11
 1271 00d9 01       		.uleb128 0x1
 1272 00da 12       		.uleb128 0x12
 1273 00db 06       		.uleb128 0x6
 1274 00dc 40       		.uleb128 0x40
 1275 00dd 18       		.uleb128 0x18
 1276 00de 9642     		.uleb128 0x2116
 1277 00e0 19       		.uleb128 0x19
 1278 00e1 01       		.uleb128 0x1
 1279 00e2 13       		.uleb128 0x13
 1280 00e3 00       		.byte	0
 1281 00e4 00       		.byte	0
 1282 00e5 10       		.uleb128 0x10
 1283 00e6 05       		.uleb128 0x5
 1284 00e7 00       		.byte	0
 1285 00e8 03       		.uleb128 0x3
 1286 00e9 0E       		.uleb128 0xe
 1287 00ea 3A       		.uleb128 0x3a
 1288 00eb 0B       		.uleb128 0xb
 1289 00ec 3B       		.uleb128 0x3b
 1290 00ed 0B       		.uleb128 0xb
 1291 00ee 49       		.uleb128 0x49
 1292 00ef 13       		.uleb128 0x13
 1293 00f0 02       		.uleb128 0x2
 1294 00f1 18       		.uleb128 0x18
 1295 00f2 00       		.byte	0
 1296 00f3 00       		.byte	0
 1297 00f4 11       		.uleb128 0x11
 1298 00f5 2E       		.uleb128 0x2e
 1299 00f6 01       		.byte	0x1
 1300 00f7 3F       		.uleb128 0x3f
 1301 00f8 19       		.uleb128 0x19
 1302 00f9 03       		.uleb128 0x3
 1303 00fa 0E       		.uleb128 0xe
 1304 00fb 3A       		.uleb128 0x3a
 1305 00fc 0B       		.uleb128 0xb
 1306 00fd 3B       		.uleb128 0x3b
 1307 00fe 0B       		.uleb128 0xb
 1308 00ff 27       		.uleb128 0x27
 1309 0100 19       		.uleb128 0x19
 1310 0101 11       		.uleb128 0x11
 1311 0102 01       		.uleb128 0x1
 1312 0103 12       		.uleb128 0x12
 1313 0104 06       		.uleb128 0x6
 1314 0105 40       		.uleb128 0x40
 1315 0106 18       		.uleb128 0x18
 1316 0107 9742     		.uleb128 0x2117
 1317 0109 19       		.uleb128 0x19
 1318 010a 01       		.uleb128 0x1
 1319 010b 13       		.uleb128 0x13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 28


 1320 010c 00       		.byte	0
 1321 010d 00       		.byte	0
 1322 010e 12       		.uleb128 0x12
 1323 010f 2E       		.uleb128 0x2e
 1324 0110 01       		.byte	0x1
 1325 0111 3F       		.uleb128 0x3f
 1326 0112 19       		.uleb128 0x19
 1327 0113 03       		.uleb128 0x3
 1328 0114 0E       		.uleb128 0xe
 1329 0115 3A       		.uleb128 0x3a
 1330 0116 0B       		.uleb128 0xb
 1331 0117 3B       		.uleb128 0x3b
 1332 0118 0B       		.uleb128 0xb
 1333 0119 11       		.uleb128 0x11
 1334 011a 01       		.uleb128 0x1
 1335 011b 12       		.uleb128 0x12
 1336 011c 06       		.uleb128 0x6
 1337 011d 40       		.uleb128 0x40
 1338 011e 18       		.uleb128 0x18
 1339 011f 9642     		.uleb128 0x2116
 1340 0121 19       		.uleb128 0x19
 1341 0122 01       		.uleb128 0x1
 1342 0123 13       		.uleb128 0x13
 1343 0124 00       		.byte	0
 1344 0125 00       		.byte	0
 1345 0126 13       		.uleb128 0x13
 1346 0127 34       		.uleb128 0x34
 1347 0128 00       		.byte	0
 1348 0129 03       		.uleb128 0x3
 1349 012a 0E       		.uleb128 0xe
 1350 012b 3A       		.uleb128 0x3a
 1351 012c 0B       		.uleb128 0xb
 1352 012d 3B       		.uleb128 0x3b
 1353 012e 05       		.uleb128 0x5
 1354 012f 49       		.uleb128 0x49
 1355 0130 13       		.uleb128 0x13
 1356 0131 3F       		.uleb128 0x3f
 1357 0132 19       		.uleb128 0x19
 1358 0133 3C       		.uleb128 0x3c
 1359 0134 19       		.uleb128 0x19
 1360 0135 00       		.byte	0
 1361 0136 00       		.byte	0
 1362 0137 14       		.uleb128 0x14
 1363 0138 21       		.uleb128 0x21
 1364 0139 00       		.byte	0
 1365 013a 49       		.uleb128 0x49
 1366 013b 13       		.uleb128 0x13
 1367 013c 2F       		.uleb128 0x2f
 1368 013d 05       		.uleb128 0x5
 1369 013e 00       		.byte	0
 1370 013f 00       		.byte	0
 1371 0140 15       		.uleb128 0x15
 1372 0141 34       		.uleb128 0x34
 1373 0142 00       		.byte	0
 1374 0143 03       		.uleb128 0x3
 1375 0144 0E       		.uleb128 0xe
 1376 0145 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 29


 1377 0146 0B       		.uleb128 0xb
 1378 0147 3B       		.uleb128 0x3b
 1379 0148 0B       		.uleb128 0xb
 1380 0149 49       		.uleb128 0x49
 1381 014a 13       		.uleb128 0x13
 1382 014b 3F       		.uleb128 0x3f
 1383 014c 19       		.uleb128 0x19
 1384 014d 02       		.uleb128 0x2
 1385 014e 18       		.uleb128 0x18
 1386 014f 00       		.byte	0
 1387 0150 00       		.byte	0
 1388 0151 00       		.byte	0
 1389              		.section	.debug_aranges,"",%progbits
 1390 0000 44000000 		.4byte	0x44
 1391 0004 0200     		.2byte	0x2
 1392 0006 00000000 		.4byte	.Ldebug_info0
 1393 000a 04       		.byte	0x4
 1394 000b 00       		.byte	0
 1395 000c 0000     		.2byte	0
 1396 000e 0000     		.2byte	0
 1397 0010 00000000 		.4byte	.LFB63
 1398 0014 1C000000 		.4byte	.LFE63-.LFB63
 1399 0018 00000000 		.4byte	.LFB64
 1400 001c 2C010000 		.4byte	.LFE64-.LFB64
 1401 0020 00000000 		.4byte	.LFB65
 1402 0024 48000000 		.4byte	.LFE65-.LFB65
 1403 0028 00000000 		.4byte	.LFB66
 1404 002c 38000000 		.4byte	.LFE66-.LFB66
 1405 0030 00000000 		.4byte	.LFB67
 1406 0034 C4010000 		.4byte	.LFE67-.LFB67
 1407 0038 00000000 		.4byte	.LFB68
 1408 003c 60000000 		.4byte	.LFE68-.LFB68
 1409 0040 00000000 		.4byte	0
 1410 0044 00000000 		.4byte	0
 1411              		.section	.debug_ranges,"",%progbits
 1412              	.Ldebug_ranges0:
 1413 0000 00000000 		.4byte	.LFB63
 1414 0004 1C000000 		.4byte	.LFE63
 1415 0008 00000000 		.4byte	.LFB64
 1416 000c 2C010000 		.4byte	.LFE64
 1417 0010 00000000 		.4byte	.LFB65
 1418 0014 48000000 		.4byte	.LFE65
 1419 0018 00000000 		.4byte	.LFB66
 1420 001c 38000000 		.4byte	.LFE66
 1421 0020 00000000 		.4byte	.LFB67
 1422 0024 C4010000 		.4byte	.LFE67
 1423 0028 00000000 		.4byte	.LFB68
 1424 002c 60000000 		.4byte	.LFE68
 1425 0030 00000000 		.4byte	0
 1426 0034 00000000 		.4byte	0
 1427              		.section	.debug_line,"",%progbits
 1428              	.Ldebug_line0:
 1429 0000 6C020000 		.section	.debug_str,"MS",%progbits,1
 1429      02003D01 
 1429      00000201 
 1429      FB0E0D00 
 1429      01010101 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 30


 1430              	.LASF26:
 1431 0000 64696666 		.ascii	"diffManEncodedData\000"
 1431      4D616E45 
 1431      6E636F64 
 1431      65644461 
 1431      746100
 1432              	.LASF9:
 1433 0013 5F5F696E 		.ascii	"__int32_t\000"
 1433      7433325F 
 1433      7400
 1434              	.LASF34:
 1435 001d 443A5C4D 		.ascii	"D:\\MyDocs\\Documents\\CE4950\\Networking\\Networki"
 1435      79446F63 
 1435      735C446F 
 1435      63756D65 
 1435      6E74735C 
 1436 004b 6E675C55 		.ascii	"ng\\USB_UART01\\USB_UART01.cydsn\000"
 1436      53425F55 
 1436      41525430 
 1436      315C5553 
 1436      425F5541 
 1437              	.LASF32:
 1438 006a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1438      4320342E 
 1438      392E3320 
 1438      32303135 
 1438      30333033 
 1439 009d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1439      20726576 
 1439      6973696F 
 1439      6E203232 
 1439      31323230 
 1440 00d0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1440      66756E63 
 1440      74696F6E 
 1440      2D736563 
 1440      74696F6E 
 1441              	.LASF18:
 1442 00f8 73747269 		.ascii	"stringPosition\000"
 1442      6E67506F 
 1442      73697469 
 1442      6F6E00
 1443              	.LASF35:
 1444 0107 54696D65 		.ascii	"TimerHandler\000"
 1444      7248616E 
 1444      646C6572 
 1444      00
 1445              	.LASF33:
 1446 0114 2E5C6D61 		.ascii	".\\main.c\000"
 1446      696E2E63 
 1446      00
 1447              	.LASF12:
 1448 011d 666C6F61 		.ascii	"float\000"
 1448      7400
 1449              	.LASF37:
 1450 0123 7472616E 		.ascii	"transmitData\000"
 1450      736D6974 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 31


 1450      44617461 
 1450      00
 1451              	.LASF28:
 1452 0130 63757272 		.ascii	"currentDataPos\000"
 1452      656E7444 
 1452      61746150 
 1452      6F7300
 1453              	.LASF15:
 1454 013f 72656738 		.ascii	"reg8\000"
 1454      00
 1455              	.LASF5:
 1456 0144 6C6F6E67 		.ascii	"long unsigned int\000"
 1456      20756E73 
 1456      69676E65 
 1456      6420696E 
 1456      7400
 1457              	.LASF3:
 1458 0156 73686F72 		.ascii	"short unsigned int\000"
 1458      7420756E 
 1458      7369676E 
 1458      65642069 
 1458      6E7400
 1459              	.LASF17:
 1460 0169 6C696E65 		.ascii	"lineString\000"
 1460      53747269 
 1460      6E6700
 1461              	.LASF25:
 1462 0174 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1462      52784275 
 1462      66666572 
 1462      00
 1463              	.LASF27:
 1464 0181 68616C66 		.ascii	"halfBitIndex\000"
 1464      42697449 
 1464      6E646578 
 1464      00
 1465              	.LASF13:
 1466 018e 646F7562 		.ascii	"double\000"
 1466      6C6500
 1467              	.LASF19:
 1468 0195 6D61696E 		.ascii	"main\000"
 1468      00
 1469              	.LASF22:
 1470 019a 61736369 		.ascii	"asciiChar\000"
 1470      69436861 
 1470      7200
 1471              	.LASF1:
 1472 01a4 756E7369 		.ascii	"unsigned char\000"
 1472      676E6564 
 1472      20636861 
 1472      7200
 1473              	.LASF8:
 1474 01b2 756E7369 		.ascii	"unsigned int\000"
 1474      676E6564 
 1474      20696E74 
 1474      00
 1475              	.LASF7:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 32


 1476 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1476      206C6F6E 
 1476      6720756E 
 1476      7369676E 
 1476      65642069 
 1477              	.LASF10:
 1478 01d6 696E7433 		.ascii	"int32_t\000"
 1478      325F7400 
 1479              	.LASF16:
 1480 01de 73697A65 		.ascii	"sizetype\000"
 1480      74797065 
 1480      00
 1481              	.LASF6:
 1482 01e7 6C6F6E67 		.ascii	"long long int\000"
 1482      206C6F6E 
 1482      6720696E 
 1482      7400
 1483              	.LASF29:
 1484 01f5 6C656E67 		.ascii	"lengthOfData\000"
 1484      74684F66 
 1484      44617461 
 1484      00
 1485              	.LASF14:
 1486 0202 63686172 		.ascii	"char\000"
 1486      00
 1487              	.LASF36:
 1488 0207 696E6974 		.ascii	"initDiffManEncodedArray\000"
 1488      44696666 
 1488      4D616E45 
 1488      6E636F64 
 1488      65644172 
 1489              	.LASF2:
 1490 021f 73686F72 		.ascii	"short int\000"
 1490      7420696E 
 1490      7400
 1491              	.LASF11:
 1492 0229 75696E74 		.ascii	"uint8\000"
 1492      3800
 1493              	.LASF4:
 1494 022f 6C6F6E67 		.ascii	"long int\000"
 1494      20696E74 
 1494      00
 1495              	.LASF30:
 1496 0238 74696D65 		.ascii	"timerExpired\000"
 1496      72457870 
 1496      69726564 
 1496      00
 1497              	.LASF0:
 1498 0245 7369676E 		.ascii	"signed char\000"
 1498      65642063 
 1498      68617200 
 1499              	.LASF23:
 1500 0251 70726576 		.ascii	"previousHalfBit\000"
 1500      696F7573 
 1500      48616C66 
 1500      42697400 
 1501              	.LASF20:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccqHj4N9.s 			page 33


 1502 0261 73747269 		.ascii	"stringToDiffMan\000"
 1502      6E67546F 
 1502      44696666 
 1502      4D616E00 
 1503              	.LASF31:
 1504 0271 5F426F6F 		.ascii	"_Bool\000"
 1504      6C00
 1505              	.LASF24:
 1506 0277 62696E61 		.ascii	"binaryValueOfChar\000"
 1506      72795661 
 1506      6C75654F 
 1506      66436861 
 1506      7200
 1507              	.LASF21:
 1508 0289 61736369 		.ascii	"asciiToDiffMan\000"
 1508      69546F44 
 1508      6966664D 
 1508      616E00
 1509              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
