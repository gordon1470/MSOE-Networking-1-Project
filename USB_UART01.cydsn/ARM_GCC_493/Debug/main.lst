ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.main,"ax",%progbits
  19              		.align	2
  20              		.global	main
  21              		.thumb
  22              		.thumb_func
  23              		.type	main, %function
  24              	main:
  25              	.LFB63:
  26              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** *   Enumerates as a Virtual Com port.  Receives data from hyper terminal, then 
   8:.\main.c      **** *   send received data backward. LCD shows the Line settings.
   9:.\main.c      **** *   
  10:.\main.c      **** *  To test project:
  11:.\main.c      **** *   1. Build the project and program the hex file on to the target device.
  12:.\main.c      **** *   2. Select 3.3V in SW3 and plug-in power to the CY8CKIT-001
  13:.\main.c      **** *   3. Connect USB cable from the computer to the CY8CKIT-001.
  14:.\main.c      **** *   4. Select the USB_UART.inf file from the project directory, as the driver 
  15:.\main.c      **** *      for this example once Windows asks for it.
  16:.\main.c      **** *   5. Open "Device Manager" and note the COM port number for "Example Project"
  17:.\main.c      **** *      device.
  18:.\main.c      **** *   6. Open "HyperTerminal" application and make new connection to noted COM port
  19:.\main.c      **** *   7. Type the message, observe echo data received.
  20:.\main.c      **** *
  21:.\main.c      **** * Related Document:
  22:.\main.c      **** *  Universal Serial Bus Specification Revision 2.0 
  23:.\main.c      **** *  Universal Serial Bus Class Definitions for Communications Devices 
  24:.\main.c      **** *  Revision 1.2
  25:.\main.c      **** *
  26:.\main.c      **** ********************************************************************************
  27:.\main.c      **** * Copyright 2012, Cypress Semiconductor Corporation. All rights reserved.
  28:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  29:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  30:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  31:.\main.c      **** * accompanying the software package from which you obtained this software.
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 2


  32:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  33:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  34:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  35:.\main.c      **** *******************************************************************************/
  36:.\main.c      **** 
  37:.\main.c      **** #include <device.h>
  38:.\main.c      **** #include "stdio.h"
  39:.\main.c      **** void atoB(uint8 dec);
  40:.\main.c      **** int main()
  41:.\main.c      **** {
  27              		.loc 1 41 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 112
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 9CB0     		sub	sp, sp, #112
  36              		.cfi_def_cfa_offset 120
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  42:.\main.c      ****     char rx;
  43:.\main.c      ****     uint8 flag = 0;
  39              		.loc 1 43 0
  40 0006 0023     		movs	r3, #0
  41 0008 87F86F30 		strb	r3, [r7, #111]
  44:.\main.c      ****     char lineStr[100];
  45:.\main.c      ****     uint8 position = 0;
  42              		.loc 1 45 0
  43 000c 0023     		movs	r3, #0
  44 000e 87F86E30 		strb	r3, [r7, #110]
  46:.\main.c      ****     /* Enable Global Interrupts */
  47:.\main.c      ****     CyGlobalIntEnable;                        
  45              		.loc 1 47 0
  46              	@ 47 ".\main.c" 1
  47 0012 62B6     		CPSIE   i
  48              	@ 0 "" 2
  48:.\main.c      **** 
  49:.\main.c      ****     /* Start USBFS Operation with 3V operation */
  50:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
  49              		.loc 1 50 0
  50              		.thumb
  51 0014 0020     		movs	r0, #0
  52 0016 0021     		movs	r1, #0
  53 0018 FFF7FEFF 		bl	USBUART_1_Start
  51:.\main.c      ****     
  52:.\main.c      ****     TX_pin_Write(1);
  54              		.loc 1 52 0
  55 001c 0120     		movs	r0, #1
  56 001e FFF7FEFF 		bl	TX_pin_Write
  57              	.L16:
  53:.\main.c      ****     /* Main Loop: */
  54:.\main.c      ****     for(;;)
  55:.\main.c      ****     {
  56:.\main.c      ****         if(USBUART_1_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE reques
  58              		.loc 1 56 0
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 3


  59 0022 FFF7FEFF 		bl	USBUART_1_IsConfigurationChanged
  60 0026 0346     		mov	r3, r0
  61 0028 002B     		cmp	r3, #0
  62 002a 06D0     		beq	.L2
  57:.\main.c      ****         {
  58:.\main.c      ****             if(USBUART_1_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
  63              		.loc 1 58 0
  64 002c FFF7FEFF 		bl	USBUART_1_GetConfiguration
  65 0030 0346     		mov	r3, r0
  66 0032 002B     		cmp	r3, #0
  67 0034 01D0     		beq	.L2
  59:.\main.c      ****             {
  60:.\main.c      ****                 /* Enumeration is done, enable OUT endpoint for receive data from Host */
  61:.\main.c      ****                 USBUART_1_CDC_Init();
  68              		.loc 1 61 0
  69 0036 FFF7FEFF 		bl	USBUART_1_CDC_Init
  70              	.L2:
  62:.\main.c      ****             }
  63:.\main.c      ****         }         
  64:.\main.c      ****         if(USBUART_1_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
  71              		.loc 1 64 0
  72 003a FFF7FEFF 		bl	USBUART_1_GetConfiguration
  73 003e 0346     		mov	r3, r0
  74 0040 002B     		cmp	r3, #0
  75 0042 00F08A80 		beq	.L3
  65:.\main.c      ****         {
  66:.\main.c      ****             if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
  76              		.loc 1 66 0
  77 0046 FFF7FEFF 		bl	USBUART_1_DataIsReady
  78 004a 0346     		mov	r3, r0
  79 004c 002B     		cmp	r3, #0
  80 004e 55D0     		beq	.L4
  67:.\main.c      ****             {   
  68:.\main.c      ****                 rx = USBUART_1_GetChar();
  81              		.loc 1 68 0
  82 0050 FFF7FEFF 		bl	USBUART_1_GetChar
  83 0054 0346     		mov	r3, r0
  84 0056 87F86730 		strb	r3, [r7, #103]
  69:.\main.c      ****                 switch(rx){
  85              		.loc 1 69 0
  86 005a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
  87 005e 0D2B     		cmp	r3, #13
  88 0060 25D0     		beq	.L6
  89 0062 1B2B     		cmp	r3, #27
  90 0064 49D0     		beq	.L18
  91 0066 082B     		cmp	r3, #8
  92 0068 2DD1     		bne	.L17
  70:.\main.c      ****                     case 8://backspace
  71:.\main.c      ****                     if(position>0){
  93              		.loc 1 71 0
  94 006a 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
  95 006e 002B     		cmp	r3, #0
  96 0070 1CD0     		beq	.L9
  72:.\main.c      ****                         position--;
  97              		.loc 1 72 0
  98 0072 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
  99 0076 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 4


 100 0078 87F86E30 		strb	r3, [r7, #110]
  73:.\main.c      ****                         lineStr[position] = '\0';
 101              		.loc 1 73 0
 102 007c 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 103 0080 07F17002 		add	r2, r7, #112
 104 0084 1344     		add	r3, r3, r2
 105 0086 0022     		movs	r2, #0
 106 0088 03F8702C 		strb	r2, [r3, #-112]
  74:.\main.c      ****                         //backspace space backspace
  75:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u); 
 107              		.loc 1 75 0
 108 008c 00BF     		nop
 109              	.L10:
 110              		.loc 1 75 0 is_stmt 0 discriminator 1
 111 008e FFF7FEFF 		bl	USBUART_1_CDCIsReady
 112 0092 0346     		mov	r3, r0
 113 0094 002B     		cmp	r3, #0
 114 0096 FAD0     		beq	.L10
  76:.\main.c      ****                         USBUART_1_PutChar(8);
 115              		.loc 1 76 0 is_stmt 1
 116 0098 0820     		movs	r0, #8
 117 009a FFF7FEFF 		bl	USBUART_1_PutChar
  77:.\main.c      ****                         USBUART_1_PutChar(32);
 118              		.loc 1 77 0
 119 009e 2020     		movs	r0, #32
 120 00a0 FFF7FEFF 		bl	USBUART_1_PutChar
  78:.\main.c      ****                         USBUART_1_PutChar(8);
 121              		.loc 1 78 0
 122 00a4 0820     		movs	r0, #8
 123 00a6 FFF7FEFF 		bl	USBUART_1_PutChar
  79:.\main.c      ****                     }
  80:.\main.c      ****                     break;
 124              		.loc 1 80 0
 125 00aa 27E0     		b	.L4
 126              	.L9:
 127 00ac 26E0     		b	.L4
 128              	.L6:
  81:.\main.c      ****                     case 13://enter (carriage return)
  82:.\main.c      ****                     flag = 1;
 129              		.loc 1 82 0
 130 00ae 0123     		movs	r3, #1
 131 00b0 87F86F30 		strb	r3, [r7, #111]
  83:.\main.c      ****                     while(USBUART_1_CDCIsReady() == 0u);
 132              		.loc 1 83 0
 133 00b4 00BF     		nop
 134              	.L11:
 135              		.loc 1 83 0 is_stmt 0 discriminator 1
 136 00b6 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 137 00ba 0346     		mov	r3, r0
 138 00bc 002B     		cmp	r3, #0
 139 00be FAD0     		beq	.L11
  84:.\main.c      ****                     USBUART_1_PutCRLF();
 140              		.loc 1 84 0 is_stmt 1
 141 00c0 FFF7FEFF 		bl	USBUART_1_PutCRLF
  85:.\main.c      ****                     break;
 142              		.loc 1 85 0
 143 00c4 1AE0     		b	.L4
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 5


 144              	.L17:
  86:.\main.c      ****                     case 27://escape
  87:.\main.c      ****                     break;
  88:.\main.c      ****                     default://everything else
  89:.\main.c      ****                     lineStr[position] = rx;
 145              		.loc 1 89 0
 146 00c6 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 147 00ca 07F17002 		add	r2, r7, #112
 148 00ce 1344     		add	r3, r3, r2
 149 00d0 97F86720 		ldrb	r2, [r7, #103]
 150 00d4 03F8702C 		strb	r2, [r3, #-112]
  90:.\main.c      ****                     position++;
 151              		.loc 1 90 0
 152 00d8 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 153 00dc 0133     		adds	r3, r3, #1
 154 00de 87F86E30 		strb	r3, [r7, #110]
  91:.\main.c      ****                     while(USBUART_1_CDCIsReady() == 0u); 
 155              		.loc 1 91 0
 156 00e2 00BF     		nop
 157              	.L12:
 158              		.loc 1 91 0 is_stmt 0 discriminator 1
 159 00e4 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 160 00e8 0346     		mov	r3, r0
 161 00ea 002B     		cmp	r3, #0
 162 00ec FAD0     		beq	.L12
  92:.\main.c      ****                     USBUART_1_PutChar(rx);       /* Send data back to PC */
 163              		.loc 1 92 0 is_stmt 1
 164 00ee 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 165 00f2 1846     		mov	r0, r3
 166 00f4 FFF7FEFF 		bl	USBUART_1_PutChar
  93:.\main.c      ****                     break;
 167              		.loc 1 93 0
 168 00f8 00E0     		b	.L4
 169              	.L18:
  87:.\main.c      ****                     default://everything else
 170              		.loc 1 87 0
 171 00fa 00BF     		nop
 172              	.L4:
  94:.\main.c      ****                 }
  95:.\main.c      ****             }
  96:.\main.c      ****             if(flag && position != 0){
 173              		.loc 1 96 0
 174 00fc 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 175 0100 002B     		cmp	r3, #0
 176 0102 27D0     		beq	.L13
 177              		.loc 1 96 0 is_stmt 0 discriminator 1
 178 0104 97F86E30 		ldrb	r3, [r7, #110]	@ zero_extendqisi2
 179 0108 002B     		cmp	r3, #0
 180 010a 23D0     		beq	.L13
 181              	.LBB2:
  97:.\main.c      ****                 int i = 0;
 182              		.loc 1 97 0 is_stmt 1
 183 010c 0023     		movs	r3, #0
 184 010e BB66     		str	r3, [r7, #104]
  98:.\main.c      ****                 flag = 0;
 185              		.loc 1 98 0
 186 0110 0023     		movs	r3, #0
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 6


 187 0112 87F86F30 		strb	r3, [r7, #111]
  99:.\main.c      ****                 TX_pin_Write(0);
 188              		.loc 1 99 0
 189 0116 0020     		movs	r0, #0
 190 0118 FFF7FEFF 		bl	TX_pin_Write
 100:.\main.c      ****                 CyDelayUs(250);//1/4000th of a sec, or 2000 baud with diff man
 191              		.loc 1 100 0
 192 011c FA20     		movs	r0, #250
 193 011e FFF7FEFF 		bl	CyDelayUs
 101:.\main.c      ****                 TX_pin_Write(1);
 194              		.loc 1 101 0
 195 0122 0120     		movs	r0, #1
 196 0124 FFF7FEFF 		bl	TX_pin_Write
 102:.\main.c      ****                 CyDelayUs(250);
 197              		.loc 1 102 0
 198 0128 FA20     		movs	r0, #250
 199 012a FFF7FEFF 		bl	CyDelayUs
 103:.\main.c      ****                 for(i = 0; i < position; i++){
 200              		.loc 1 103 0
 201 012e 0023     		movs	r3, #0
 202 0130 BB66     		str	r3, [r7, #104]
 203 0132 09E0     		b	.L14
 204              	.L15:
 104:.\main.c      ****                     atoB(lineStr[i]);
 205              		.loc 1 104 0 discriminator 3
 206 0134 3A46     		mov	r2, r7
 207 0136 BB6E     		ldr	r3, [r7, #104]
 208 0138 1344     		add	r3, r3, r2
 209 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210 013c 1846     		mov	r0, r3
 211 013e FFF7FEFF 		bl	atoB
 103:.\main.c      ****                 for(i = 0; i < position; i++){
 212              		.loc 1 103 0 discriminator 3
 213 0142 BB6E     		ldr	r3, [r7, #104]
 214 0144 0133     		adds	r3, r3, #1
 215 0146 BB66     		str	r3, [r7, #104]
 216              	.L14:
 103:.\main.c      ****                 for(i = 0; i < position; i++){
 217              		.loc 1 103 0 is_stmt 0 discriminator 1
 218 0148 97F86E20 		ldrb	r2, [r7, #110]	@ zero_extendqisi2
 219 014c BB6E     		ldr	r3, [r7, #104]
 220 014e 9A42     		cmp	r2, r3
 221 0150 F0DC     		bgt	.L15
 222              	.LBE2:
  96:.\main.c      ****                 int i = 0;
 223              		.loc 1 96 0 is_stmt 1
 224 0152 02E0     		b	.L3
 225              	.L13:
 105:.\main.c      ****                 }
 106:.\main.c      ****             }else flag = 0;
 226              		.loc 1 106 0
 227 0154 0023     		movs	r3, #0
 228 0156 87F86F30 		strb	r3, [r7, #111]
 229              	.L3:
 107:.\main.c      ****         }
 108:.\main.c      ****     }   
 230              		.loc 1 108 0 discriminator 1
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 7


 231 015a 62E7     		b	.L16
 232              		.cfi_endproc
 233              	.LFE63:
 234              		.size	main, .-main
 235              		.section	.text.atoB,"ax",%progbits
 236              		.align	2
 237              		.global	atoB
 238              		.thumb
 239              		.thumb_func
 240              		.type	atoB, %function
 241              	atoB:
 242              	.LFB64:
 109:.\main.c      **** }
 110:.\main.c      **** 
 111:.\main.c      **** void atoB(uint8 dec)
 112:.\main.c      ****     {
 243              		.loc 1 112 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 104
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 9AB0     		sub	sp, sp, #104
 252              		.cfi_def_cfa_offset 112
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 0346     		mov	r3, r0
 256 0008 FB71     		strb	r3, [r7, #7]
 113:.\main.c      **** 	  int a[20];//flag "ten" checks if 1 is represented as "10" or "01",
 114:.\main.c      ****       int i=0,j,ten = 0;
 257              		.loc 1 114 0
 258 000a 0023     		movs	r3, #0
 259 000c 7B66     		str	r3, [r7, #100]
 260 000e 0023     		movs	r3, #0
 261 0010 FB65     		str	r3, [r7, #92]
 115:.\main.c      ****       while(dec>0) 
 262              		.loc 1 115 0
 263 0012 0FE0     		b	.L20
 264              	.L21:
 116:.\main.c      ****       { 
 117:.\main.c      ****            a[i]=dec%2; 
 265              		.loc 1 117 0
 266 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 0016 03F00102 		and	r2, r3, #1
 268 001a 7B6E     		ldr	r3, [r7, #100]
 269 001c 9B00     		lsls	r3, r3, #2
 270 001e 07F16801 		add	r1, r7, #104
 271 0022 0B44     		add	r3, r3, r1
 272 0024 43F85C2C 		str	r2, [r3, #-92]
 118:.\main.c      ****            i++; 
 273              		.loc 1 118 0
 274 0028 7B6E     		ldr	r3, [r7, #100]
 275 002a 0133     		adds	r3, r3, #1
 276 002c 7B66     		str	r3, [r7, #100]
 119:.\main.c      ****            dec=dec/2;
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 8


 277              		.loc 1 119 0
 278 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 279 0030 5B08     		lsrs	r3, r3, #1
 280 0032 FB71     		strb	r3, [r7, #7]
 281              	.L20:
 115:.\main.c      ****       { 
 282              		.loc 1 115 0
 283 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 284 0036 002B     		cmp	r3, #0
 285 0038 ECD1     		bne	.L21
 120:.\main.c      ****       }
 121:.\main.c      ****       for(j=i-1;j>=0;j--) 
 286              		.loc 1 121 0
 287 003a 7B6E     		ldr	r3, [r7, #100]
 288 003c 013B     		subs	r3, r3, #1
 289 003e 3B66     		str	r3, [r7, #96]
 290 0040 2EE0     		b	.L22
 291              	.L26:
 122:.\main.c      ****       {
 123:.\main.c      ****         if(a[j]){//if 1, ten flag is changed
 292              		.loc 1 123 0
 293 0042 3B6E     		ldr	r3, [r7, #96]
 294 0044 9B00     		lsls	r3, r3, #2
 295 0046 07F16802 		add	r2, r7, #104
 296 004a 1344     		add	r3, r3, r2
 297 004c 53F85C3C 		ldr	r3, [r3, #-92]
 298 0050 002B     		cmp	r3, #0
 299 0052 06D0     		beq	.L23
 124:.\main.c      ****             ten = !ten;   
 300              		.loc 1 124 0
 301 0054 FB6D     		ldr	r3, [r7, #92]
 302 0056 002B     		cmp	r3, #0
 303 0058 0CBF     		ite	eq
 304 005a 0123     		moveq	r3, #1
 305 005c 0023     		movne	r3, #0
 306 005e DBB2     		uxtb	r3, r3
 307 0060 FB65     		str	r3, [r7, #92]
 308              	.L23:
 125:.\main.c      ****         }
 126:.\main.c      ****         if(ten){
 309              		.loc 1 126 0
 310 0062 FB6D     		ldr	r3, [r7, #92]
 311 0064 002B     		cmp	r3, #0
 312 0066 0CD0     		beq	.L24
 127:.\main.c      ****             TX_pin_Write(1);
 313              		.loc 1 127 0
 314 0068 0120     		movs	r0, #1
 315 006a FFF7FEFF 		bl	TX_pin_Write
 128:.\main.c      ****             CyDelayUs(250);//1/4000th of a sec, or 2000 baud with diff man
 316              		.loc 1 128 0
 317 006e FA20     		movs	r0, #250
 318 0070 FFF7FEFF 		bl	CyDelayUs
 129:.\main.c      ****             TX_pin_Write(0);
 319              		.loc 1 129 0
 320 0074 0020     		movs	r0, #0
 321 0076 FFF7FEFF 		bl	TX_pin_Write
 130:.\main.c      ****             CyDelayUs(250);
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 9


 322              		.loc 1 130 0
 323 007a FA20     		movs	r0, #250
 324 007c FFF7FEFF 		bl	CyDelayUs
 325 0080 0BE0     		b	.L25
 326              	.L24:
 131:.\main.c      ****         }else{
 132:.\main.c      ****             TX_pin_Write(0);
 327              		.loc 1 132 0
 328 0082 0020     		movs	r0, #0
 329 0084 FFF7FEFF 		bl	TX_pin_Write
 133:.\main.c      ****             CyDelayUs(250);//1/4000th of a sec, or 2000 baud with diff man
 330              		.loc 1 133 0
 331 0088 FA20     		movs	r0, #250
 332 008a FFF7FEFF 		bl	CyDelayUs
 134:.\main.c      ****             TX_pin_Write(1);
 333              		.loc 1 134 0
 334 008e 0120     		movs	r0, #1
 335 0090 FFF7FEFF 		bl	TX_pin_Write
 135:.\main.c      ****             CyDelayUs(250);
 336              		.loc 1 135 0
 337 0094 FA20     		movs	r0, #250
 338 0096 FFF7FEFF 		bl	CyDelayUs
 339              	.L25:
 121:.\main.c      ****       {
 340              		.loc 1 121 0 discriminator 2
 341 009a 3B6E     		ldr	r3, [r7, #96]
 342 009c 013B     		subs	r3, r3, #1
 343 009e 3B66     		str	r3, [r7, #96]
 344              	.L22:
 121:.\main.c      ****       {
 345              		.loc 1 121 0 is_stmt 0 discriminator 1
 346 00a0 3B6E     		ldr	r3, [r7, #96]
 347 00a2 002B     		cmp	r3, #0
 348 00a4 CDDA     		bge	.L26
 136:.\main.c      ****         }
 137:.\main.c      ****       }
 138:.\main.c      ****     TX_pin_Write(1);//set to HIGH at the end
 349              		.loc 1 138 0 is_stmt 1
 350 00a6 0120     		movs	r0, #1
 351 00a8 FFF7FEFF 		bl	TX_pin_Write
 139:.\main.c      ****     }
 352              		.loc 1 139 0
 353 00ac 6837     		adds	r7, r7, #104
 354              		.cfi_def_cfa_offset 8
 355 00ae BD46     		mov	sp, r7
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 00b0 80BD     		pop	{r7, pc}
 359              		.cfi_endproc
 360              	.LFE64:
 361              		.size	atoB, .-atoB
 362 00b2 00BF     		.text
 363              	.Letext0:
 364              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 365              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 366              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 367              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 10


 368              		.section	.debug_info,"",%progbits
 369              	.Ldebug_info0:
 370 0000 96010000 		.4byte	0x196
 371 0004 0400     		.2byte	0x4
 372 0006 00000000 		.4byte	.Ldebug_abbrev0
 373 000a 04       		.byte	0x4
 374 000b 01       		.uleb128 0x1
 375 000c 0A000000 		.4byte	.LASF21
 376 0010 01       		.byte	0x1
 377 0011 B4000000 		.4byte	.LASF22
 378 0015 00010000 		.4byte	.LASF23
 379 0019 00000000 		.4byte	.Ldebug_ranges0+0
 380 001d 00000000 		.4byte	0
 381 0021 00000000 		.4byte	.Ldebug_line0
 382 0025 02       		.uleb128 0x2
 383 0026 01       		.byte	0x1
 384 0027 06       		.byte	0x6
 385 0028 A5010000 		.4byte	.LASF0
 386 002c 02       		.uleb128 0x2
 387 002d 01       		.byte	0x1
 388 002e 08       		.byte	0x8
 389 002f A6000000 		.4byte	.LASF1
 390 0033 02       		.uleb128 0x2
 391 0034 02       		.byte	0x2
 392 0035 05       		.byte	0x5
 393 0036 8C010000 		.4byte	.LASF2
 394 003a 02       		.uleb128 0x2
 395 003b 02       		.byte	0x2
 396 003c 07       		.byte	0x7
 397 003d D4000000 		.4byte	.LASF3
 398 0041 03       		.uleb128 0x3
 399 0042 00000000 		.4byte	.LASF9
 400 0046 02       		.byte	0x2
 401 0047 3F       		.byte	0x3f
 402 0048 4C000000 		.4byte	0x4c
 403 004c 02       		.uleb128 0x2
 404 004d 04       		.byte	0x4
 405 004e 05       		.byte	0x5
 406 004f 9C010000 		.4byte	.LASF4
 407 0053 02       		.uleb128 0x2
 408 0054 04       		.byte	0x4
 409 0055 07       		.byte	0x7
 410 0056 C2000000 		.4byte	.LASF5
 411 005a 02       		.uleb128 0x2
 412 005b 08       		.byte	0x8
 413 005c 05       		.byte	0x5
 414 005d 79010000 		.4byte	.LASF6
 415 0061 02       		.uleb128 0x2
 416 0062 08       		.byte	0x8
 417 0063 07       		.byte	0x7
 418 0064 59010000 		.4byte	.LASF7
 419 0068 04       		.uleb128 0x4
 420 0069 04       		.byte	0x4
 421 006a 05       		.byte	0x5
 422 006b 696E7400 		.ascii	"int\000"
 423 006f 02       		.uleb128 0x2
 424 0070 04       		.byte	0x4
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 11


 425 0071 07       		.byte	0x7
 426 0072 4C010000 		.4byte	.LASF8
 427 0076 03       		.uleb128 0x3
 428 0077 98000000 		.4byte	.LASF10
 429 007b 03       		.byte	0x3
 430 007c 2C       		.byte	0x2c
 431 007d 41000000 		.4byte	0x41
 432 0081 03       		.uleb128 0x3
 433 0082 96010000 		.4byte	.LASF11
 434 0086 04       		.byte	0x4
 435 0087 C2       		.byte	0xc2
 436 0088 2C000000 		.4byte	0x2c
 437 008c 02       		.uleb128 0x2
 438 008d 04       		.byte	0x4
 439 008e 04       		.byte	0x4
 440 008f A0000000 		.4byte	.LASF12
 441 0093 02       		.uleb128 0x2
 442 0094 08       		.byte	0x8
 443 0095 04       		.byte	0x4
 444 0096 F4000000 		.4byte	.LASF13
 445 009a 02       		.uleb128 0x2
 446 009b 01       		.byte	0x1
 447 009c 08       		.byte	0x8
 448 009d 87010000 		.4byte	.LASF14
 449 00a1 02       		.uleb128 0x2
 450 00a2 04       		.byte	0x4
 451 00a3 07       		.byte	0x7
 452 00a4 70010000 		.4byte	.LASF15
 453 00a8 05       		.uleb128 0x5
 454 00a9 FB000000 		.4byte	.LASF19
 455 00ad 01       		.byte	0x1
 456 00ae 28       		.byte	0x28
 457 00af 68000000 		.4byte	0x68
 458 00b3 00000000 		.4byte	.LFB63
 459 00b7 5C010000 		.4byte	.LFE63-.LFB63
 460 00bb 01       		.uleb128 0x1
 461 00bc 9C       		.byte	0x9c
 462 00bd 10010000 		.4byte	0x110
 463 00c1 06       		.uleb128 0x6
 464 00c2 727800   		.ascii	"rx\000"
 465 00c5 01       		.byte	0x1
 466 00c6 2A       		.byte	0x2a
 467 00c7 9A000000 		.4byte	0x9a
 468 00cb 02       		.uleb128 0x2
 469 00cc 91       		.byte	0x91
 470 00cd 6F       		.sleb128 -17
 471 00ce 07       		.uleb128 0x7
 472 00cf 47010000 		.4byte	.LASF16
 473 00d3 01       		.byte	0x1
 474 00d4 2B       		.byte	0x2b
 475 00d5 81000000 		.4byte	0x81
 476 00d9 02       		.uleb128 0x2
 477 00da 91       		.byte	0x91
 478 00db 77       		.sleb128 -9
 479 00dc 07       		.uleb128 0x7
 480 00dd B1010000 		.4byte	.LASF17
 481 00e1 01       		.byte	0x1
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 12


 482 00e2 2C       		.byte	0x2c
 483 00e3 10010000 		.4byte	0x110
 484 00e7 03       		.uleb128 0x3
 485 00e8 91       		.byte	0x91
 486 00e9 887F     		.sleb128 -120
 487 00eb 07       		.uleb128 0x7
 488 00ec 3E010000 		.4byte	.LASF18
 489 00f0 01       		.byte	0x1
 490 00f1 2D       		.byte	0x2d
 491 00f2 81000000 		.4byte	0x81
 492 00f6 02       		.uleb128 0x2
 493 00f7 91       		.byte	0x91
 494 00f8 76       		.sleb128 -10
 495 00f9 08       		.uleb128 0x8
 496 00fa 0C010000 		.4byte	.LBB2
 497 00fe 46000000 		.4byte	.LBE2-.LBB2
 498 0102 06       		.uleb128 0x6
 499 0103 6900     		.ascii	"i\000"
 500 0105 01       		.byte	0x1
 501 0106 61       		.byte	0x61
 502 0107 68000000 		.4byte	0x68
 503 010b 02       		.uleb128 0x2
 504 010c 91       		.byte	0x91
 505 010d 70       		.sleb128 -16
 506 010e 00       		.byte	0
 507 010f 00       		.byte	0
 508 0110 09       		.uleb128 0x9
 509 0111 9A000000 		.4byte	0x9a
 510 0115 20010000 		.4byte	0x120
 511 0119 0A       		.uleb128 0xa
 512 011a A1000000 		.4byte	0xa1
 513 011e 63       		.byte	0x63
 514 011f 00       		.byte	0
 515 0120 0B       		.uleb128 0xb
 516 0121 BD000000 		.4byte	.LASF20
 517 0125 01       		.byte	0x1
 518 0126 6F       		.byte	0x6f
 519 0127 00000000 		.4byte	.LFB64
 520 012b B2000000 		.4byte	.LFE64-.LFB64
 521 012f 01       		.uleb128 0x1
 522 0130 9C       		.byte	0x9c
 523 0131 78010000 		.4byte	0x178
 524 0135 0C       		.uleb128 0xc
 525 0136 64656300 		.ascii	"dec\000"
 526 013a 01       		.byte	0x1
 527 013b 6F       		.byte	0x6f
 528 013c 81000000 		.4byte	0x81
 529 0140 03       		.uleb128 0x3
 530 0141 91       		.byte	0x91
 531 0142 977F     		.sleb128 -105
 532 0144 06       		.uleb128 0x6
 533 0145 6100     		.ascii	"a\000"
 534 0147 01       		.byte	0x1
 535 0148 71       		.byte	0x71
 536 0149 78010000 		.4byte	0x178
 537 014d 03       		.uleb128 0x3
 538 014e 91       		.byte	0x91
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 13


 539 014f 9C7F     		.sleb128 -100
 540 0151 06       		.uleb128 0x6
 541 0152 6900     		.ascii	"i\000"
 542 0154 01       		.byte	0x1
 543 0155 72       		.byte	0x72
 544 0156 68000000 		.4byte	0x68
 545 015a 02       		.uleb128 0x2
 546 015b 91       		.byte	0x91
 547 015c 74       		.sleb128 -12
 548 015d 06       		.uleb128 0x6
 549 015e 6A00     		.ascii	"j\000"
 550 0160 01       		.byte	0x1
 551 0161 72       		.byte	0x72
 552 0162 68000000 		.4byte	0x68
 553 0166 02       		.uleb128 0x2
 554 0167 91       		.byte	0x91
 555 0168 70       		.sleb128 -16
 556 0169 06       		.uleb128 0x6
 557 016a 74656E00 		.ascii	"ten\000"
 558 016e 01       		.byte	0x1
 559 016f 72       		.byte	0x72
 560 0170 68000000 		.4byte	0x68
 561 0174 02       		.uleb128 0x2
 562 0175 91       		.byte	0x91
 563 0176 6C       		.sleb128 -20
 564 0177 00       		.byte	0
 565 0178 09       		.uleb128 0x9
 566 0179 68000000 		.4byte	0x68
 567 017d 88010000 		.4byte	0x188
 568 0181 0A       		.uleb128 0xa
 569 0182 A1000000 		.4byte	0xa1
 570 0186 13       		.byte	0x13
 571 0187 00       		.byte	0
 572 0188 0D       		.uleb128 0xd
 573 0189 E7000000 		.4byte	.LASF24
 574 018d 05       		.byte	0x5
 575 018e 2A06     		.2byte	0x62a
 576 0190 94010000 		.4byte	0x194
 577 0194 0E       		.uleb128 0xe
 578 0195 76000000 		.4byte	0x76
 579 0199 00       		.byte	0
 580              		.section	.debug_abbrev,"",%progbits
 581              	.Ldebug_abbrev0:
 582 0000 01       		.uleb128 0x1
 583 0001 11       		.uleb128 0x11
 584 0002 01       		.byte	0x1
 585 0003 25       		.uleb128 0x25
 586 0004 0E       		.uleb128 0xe
 587 0005 13       		.uleb128 0x13
 588 0006 0B       		.uleb128 0xb
 589 0007 03       		.uleb128 0x3
 590 0008 0E       		.uleb128 0xe
 591 0009 1B       		.uleb128 0x1b
 592 000a 0E       		.uleb128 0xe
 593 000b 55       		.uleb128 0x55
 594 000c 17       		.uleb128 0x17
 595 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 14


 596 000e 01       		.uleb128 0x1
 597 000f 10       		.uleb128 0x10
 598 0010 17       		.uleb128 0x17
 599 0011 00       		.byte	0
 600 0012 00       		.byte	0
 601 0013 02       		.uleb128 0x2
 602 0014 24       		.uleb128 0x24
 603 0015 00       		.byte	0
 604 0016 0B       		.uleb128 0xb
 605 0017 0B       		.uleb128 0xb
 606 0018 3E       		.uleb128 0x3e
 607 0019 0B       		.uleb128 0xb
 608 001a 03       		.uleb128 0x3
 609 001b 0E       		.uleb128 0xe
 610 001c 00       		.byte	0
 611 001d 00       		.byte	0
 612 001e 03       		.uleb128 0x3
 613 001f 16       		.uleb128 0x16
 614 0020 00       		.byte	0
 615 0021 03       		.uleb128 0x3
 616 0022 0E       		.uleb128 0xe
 617 0023 3A       		.uleb128 0x3a
 618 0024 0B       		.uleb128 0xb
 619 0025 3B       		.uleb128 0x3b
 620 0026 0B       		.uleb128 0xb
 621 0027 49       		.uleb128 0x49
 622 0028 13       		.uleb128 0x13
 623 0029 00       		.byte	0
 624 002a 00       		.byte	0
 625 002b 04       		.uleb128 0x4
 626 002c 24       		.uleb128 0x24
 627 002d 00       		.byte	0
 628 002e 0B       		.uleb128 0xb
 629 002f 0B       		.uleb128 0xb
 630 0030 3E       		.uleb128 0x3e
 631 0031 0B       		.uleb128 0xb
 632 0032 03       		.uleb128 0x3
 633 0033 08       		.uleb128 0x8
 634 0034 00       		.byte	0
 635 0035 00       		.byte	0
 636 0036 05       		.uleb128 0x5
 637 0037 2E       		.uleb128 0x2e
 638 0038 01       		.byte	0x1
 639 0039 3F       		.uleb128 0x3f
 640 003a 19       		.uleb128 0x19
 641 003b 03       		.uleb128 0x3
 642 003c 0E       		.uleb128 0xe
 643 003d 3A       		.uleb128 0x3a
 644 003e 0B       		.uleb128 0xb
 645 003f 3B       		.uleb128 0x3b
 646 0040 0B       		.uleb128 0xb
 647 0041 49       		.uleb128 0x49
 648 0042 13       		.uleb128 0x13
 649 0043 11       		.uleb128 0x11
 650 0044 01       		.uleb128 0x1
 651 0045 12       		.uleb128 0x12
 652 0046 06       		.uleb128 0x6
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 15


 653 0047 40       		.uleb128 0x40
 654 0048 18       		.uleb128 0x18
 655 0049 9642     		.uleb128 0x2116
 656 004b 19       		.uleb128 0x19
 657 004c 01       		.uleb128 0x1
 658 004d 13       		.uleb128 0x13
 659 004e 00       		.byte	0
 660 004f 00       		.byte	0
 661 0050 06       		.uleb128 0x6
 662 0051 34       		.uleb128 0x34
 663 0052 00       		.byte	0
 664 0053 03       		.uleb128 0x3
 665 0054 08       		.uleb128 0x8
 666 0055 3A       		.uleb128 0x3a
 667 0056 0B       		.uleb128 0xb
 668 0057 3B       		.uleb128 0x3b
 669 0058 0B       		.uleb128 0xb
 670 0059 49       		.uleb128 0x49
 671 005a 13       		.uleb128 0x13
 672 005b 02       		.uleb128 0x2
 673 005c 18       		.uleb128 0x18
 674 005d 00       		.byte	0
 675 005e 00       		.byte	0
 676 005f 07       		.uleb128 0x7
 677 0060 34       		.uleb128 0x34
 678 0061 00       		.byte	0
 679 0062 03       		.uleb128 0x3
 680 0063 0E       		.uleb128 0xe
 681 0064 3A       		.uleb128 0x3a
 682 0065 0B       		.uleb128 0xb
 683 0066 3B       		.uleb128 0x3b
 684 0067 0B       		.uleb128 0xb
 685 0068 49       		.uleb128 0x49
 686 0069 13       		.uleb128 0x13
 687 006a 02       		.uleb128 0x2
 688 006b 18       		.uleb128 0x18
 689 006c 00       		.byte	0
 690 006d 00       		.byte	0
 691 006e 08       		.uleb128 0x8
 692 006f 0B       		.uleb128 0xb
 693 0070 01       		.byte	0x1
 694 0071 11       		.uleb128 0x11
 695 0072 01       		.uleb128 0x1
 696 0073 12       		.uleb128 0x12
 697 0074 06       		.uleb128 0x6
 698 0075 00       		.byte	0
 699 0076 00       		.byte	0
 700 0077 09       		.uleb128 0x9
 701 0078 01       		.uleb128 0x1
 702 0079 01       		.byte	0x1
 703 007a 49       		.uleb128 0x49
 704 007b 13       		.uleb128 0x13
 705 007c 01       		.uleb128 0x1
 706 007d 13       		.uleb128 0x13
 707 007e 00       		.byte	0
 708 007f 00       		.byte	0
 709 0080 0A       		.uleb128 0xa
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 16


 710 0081 21       		.uleb128 0x21
 711 0082 00       		.byte	0
 712 0083 49       		.uleb128 0x49
 713 0084 13       		.uleb128 0x13
 714 0085 2F       		.uleb128 0x2f
 715 0086 0B       		.uleb128 0xb
 716 0087 00       		.byte	0
 717 0088 00       		.byte	0
 718 0089 0B       		.uleb128 0xb
 719 008a 2E       		.uleb128 0x2e
 720 008b 01       		.byte	0x1
 721 008c 3F       		.uleb128 0x3f
 722 008d 19       		.uleb128 0x19
 723 008e 03       		.uleb128 0x3
 724 008f 0E       		.uleb128 0xe
 725 0090 3A       		.uleb128 0x3a
 726 0091 0B       		.uleb128 0xb
 727 0092 3B       		.uleb128 0x3b
 728 0093 0B       		.uleb128 0xb
 729 0094 27       		.uleb128 0x27
 730 0095 19       		.uleb128 0x19
 731 0096 11       		.uleb128 0x11
 732 0097 01       		.uleb128 0x1
 733 0098 12       		.uleb128 0x12
 734 0099 06       		.uleb128 0x6
 735 009a 40       		.uleb128 0x40
 736 009b 18       		.uleb128 0x18
 737 009c 9642     		.uleb128 0x2116
 738 009e 19       		.uleb128 0x19
 739 009f 01       		.uleb128 0x1
 740 00a0 13       		.uleb128 0x13
 741 00a1 00       		.byte	0
 742 00a2 00       		.byte	0
 743 00a3 0C       		.uleb128 0xc
 744 00a4 05       		.uleb128 0x5
 745 00a5 00       		.byte	0
 746 00a6 03       		.uleb128 0x3
 747 00a7 08       		.uleb128 0x8
 748 00a8 3A       		.uleb128 0x3a
 749 00a9 0B       		.uleb128 0xb
 750 00aa 3B       		.uleb128 0x3b
 751 00ab 0B       		.uleb128 0xb
 752 00ac 49       		.uleb128 0x49
 753 00ad 13       		.uleb128 0x13
 754 00ae 02       		.uleb128 0x2
 755 00af 18       		.uleb128 0x18
 756 00b0 00       		.byte	0
 757 00b1 00       		.byte	0
 758 00b2 0D       		.uleb128 0xd
 759 00b3 34       		.uleb128 0x34
 760 00b4 00       		.byte	0
 761 00b5 03       		.uleb128 0x3
 762 00b6 0E       		.uleb128 0xe
 763 00b7 3A       		.uleb128 0x3a
 764 00b8 0B       		.uleb128 0xb
 765 00b9 3B       		.uleb128 0x3b
 766 00ba 05       		.uleb128 0x5
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 17


 767 00bb 49       		.uleb128 0x49
 768 00bc 13       		.uleb128 0x13
 769 00bd 3F       		.uleb128 0x3f
 770 00be 19       		.uleb128 0x19
 771 00bf 3C       		.uleb128 0x3c
 772 00c0 19       		.uleb128 0x19
 773 00c1 00       		.byte	0
 774 00c2 00       		.byte	0
 775 00c3 0E       		.uleb128 0xe
 776 00c4 35       		.uleb128 0x35
 777 00c5 00       		.byte	0
 778 00c6 49       		.uleb128 0x49
 779 00c7 13       		.uleb128 0x13
 780 00c8 00       		.byte	0
 781 00c9 00       		.byte	0
 782 00ca 00       		.byte	0
 783              		.section	.debug_aranges,"",%progbits
 784 0000 24000000 		.4byte	0x24
 785 0004 0200     		.2byte	0x2
 786 0006 00000000 		.4byte	.Ldebug_info0
 787 000a 04       		.byte	0x4
 788 000b 00       		.byte	0
 789 000c 0000     		.2byte	0
 790 000e 0000     		.2byte	0
 791 0010 00000000 		.4byte	.LFB63
 792 0014 5C010000 		.4byte	.LFE63-.LFB63
 793 0018 00000000 		.4byte	.LFB64
 794 001c B2000000 		.4byte	.LFE64-.LFB64
 795 0020 00000000 		.4byte	0
 796 0024 00000000 		.4byte	0
 797              		.section	.debug_ranges,"",%progbits
 798              	.Ldebug_ranges0:
 799 0000 00000000 		.4byte	.LFB63
 800 0004 5C010000 		.4byte	.LFE63
 801 0008 00000000 		.4byte	.LFB64
 802 000c B2000000 		.4byte	.LFE64
 803 0010 00000000 		.4byte	0
 804 0014 00000000 		.4byte	0
 805              		.section	.debug_line,"",%progbits
 806              	.Ldebug_line0:
 807 0000 F4010000 		.section	.debug_str,"MS",%progbits,1
 807      02004901 
 807      00000201 
 807      FB0E0D00 
 807      01010101 
 808              	.LASF9:
 809 0000 5F5F696E 		.ascii	"__int32_t\000"
 809      7433325F 
 809      7400
 810              	.LASF21:
 811 000a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 811      4320342E 
 811      392E3320 
 811      32303135 
 811      30333033 
 812 003d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 812      20726576 
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 18


 812      6973696F 
 812      6E203232 
 812      31323230 
 813 0070 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 813      66756E63 
 813      74696F6E 
 813      2D736563 
 813      74696F6E 
 814              	.LASF10:
 815 0098 696E7433 		.ascii	"int32_t\000"
 815      325F7400 
 816              	.LASF12:
 817 00a0 666C6F61 		.ascii	"float\000"
 817      7400
 818              	.LASF1:
 819 00a6 756E7369 		.ascii	"unsigned char\000"
 819      676E6564 
 819      20636861 
 819      7200
 820              	.LASF22:
 821 00b4 2E5C6D61 		.ascii	".\\main.c\000"
 821      696E2E63 
 821      00
 822              	.LASF20:
 823 00bd 61746F42 		.ascii	"atoB\000"
 823      00
 824              	.LASF5:
 825 00c2 6C6F6E67 		.ascii	"long unsigned int\000"
 825      20756E73 
 825      69676E65 
 825      6420696E 
 825      7400
 826              	.LASF3:
 827 00d4 73686F72 		.ascii	"short unsigned int\000"
 827      7420756E 
 827      7369676E 
 827      65642069 
 827      6E7400
 828              	.LASF24:
 829 00e7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 829      52784275 
 829      66666572 
 829      00
 830              	.LASF13:
 831 00f4 646F7562 		.ascii	"double\000"
 831      6C6500
 832              	.LASF19:
 833 00fb 6D61696E 		.ascii	"main\000"
 833      00
 834              	.LASF23:
 835 0100 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\PSoC Creator\\USB_UART01\\"
 835      635C486F 
 835      6D655C44 
 835      6F63756D 
 835      656E7473 
 836 012d 5553425F 		.ascii	"USB_UART01.cydsn\000"
 836      55415254 
ARM GAS  C:\Users\gordon\AppData\Local\Temp\ccvRyIKB.s 			page 19


 836      30312E63 
 836      7964736E 
 836      00
 837              	.LASF18:
 838 013e 706F7369 		.ascii	"position\000"
 838      74696F6E 
 838      00
 839              	.LASF16:
 840 0147 666C6167 		.ascii	"flag\000"
 840      00
 841              	.LASF8:
 842 014c 756E7369 		.ascii	"unsigned int\000"
 842      676E6564 
 842      20696E74 
 842      00
 843              	.LASF7:
 844 0159 6C6F6E67 		.ascii	"long long unsigned int\000"
 844      206C6F6E 
 844      6720756E 
 844      7369676E 
 844      65642069 
 845              	.LASF15:
 846 0170 73697A65 		.ascii	"sizetype\000"
 846      74797065 
 846      00
 847              	.LASF6:
 848 0179 6C6F6E67 		.ascii	"long long int\000"
 848      206C6F6E 
 848      6720696E 
 848      7400
 849              	.LASF14:
 850 0187 63686172 		.ascii	"char\000"
 850      00
 851              	.LASF2:
 852 018c 73686F72 		.ascii	"short int\000"
 852      7420696E 
 852      7400
 853              	.LASF11:
 854 0196 75696E74 		.ascii	"uint8\000"
 854      3800
 855              	.LASF4:
 856 019c 6C6F6E67 		.ascii	"long int\000"
 856      20696E74 
 856      00
 857              	.LASF0:
 858 01a5 7369676E 		.ascii	"signed char\000"
 858      65642063 
 858      68617200 
 859              	.LASF17:
 860 01b1 6C696E65 		.ascii	"lineStr\000"
 860      53747200 
 861              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
