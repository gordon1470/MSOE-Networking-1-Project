ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	diffManEncodedData,3456,4
  19              		.comm	diffManReceivedData,108,4
  20              		.comm	rxChar,108,4
  21              		.comm	receivedDataIndex,4,4
  22              		.comm	receivedDataCount,4,4
  23              		.global	halfBitIndex
  24              		.bss
  25              		.align	2
  26              		.type	halfBitIndex, %object
  27              		.size	halfBitIndex, 4
  28              	halfBitIndex:
  29 0000 00000000 		.space	4
  30              		.global	currentDataPos
  31              		.align	2
  32              		.type	currentDataPos, %object
  33              		.size	currentDataPos, 4
  34              	currentDataPos:
  35 0004 00000000 		.space	4
  36              		.global	currentRXCharPosition
  37              		.align	2
  38              		.type	currentRXCharPosition, %object
  39              		.size	currentRXCharPosition, 4
  40              	currentRXCharPosition:
  41 0008 00000000 		.space	4
  42              		.comm	lengthOfData,4,4
  43              		.comm	messageLength,4,4
  44              		.comm	headerCRC,4,4
  45              		.global	TX_DESTINATION_ADDRESS
  46              		.align	2
  47              		.type	TX_DESTINATION_ADDRESS, %object
  48              		.size	TX_DESTINATION_ADDRESS, 4
  49              	TX_DESTINATION_ADDRESS:
  50 000c 00000000 		.space	4
  51              		.comm	timerExpired,1,1
  52              		.comm	dataTransmissionComplete,1,1
  53              		.comm	powerOnEdge,1,1
  54              		.global	headerValid
  55              		.type	headerValid, %object
  56              		.size	headerValid, 1
  57              	headerValid:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 2


  58 0010 00       		.space	1
  59              		.comm	networkState,1,1
  60              		.comm	crcState,1,1
  61              		.comm	receivedChar,1,1
  62 0011 000000   		.section	.text.Idle_Collision_ISR,"ax",%progbits
  63              		.align	2
  64              		.global	Idle_Collision_ISR
  65              		.thumb
  66              		.thumb_func
  67              		.type	Idle_Collision_ISR, %function
  68              	Idle_Collision_ISR:
  69              	.LFB63:
  70              		.file 1 ".\\main.c"
   1:.\main.c      **** #define INDEX_OF_MSB 6
   2:.\main.c      **** #define HIGH 1
   3:.\main.c      **** #define EIGHT_BITS 8
   4:.\main.c      **** #define START_BIT 2
   5:.\main.c      **** #define ASCII_CHAR_MASK 0x7F
   6:.\main.c      **** #define TX_SOURCE_ADDRESS 0
   7:.\main.c      **** #define RX_DESTINATION_ADDRESS 0//these 2 are supposed to be the same
   8:.\main.c      **** #define VERSION_NUMBER 1
   9:.\main.c      **** #define HEADER_POS 7
  10:.\main.c      **** 
  11:.\main.c      **** 
  12:.\main.c      **** #include <device.h>
  13:.\main.c      **** #include <stdbool.h>
  14:.\main.c      **** #include <stdlib.h> //For random number generator
  15:.\main.c      **** #include <time.h>
  16:.\main.c      **** #include "stdio.h"
  17:.\main.c      **** 
  18:.\main.c      **** 
  19:.\main.c      **** int getRandomNumber();
  20:.\main.c      **** void initDiffManEncodedArray();
  21:.\main.c      **** void stringToDiffMan(char*, uint8);
  22:.\main.c      **** void asciiToDiffMan(char);
  23:.\main.c      **** void transmitData();
  24:.\main.c      **** void setNetworkStateOnLEDs();
  25:.\main.c      **** void diffManToASCII();
  26:.\main.c      **** void storeChar();
  27:.\main.c      **** void printChar();
  28:.\main.c      **** bool headerCheck();
  29:.\main.c      **** 
  30:.\main.c      **** int diffManEncodedData[864];
  31:.\main.c      **** uint8 diffManReceivedData[108];
  32:.\main.c      **** char rxChar[108];
  33:.\main.c      **** int receivedDataIndex, receivedDataCount;
  34:.\main.c      **** int halfBitIndex = 0, currentDataPos = 0, currentRXCharPosition = 0, lengthOfData, messageLength, h
  35:.\main.c      **** bool timerExpired, dataTransmissionComplete, powerOnEdge, headerValid = false;
  36:.\main.c      **** enum state {idle, busy, collision} networkState;
  37:.\main.c      **** enum crc {none, header, message, both} crcState;
  38:.\main.c      **** 
  39:.\main.c      **** char receivedChar;
  40:.\main.c      **** 
  41:.\main.c      **** CY_ISR(Idle_Collision_ISR){
  71              		.loc 1 41 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 3


  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  42:.\main.c      ****     networkState = idle;
  81              		.loc 1 42 0
  82 0004 074B     		ldr	r3, .L4
  83 0006 0022     		movs	r2, #0
  84 0008 1A70     		strb	r2, [r3]
  43:.\main.c      ****     if(Receive_Read() == HIGH){
  85              		.loc 1 43 0
  86 000a FFF7FEFF 		bl	Receive_Read
  87 000e 0346     		mov	r3, r0
  88 0010 012B     		cmp	r3, #1
  89 0012 03D1     		bne	.L2
  44:.\main.c      ****         networkState = idle;
  90              		.loc 1 44 0
  91 0014 034B     		ldr	r3, .L4
  92 0016 0022     		movs	r2, #0
  93 0018 1A70     		strb	r2, [r3]
  94 001a 02E0     		b	.L1
  95              	.L2:
  45:.\main.c      ****     }
  46:.\main.c      ****     else{
  47:.\main.c      ****         networkState = collision;
  96              		.loc 1 47 0
  97 001c 014B     		ldr	r3, .L4
  98 001e 0222     		movs	r2, #2
  99 0020 1A70     		strb	r2, [r3]
 100              	.L1:
  48:.\main.c      ****     }
  49:.\main.c      **** }
 101              		.loc 1 49 0
 102 0022 80BD     		pop	{r7, pc}
 103              	.L5:
 104              		.align	2
 105              	.L4:
 106 0024 00000000 		.word	networkState
 107              		.cfi_endproc
 108              	.LFE63:
 109              		.size	Idle_Collision_ISR, .-Idle_Collision_ISR
 110              		.section	.text.Edge_detect_ISR,"ax",%progbits
 111              		.align	2
 112              		.global	Edge_detect_ISR
 113              		.thumb
 114              		.thumb_func
 115              		.type	Edge_detect_ISR, %function
 116              	Edge_detect_ISR:
 117              	.LFB64:
  50:.\main.c      **** 
  51:.\main.c      **** CY_ISR(Edge_detect_ISR){
 118              		.loc 1 51 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 4


 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 98B5     		push	{r3, r4, r7, lr}
 123              		.cfi_def_cfa_offset 16
 124              		.cfi_offset 3, -16
 125              		.cfi_offset 4, -12
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
  52:.\main.c      ****     //Note: on edge detect, will trigger receive timer to start (see TopDesign)
  53:.\main.c      ****     Idle_Collision_Timer_Start();
 130              		.loc 1 53 0
 131 0004 FFF7FEFF 		bl	Idle_Collision_Timer_Start
  54:.\main.c      **** 
  55:.\main.c      ****     //Ignore power on edge
  56:.\main.c      ****     if(!powerOnEdge){
 132              		.loc 1 56 0
 133 0008 0F4B     		ldr	r3, .L9
 134 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135 000c 83F00103 		eor	r3, r3, #1
 136 0010 DBB2     		uxtb	r3, r3
 137 0012 002B     		cmp	r3, #0
 138 0014 0FD0     		beq	.L7
  57:.\main.c      ****         Receive_Timer_Start();
 139              		.loc 1 57 0
 140 0016 FFF7FEFF 		bl	Receive_Timer_Start
  58:.\main.c      ****         diffManReceivedData[receivedDataCount] = Receive_Read();
 141              		.loc 1 58 0
 142 001a 0C4B     		ldr	r3, .L9+4
 143 001c 1C68     		ldr	r4, [r3]
 144 001e FFF7FEFF 		bl	Receive_Read
 145 0022 0346     		mov	r3, r0
 146 0024 1A46     		mov	r2, r3
 147 0026 0A4B     		ldr	r3, .L9+8
 148 0028 1A55     		strb	r2, [r3, r4]
  59:.\main.c      ****         receivedDataCount++;
 149              		.loc 1 59 0
 150 002a 084B     		ldr	r3, .L9+4
 151 002c 1B68     		ldr	r3, [r3]
 152 002e 0133     		adds	r3, r3, #1
 153 0030 064A     		ldr	r2, .L9+4
 154 0032 1360     		str	r3, [r2]
 155 0034 02E0     		b	.L8
 156              	.L7:
  60:.\main.c      ****     }
  61:.\main.c      ****     else{
  62:.\main.c      ****         powerOnEdge = false;
 157              		.loc 1 62 0
 158 0036 044B     		ldr	r3, .L9
 159 0038 0022     		movs	r2, #0
 160 003a 1A70     		strb	r2, [r3]
 161              	.L8:
  63:.\main.c      ****     }
  64:.\main.c      ****     networkState = busy;
 162              		.loc 1 64 0
 163 003c 054B     		ldr	r3, .L9+12
 164 003e 0122     		movs	r2, #1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 5


 165 0040 1A70     		strb	r2, [r3]
  65:.\main.c      ****     Receive_ClearInterrupt();
 166              		.loc 1 65 0
 167 0042 FFF7FEFF 		bl	Receive_ClearInterrupt
  66:.\main.c      **** }
 168              		.loc 1 66 0
 169 0046 98BD     		pop	{r3, r4, r7, pc}
 170              	.L10:
 171              		.align	2
 172              	.L9:
 173 0048 00000000 		.word	powerOnEdge
 174 004c 00000000 		.word	receivedDataCount
 175 0050 00000000 		.word	diffManReceivedData
 176 0054 00000000 		.word	networkState
 177              		.cfi_endproc
 178              	.LFE64:
 179              		.size	Edge_detect_ISR, .-Edge_detect_ISR
 180              		.section	.text.TimerHandler,"ax",%progbits
 181              		.align	2
 182              		.global	TimerHandler
 183              		.thumb
 184              		.thumb_func
 185              		.type	TimerHandler, %function
 186              	TimerHandler:
 187              	.LFB65:
  67:.\main.c      **** 
  68:.\main.c      **** CY_ISR(TimerHandler){
 188              		.loc 1 68 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
  69:.\main.c      ****     Timer_Stop();
 198              		.loc 1 69 0
 199 0004 FFF7FEFF 		bl	Timer_Stop
  70:.\main.c      ****     timerExpired = true;
 200              		.loc 1 70 0
 201 0008 024B     		ldr	r3, .L12
 202 000a 0122     		movs	r2, #1
 203 000c 1A70     		strb	r2, [r3]
  71:.\main.c      ****     Timer_STATUS;   //clear the timer interrupt
 204              		.loc 1 71 0
 205 000e 024B     		ldr	r3, .L12+4
 206 0010 1B78     		ldrb	r3, [r3]
  72:.\main.c      **** }
 207              		.loc 1 72 0
 208 0012 80BD     		pop	{r7, pc}
 209              	.L13:
 210              		.align	2
 211              	.L12:
 212 0014 00000000 		.word	timerExpired
 213 0018 6B640040 		.word	1073767531
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 6


 214              		.cfi_endproc
 215              	.LFE65:
 216              		.size	TimerHandler, .-TimerHandler
 217              		.section	.text.ReceiveTimerISR,"ax",%progbits
 218              		.align	2
 219              		.global	ReceiveTimerISR
 220              		.thumb
 221              		.thumb_func
 222              		.type	ReceiveTimerISR, %function
 223              	ReceiveTimerISR:
 224              	.LFB66:
  73:.\main.c      **** 
  74:.\main.c      **** //TODO changing from reading to just repeting last data
  75:.\main.c      **** CY_ISR(ReceiveTimerISR){
 225              		.loc 1 75 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0000 80B4     		push	{r7}
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 0002 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
  76:.\main.c      ****     diffManReceivedData[receivedDataCount] = diffManReceivedData[receivedDataCount-1];
 235              		.loc 1 76 0
 236 0004 094B     		ldr	r3, .L15
 237 0006 1B68     		ldr	r3, [r3]
 238 0008 084A     		ldr	r2, .L15
 239 000a 1268     		ldr	r2, [r2]
 240 000c 013A     		subs	r2, r2, #1
 241 000e 0849     		ldr	r1, .L15+4
 242 0010 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 243 0012 074A     		ldr	r2, .L15+4
 244 0014 D154     		strb	r1, [r2, r3]
  77:.\main.c      ****     //or  diffManReceivedData[receivedDataCount] = Receive_Read();
  78:.\main.c      ****     receivedDataCount++;
 245              		.loc 1 78 0
 246 0016 054B     		ldr	r3, .L15
 247 0018 1B68     		ldr	r3, [r3]
 248 001a 0133     		adds	r3, r3, #1
 249 001c 034A     		ldr	r2, .L15
 250 001e 1360     		str	r3, [r2]
  79:.\main.c      ****     Receive_Timer_STATUS;   //clear interrupt
 251              		.loc 1 79 0
 252 0020 044B     		ldr	r3, .L15+8
 253 0022 1B78     		ldrb	r3, [r3]
  80:.\main.c      **** }
 254              		.loc 1 80 0
 255 0024 BD46     		mov	sp, r7
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 0026 5DF8047B 		ldr	r7, [sp], #4
 259              		.cfi_restore 7
 260              		.cfi_def_cfa_offset 0
 261 002a 7047     		bx	lr
 262              	.L16:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 7


 263              		.align	2
 264              	.L15:
 265 002c 00000000 		.word	receivedDataCount
 266 0030 00000000 		.word	diffManReceivedData
 267 0034 6F640040 		.word	1073767535
 268              		.cfi_endproc
 269              	.LFE66:
 270              		.size	ReceiveTimerISR, .-ReceiveTimerISR
 271              		.section	.text.main,"ax",%progbits
 272              		.align	2
 273              		.global	main
 274              		.thumb
 275              		.thumb_func
 276              		.type	main, %function
 277              	main:
 278              	.LFB67:
  81:.\main.c      **** 
  82:.\main.c      **** int main()
  83:.\main.c      **** {
 279              		.loc 1 83 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 120
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 9EB0     		sub	sp, sp, #120
 288              		.cfi_def_cfa_offset 128
 289 0004 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
  84:.\main.c      ****     char rx;
  85:.\main.c      ****     char lineString[108];
  86:.\main.c      ****     uint8 stringPosition = HEADER_POS;//after header
 291              		.loc 1 86 0
 292 0006 0723     		movs	r3, #7
 293 0008 87F87730 		strb	r3, [r7, #119]
  87:.\main.c      ****     timerExpired = false;
 294              		.loc 1 87 0
 295 000c 894B     		ldr	r3, .L39
 296 000e 0022     		movs	r2, #0
 297 0010 1A70     		strb	r2, [r3]
  88:.\main.c      ****     dataTransmissionComplete = false;
 298              		.loc 1 88 0
 299 0012 894B     		ldr	r3, .L39+4
 300 0014 0022     		movs	r2, #0
 301 0016 1A70     		strb	r2, [r3]
  89:.\main.c      **** 
  90:.\main.c      **** 	messageLength = 0;
 302              		.loc 1 90 0
 303 0018 884B     		ldr	r3, .L39+8
 304 001a 0022     		movs	r2, #0
 305 001c 1A60     		str	r2, [r3]
  91:.\main.c      **** 
  92:.\main.c      ****     powerOnEdge = true; //When the system powers up, it creates a rising edge.
 306              		.loc 1 92 0
 307 001e 884B     		ldr	r3, .L39+12
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 8


 308 0020 0122     		movs	r2, #1
 309 0022 1A70     		strb	r2, [r3]
  93:.\main.c      ****     //We want to ignore this edge on the rising edge.
  94:.\main.c      **** 
  95:.\main.c      ****     /*
  96:.\main.c      ****     Get value from system clock and
  97:.\main.c      ****     place in seconds variable.
  98:.\main.c      ****     */
  99:.\main.c      ****     time_t seconds;
 100:.\main.c      ****     time(&seconds);
 310              		.loc 1 100 0
 311 0024 3B1D     		adds	r3, r7, #4
 312 0026 1846     		mov	r0, r3
 313 0028 FFF7FEFF 		bl	time
 101:.\main.c      ****     /*
 102:.\main.c      ****     Convert seconds to a unsigned
 103:.\main.c      ****     integer for seed for random number generator
 104:.\main.c      ****     */
 105:.\main.c      ****     srand((unsigned int) seconds);
 314              		.loc 1 105 0
 315 002c 7B68     		ldr	r3, [r7, #4]
 316 002e 1846     		mov	r0, r3
 317 0030 FFF7FEFF 		bl	srand
 106:.\main.c      **** 
 107:.\main.c      ****     TX_pin_Write(1);  //set TX line to high to start
 318              		.loc 1 107 0
 319 0034 0120     		movs	r0, #1
 320 0036 FFF7FEFF 		bl	TX_pin_Write
 108:.\main.c      **** 
 109:.\main.c      ****     /* Enable Global Interrupts */
 110:.\main.c      ****     CyGlobalIntEnable;
 321              		.loc 1 110 0
 322              	@ 110 ".\main.c" 1
 323 003a 62B6     		CPSIE   i
 324              	@ 0 "" 2
 111:.\main.c      **** 
 112:.\main.c      ****     Receive_ClearInterrupt();//TODO clearing first edge
 325              		.loc 1 112 0
 326              		.thumb
 327 003c FFF7FEFF 		bl	Receive_ClearInterrupt
 113:.\main.c      **** 
 114:.\main.c      ****     LCD_Start();
 328              		.loc 1 114 0
 329 0040 FFF7FEFF 		bl	LCD_Start
 115:.\main.c      **** 
 116:.\main.c      ****     //enable collision detection
 117:.\main.c      ****     Idle_Collision_IRQ_StartEx(Idle_Collision_ISR);
 330              		.loc 1 117 0
 331 0044 7F48     		ldr	r0, .L39+16
 332 0046 FFF7FEFF 		bl	Idle_Collision_IRQ_StartEx
 118:.\main.c      ****     Edge_detect_IRQ_StartEx(Edge_detect_ISR);
 333              		.loc 1 118 0
 334 004a 7F48     		ldr	r0, .L39+20
 335 004c FFF7FEFF 		bl	Edge_detect_IRQ_StartEx
 119:.\main.c      ****     Idle_Collision_Timer_Start();
 336              		.loc 1 119 0
 337 0050 FFF7FEFF 		bl	Idle_Collision_Timer_Start
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 9


 120:.\main.c      **** 
 121:.\main.c      ****     /* Start USBFS Operation with 3V operation */
 122:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
 338              		.loc 1 122 0
 339 0054 0020     		movs	r0, #0
 340 0056 0021     		movs	r1, #0
 341 0058 FFF7FEFF 		bl	USBUART_1_Start
 123:.\main.c      **** 
 124:.\main.c      ****     //start transmission timer
 125:.\main.c      ****     TimerISR_StartEx(TimerHandler);
 342              		.loc 1 125 0
 343 005c 7B48     		ldr	r0, .L39+24
 344 005e FFF7FEFF 		bl	TimerISR_StartEx
 126:.\main.c      **** 
 127:.\main.c      ****     ReceiveTimerIRQ_StartEx(ReceiveTimerISR);
 345              		.loc 1 127 0
 346 0062 7B48     		ldr	r0, .L39+28
 347 0064 FFF7FEFF 		bl	ReceiveTimerIRQ_StartEx
 128:.\main.c      **** 
 129:.\main.c      ****     receivedDataCount = 0;
 348              		.loc 1 129 0
 349 0068 7A4B     		ldr	r3, .L39+32
 350 006a 0022     		movs	r2, #0
 351 006c 1A60     		str	r2, [r3]
 130:.\main.c      ****     receivedDataIndex = 0;
 352              		.loc 1 130 0
 353 006e 7A4B     		ldr	r3, .L39+36
 354 0070 0022     		movs	r2, #0
 355 0072 1A60     		str	r2, [r3]
 131:.\main.c      **** 
 132:.\main.c      ****     lineString[0] = 0x71;
 356              		.loc 1 132 0
 357 0074 7123     		movs	r3, #113
 358 0076 3B72     		strb	r3, [r7, #8]
 133:.\main.c      **** 	lineString[1] = VERSION_NUMBER;
 359              		.loc 1 133 0
 360 0078 0123     		movs	r3, #1
 361 007a 7B72     		strb	r3, [r7, #9]
 134:.\main.c      **** 	lineString[2] = TX_SOURCE_ADDRESS;
 362              		.loc 1 134 0
 363 007c 0023     		movs	r3, #0
 364 007e BB72     		strb	r3, [r7, #10]
 135:.\main.c      **** 	lineString[3] = TX_DESTINATION_ADDRESS;
 365              		.loc 1 135 0
 366 0080 764B     		ldr	r3, .L39+40
 367 0082 1B68     		ldr	r3, [r3]
 368 0084 DBB2     		uxtb	r3, r3
 369 0086 FB72     		strb	r3, [r7, #11]
 136:.\main.c      ****     lineString[4] = 0;
 370              		.loc 1 136 0
 371 0088 0023     		movs	r3, #0
 372 008a 3B73     		strb	r3, [r7, #12]
 137:.\main.c      **** 	lineString[5] = 0;
 373              		.loc 1 137 0
 374 008c 0023     		movs	r3, #0
 375 008e 7B73     		strb	r3, [r7, #13]
 138:.\main.c      **** 	lineString[6] = 0x75;
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 10


 376              		.loc 1 138 0
 377 0090 7523     		movs	r3, #117
 378 0092 BB73     		strb	r3, [r7, #14]
 379              	.L36:
 139:.\main.c      **** 
 140:.\main.c      ****     /* Main Loop: */
 141:.\main.c      ****     for(;;)
 142:.\main.c      ****     {
 143:.\main.c      ****         setNetworkStateOnLEDs();
 380              		.loc 1 143 0
 381 0094 FFF7FEFF 		bl	setNetworkStateOnLEDs
 144:.\main.c      **** 
 145:.\main.c      ****         /*Receive*/
 146:.\main.c      ****         //Precondidtion: must finished receiving data so channel state machine at idle and wait for
 147:.\main.c      ****         if(networkState == idle && receivedDataCount >= 34){//TODO remove hardcode #
 382              		.loc 1 147 0
 383 0098 714B     		ldr	r3, .L39+44
 384 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 385 009c 002B     		cmp	r3, #0
 386 009e 37D1     		bne	.L18
 387              		.loc 1 147 0 is_stmt 0 discriminator 1
 388 00a0 6C4B     		ldr	r3, .L39+32
 389 00a2 1B68     		ldr	r3, [r3]
 390 00a4 212B     		cmp	r3, #33
 391 00a6 33DD     		ble	.L18
 148:.\main.c      **** 
 149:.\main.c      ****             //Verify that have received start bit (01). Note: ignore first edge from turning system
 150:.\main.c      ****             if(diffManReceivedData[0] == 0 && diffManReceivedData[1] == 1){
 392              		.loc 1 150 0 is_stmt 1
 393 00a8 6E4B     		ldr	r3, .L39+48
 394 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 395 00ac 002B     		cmp	r3, #0
 396 00ae 26D1     		bne	.L19
 397              		.loc 1 150 0 is_stmt 0 discriminator 1
 398 00b0 6C4B     		ldr	r3, .L39+48
 399 00b2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 400 00b4 012B     		cmp	r3, #1
 401 00b6 22D1     		bne	.L19
 151:.\main.c      ****                 receivedDataIndex = 2; //skip start bit (two half bits)
 402              		.loc 1 151 0 is_stmt 1
 403 00b8 674B     		ldr	r3, .L39+36
 404 00ba 0222     		movs	r2, #2
 405 00bc 1A60     		str	r2, [r3]
 152:.\main.c      ****                 while(receivedDataIndex < receivedDataCount-1){     //Note: receivedDataCount-1 b/c
 406              		.loc 1 152 0
 407 00be 06E0     		b	.L20
 408              	.L21:
 153:.\main.c      ****                     diffManToASCII();
 409              		.loc 1 153 0
 410 00c0 FFF7FEFF 		bl	diffManToASCII
 154:.\main.c      **** 					storeChar();
 411              		.loc 1 154 0
 412 00c4 FFF7FEFF 		bl	storeChar
 155:.\main.c      ****                     receivedChar = 0;       //Reset the char
 413              		.loc 1 155 0
 414 00c8 674B     		ldr	r3, .L39+52
 415 00ca 0022     		movs	r2, #0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 11


 416 00cc 1A70     		strb	r2, [r3]
 417              	.L20:
 152:.\main.c      ****                     diffManToASCII();
 418              		.loc 1 152 0
 419 00ce 614B     		ldr	r3, .L39+32
 420 00d0 1B68     		ldr	r3, [r3]
 421 00d2 5A1E     		subs	r2, r3, #1
 422 00d4 604B     		ldr	r3, .L39+36
 423 00d6 1B68     		ldr	r3, [r3]
 424 00d8 9A42     		cmp	r2, r3
 425 00da F1DC     		bgt	.L21
 156:.\main.c      ****                 }
 157:.\main.c      **** 				if(headerCheck()){
 426              		.loc 1 157 0
 427 00dc FFF7FEFF 		bl	headerCheck
 428 00e0 0346     		mov	r3, r0
 429 00e2 002B     		cmp	r3, #0
 430 00e4 01D0     		beq	.L22
 158:.\main.c      ****                     printChar();
 431              		.loc 1 158 0
 432 00e6 FFF7FEFF 		bl	printChar
 433              	.L22:
 159:.\main.c      ****                 }
 160:.\main.c      **** 
 161:.\main.c      ****                 receivedDataCount = 0;  //Reset count
 434              		.loc 1 161 0
 435 00ea 5A4B     		ldr	r3, .L39+32
 436 00ec 0022     		movs	r2, #0
 437 00ee 1A60     		str	r2, [r3]
 162:.\main.c      ****                 receivedDataIndex = 0;  //Reset index
 438              		.loc 1 162 0
 439 00f0 594B     		ldr	r3, .L39+36
 440 00f2 0022     		movs	r2, #0
 441 00f4 1A60     		str	r2, [r3]
 163:.\main.c      ****                 currentRXCharPosition = 0;
 442              		.loc 1 163 0
 443 00f6 5D4B     		ldr	r3, .L39+56
 444 00f8 0022     		movs	r2, #0
 445 00fa 1A60     		str	r2, [r3]
 446 00fc 08E0     		b	.L18
 447              	.L19:
 164:.\main.c      ****             }
 165:.\main.c      ****             else{
 166:.\main.c      ****                 //Receive data did not start with the start bit
 167:.\main.c      ****                 receivedDataCount = 0;
 448              		.loc 1 167 0
 449 00fe 554B     		ldr	r3, .L39+32
 450 0100 0022     		movs	r2, #0
 451 0102 1A60     		str	r2, [r3]
 168:.\main.c      ****                 receivedDataIndex = 0;
 452              		.loc 1 168 0
 453 0104 544B     		ldr	r3, .L39+36
 454 0106 0022     		movs	r2, #0
 455 0108 1A60     		str	r2, [r3]
 169:.\main.c      ****                 currentRXCharPosition = 0;
 456              		.loc 1 169 0
 457 010a 584B     		ldr	r3, .L39+56
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 12


 458 010c 0022     		movs	r2, #0
 459 010e 1A60     		str	r2, [r3]
 460              	.L18:
 170:.\main.c      ****             }
 171:.\main.c      ****         }
 172:.\main.c      ****         else
 173:.\main.c      ****         {
 174:.\main.c      ****             //TODO prob remove this else
 175:.\main.c      ****         }
 176:.\main.c      ****         /*End Receive*/
 177:.\main.c      **** 
 178:.\main.c      ****         if(USBUART_1_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE reques
 461              		.loc 1 178 0
 462 0110 FFF7FEFF 		bl	USBUART_1_IsConfigurationChanged
 463 0114 0346     		mov	r3, r0
 464 0116 002B     		cmp	r3, #0
 465 0118 06D0     		beq	.L24
 179:.\main.c      ****         {
 180:.\main.c      ****             if(USBUART_1_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
 466              		.loc 1 180 0
 467 011a FFF7FEFF 		bl	USBUART_1_GetConfiguration
 468 011e 0346     		mov	r3, r0
 469 0120 002B     		cmp	r3, #0
 470 0122 01D0     		beq	.L24
 181:.\main.c      ****             {
 182:.\main.c      ****                 /* Enumeration is done, enable OUT endpoint for receive data from Host */
 183:.\main.c      ****                 USBUART_1_CDC_Init();
 471              		.loc 1 183 0
 472 0124 FFF7FEFF 		bl	USBUART_1_CDC_Init
 473              	.L24:
 184:.\main.c      ****             }
 185:.\main.c      ****         }
 186:.\main.c      ****         if(USBUART_1_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
 474              		.loc 1 186 0
 475 0128 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 476 012c 0346     		mov	r3, r0
 477 012e 002B     		cmp	r3, #0
 478 0130 7ED0     		beq	.L25
 187:.\main.c      ****         {
 188:.\main.c      ****             if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
 479              		.loc 1 188 0
 480 0132 FFF7FEFF 		bl	USBUART_1_DataIsReady
 481 0136 0346     		mov	r3, r0
 482 0138 002B     		cmp	r3, #0
 483 013a 79D0     		beq	.L25
 189:.\main.c      ****             {
 190:.\main.c      ****                 rx = USBUART_1_GetChar();
 484              		.loc 1 190 0
 485 013c FFF7FEFF 		bl	USBUART_1_GetChar
 486 0140 0346     		mov	r3, r0
 487 0142 87F87630 		strb	r3, [r7, #118]
 191:.\main.c      ****                 switch(rx){
 488              		.loc 1 191 0
 489 0146 97F87630 		ldrb	r3, [r7, #118]	@ zero_extendqisi2
 490 014a 0D2B     		cmp	r3, #13
 491 014c 25D0     		beq	.L27
 492 014e 1B2B     		cmp	r3, #27
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 13


 493 0150 6DD0     		beq	.L38
 494 0152 082B     		cmp	r3, #8
 495 0154 51D1     		bne	.L37
 192:.\main.c      ****                     case 8://backspace
 193:.\main.c      ****                         if(stringPosition>0){
 496              		.loc 1 193 0
 497 0156 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 498 015a 002B     		cmp	r3, #0
 499 015c 1CD0     		beq	.L30
 194:.\main.c      ****                             stringPosition--;
 500              		.loc 1 194 0
 501 015e 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 502 0162 013B     		subs	r3, r3, #1
 503 0164 87F87730 		strb	r3, [r7, #119]
 195:.\main.c      ****                             lineString[stringPosition] = '\0';
 504              		.loc 1 195 0
 505 0168 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 506 016c 07F17802 		add	r2, r7, #120
 507 0170 1344     		add	r3, r3, r2
 508 0172 0022     		movs	r2, #0
 509 0174 03F8702C 		strb	r2, [r3, #-112]
 196:.\main.c      ****                             //backspace space backspace
 197:.\main.c      ****                             while(USBUART_1_CDCIsReady() == 0u);
 510              		.loc 1 197 0
 511 0178 00BF     		nop
 512              	.L31:
 513              		.loc 1 197 0 is_stmt 0 discriminator 1
 514 017a FFF7FEFF 		bl	USBUART_1_CDCIsReady
 515 017e 0346     		mov	r3, r0
 516 0180 002B     		cmp	r3, #0
 517 0182 FAD0     		beq	.L31
 198:.\main.c      ****                             USBUART_1_PutChar(8);
 518              		.loc 1 198 0 is_stmt 1
 519 0184 0820     		movs	r0, #8
 520 0186 FFF7FEFF 		bl	USBUART_1_PutChar
 199:.\main.c      ****                             USBUART_1_PutChar(32);
 521              		.loc 1 199 0
 522 018a 2020     		movs	r0, #32
 523 018c FFF7FEFF 		bl	USBUART_1_PutChar
 200:.\main.c      ****                             USBUART_1_PutChar(8);
 524              		.loc 1 200 0
 525 0190 0820     		movs	r0, #8
 526 0192 FFF7FEFF 		bl	USBUART_1_PutChar
 201:.\main.c      ****                         }
 202:.\main.c      ****                         break;
 527              		.loc 1 202 0
 528 0196 4BE0     		b	.L25
 529              	.L30:
 530 0198 4AE0     		b	.L25
 531              	.L27:
 203:.\main.c      ****                     case 13://enter (carriage return)
 204:.\main.c      ****                         initDiffManEncodedArray();
 532              		.loc 1 204 0
 533 019a FFF7FEFF 		bl	initDiffManEncodedArray
 205:.\main.c      **** 						lineString[4] = stringPosition - HEADER_POS;
 534              		.loc 1 205 0
 535 019e 97F87730 		ldrb	r3, [r7, #119]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 14


 536 01a2 073B     		subs	r3, r3, #7
 537 01a4 DBB2     		uxtb	r3, r3
 538 01a6 3B73     		strb	r3, [r7, #12]
 206:.\main.c      ****                         stringToDiffMan(lineString, stringPosition);
 539              		.loc 1 206 0
 540 01a8 07F10802 		add	r2, r7, #8
 541 01ac 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 542 01b0 1046     		mov	r0, r2
 543 01b2 1946     		mov	r1, r3
 544 01b4 FFF7FEFF 		bl	stringToDiffMan
 207:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u);
 545              		.loc 1 207 0
 546 01b8 00BF     		nop
 547              	.L32:
 548              		.loc 1 207 0 is_stmt 0 discriminator 1
 549 01ba FFF7FEFF 		bl	USBUART_1_CDCIsReady
 550 01be 0346     		mov	r3, r0
 551 01c0 002B     		cmp	r3, #0
 552 01c2 FAD0     		beq	.L32
 208:.\main.c      ****                         USBUART_1_PutCRLF();
 553              		.loc 1 208 0 is_stmt 1
 554 01c4 FFF7FEFF 		bl	USBUART_1_PutCRLF
 209:.\main.c      **** 
 210:.\main.c      ****                         //keep looping until data is transmitted
 211:.\main.c      **** 
 212:.\main.c      ****                         while(!dataTransmissionComplete){//header is mostly encoded already, just n
 555              		.loc 1 212 0
 556 01c8 03E0     		b	.L33
 557              	.L34:
 213:.\main.c      **** 
 214:.\main.c      ****                             transmitData();
 558              		.loc 1 214 0
 559 01ca FFF7FEFF 		bl	transmitData
 215:.\main.c      ****                             setNetworkStateOnLEDs();
 560              		.loc 1 215 0
 561 01ce FFF7FEFF 		bl	setNetworkStateOnLEDs
 562              	.L33:
 212:.\main.c      **** 
 563              		.loc 1 212 0
 564 01d2 194B     		ldr	r3, .L39+4
 565 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 01d6 83F00103 		eor	r3, r3, #1
 567 01da DBB2     		uxtb	r3, r3
 568 01dc 002B     		cmp	r3, #0
 569 01de F4D1     		bne	.L34
 216:.\main.c      ****                         }
 217:.\main.c      ****                         dataTransmissionComplete = false;
 570              		.loc 1 217 0
 571 01e0 154B     		ldr	r3, .L39+4
 572 01e2 0022     		movs	r2, #0
 573 01e4 1A70     		strb	r2, [r3]
 218:.\main.c      ****                         TX_pin_Write(1);    //set line to logic-1 after transmission
 574              		.loc 1 218 0
 575 01e6 0120     		movs	r0, #1
 576 01e8 FFF7FEFF 		bl	TX_pin_Write
 219:.\main.c      ****                         //reset index
 220:.\main.c      ****                         halfBitIndex = 0;
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 15


 577              		.loc 1 220 0
 578 01ec 204B     		ldr	r3, .L39+60
 579 01ee 0022     		movs	r2, #0
 580 01f0 1A60     		str	r2, [r3]
 221:.\main.c      ****                         stringPosition = HEADER_POS;
 581              		.loc 1 221 0
 582 01f2 0723     		movs	r3, #7
 583 01f4 87F87730 		strb	r3, [r7, #119]
 222:.\main.c      ****                         break;
 584              		.loc 1 222 0
 585 01f8 1AE0     		b	.L25
 586              	.L37:
 223:.\main.c      ****                     case 27://escape
 224:.\main.c      ****                         break;
 225:.\main.c      ****                     default://everything else
 226:.\main.c      ****                         lineString[stringPosition] = rx;
 587              		.loc 1 226 0
 588 01fa 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 589 01fe 07F17802 		add	r2, r7, #120
 590 0202 1344     		add	r3, r3, r2
 591 0204 97F87620 		ldrb	r2, [r7, #118]
 592 0208 03F8702C 		strb	r2, [r3, #-112]
 227:.\main.c      ****                         stringPosition++;
 593              		.loc 1 227 0
 594 020c 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 595 0210 0133     		adds	r3, r3, #1
 596 0212 87F87730 		strb	r3, [r7, #119]
 228:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u);
 597              		.loc 1 228 0
 598 0216 00BF     		nop
 599              	.L35:
 600              		.loc 1 228 0 is_stmt 0 discriminator 1
 601 0218 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 602 021c 0346     		mov	r3, r0
 603 021e 002B     		cmp	r3, #0
 604 0220 FAD0     		beq	.L35
 229:.\main.c      ****                         USBUART_1_PutChar(rx);       /* Send data back to PC */
 605              		.loc 1 229 0 is_stmt 1
 606 0222 97F87630 		ldrb	r3, [r7, #118]	@ zero_extendqisi2
 607 0226 1846     		mov	r0, r3
 608 0228 FFF7FEFF 		bl	USBUART_1_PutChar
 230:.\main.c      ****                         break;
 609              		.loc 1 230 0
 610 022c 00E0     		b	.L25
 611              	.L38:
 224:.\main.c      ****                     default://everything else
 612              		.loc 1 224 0
 613 022e 00BF     		nop
 614              	.L25:
 231:.\main.c      ****                 }
 232:.\main.c      ****             }
 233:.\main.c      ****         }
 234:.\main.c      ****     }
 615              		.loc 1 234 0 discriminator 1
 616 0230 30E7     		b	.L36
 617              	.L40:
 618 0232 00BF     		.align	2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 16


 619              	.L39:
 620 0234 00000000 		.word	timerExpired
 621 0238 00000000 		.word	dataTransmissionComplete
 622 023c 00000000 		.word	messageLength
 623 0240 00000000 		.word	powerOnEdge
 624 0244 00000000 		.word	Idle_Collision_ISR
 625 0248 00000000 		.word	Edge_detect_ISR
 626 024c 00000000 		.word	TimerHandler
 627 0250 00000000 		.word	ReceiveTimerISR
 628 0254 00000000 		.word	receivedDataCount
 629 0258 00000000 		.word	receivedDataIndex
 630 025c 00000000 		.word	TX_DESTINATION_ADDRESS
 631 0260 00000000 		.word	networkState
 632 0264 00000000 		.word	diffManReceivedData
 633 0268 00000000 		.word	receivedChar
 634 026c 00000000 		.word	currentRXCharPosition
 635 0270 00000000 		.word	halfBitIndex
 636              		.cfi_endproc
 637              	.LFE67:
 638              		.size	main, .-main
 639              		.section	.text.initDiffManEncodedArray,"ax",%progbits
 640              		.align	2
 641              		.global	initDiffManEncodedArray
 642              		.thumb
 643              		.thumb_func
 644              		.type	initDiffManEncodedArray, %function
 645              	initDiffManEncodedArray:
 646              	.LFB68:
 235:.\main.c      **** }
 236:.\main.c      **** 
 237:.\main.c      **** /*
 238:.\main.c      **** init dif man encoded data array with a leading "starting bit". The starting bit is madeup of the
 239:.\main.c      **** half bits 01.
 240:.\main.c      **** Only call when starting to transfer a new string
 241:.\main.c      **** */
 242:.\main.c      **** void initDiffManEncodedArray(){
 647              		.loc 1 242 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652 0000 80B4     		push	{r7}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 7, -4
 655 0002 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 243:.\main.c      ****     halfBitIndex = 0;
 657              		.loc 1 243 0
 658 0004 0E4B     		ldr	r3, .L42
 659 0006 0022     		movs	r2, #0
 660 0008 1A60     		str	r2, [r3]
 244:.\main.c      ****     diffManEncodedData[halfBitIndex] = 0;
 661              		.loc 1 244 0
 662 000a 0D4B     		ldr	r3, .L42
 663 000c 1B68     		ldr	r3, [r3]
 664 000e 0D4A     		ldr	r2, .L42+4
 665 0010 0021     		movs	r1, #0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 17


 666 0012 42F82310 		str	r1, [r2, r3, lsl #2]
 245:.\main.c      ****     halfBitIndex++;
 667              		.loc 1 245 0
 668 0016 0A4B     		ldr	r3, .L42
 669 0018 1B68     		ldr	r3, [r3]
 670 001a 0133     		adds	r3, r3, #1
 671 001c 084A     		ldr	r2, .L42
 672 001e 1360     		str	r3, [r2]
 246:.\main.c      ****     diffManEncodedData[halfBitIndex] = 1;
 673              		.loc 1 246 0
 674 0020 074B     		ldr	r3, .L42
 675 0022 1B68     		ldr	r3, [r3]
 676 0024 074A     		ldr	r2, .L42+4
 677 0026 0121     		movs	r1, #1
 678 0028 42F82310 		str	r1, [r2, r3, lsl #2]
 247:.\main.c      ****     halfBitIndex++;
 679              		.loc 1 247 0
 680 002c 044B     		ldr	r3, .L42
 681 002e 1B68     		ldr	r3, [r3]
 682 0030 0133     		adds	r3, r3, #1
 683 0032 034A     		ldr	r2, .L42
 684 0034 1360     		str	r3, [r2]
 248:.\main.c      **** }
 685              		.loc 1 248 0
 686 0036 BD46     		mov	sp, r7
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0038 5DF8047B 		ldr	r7, [sp], #4
 690              		.cfi_restore 7
 691              		.cfi_def_cfa_offset 0
 692 003c 7047     		bx	lr
 693              	.L43:
 694 003e 00BF     		.align	2
 695              	.L42:
 696 0040 00000000 		.word	halfBitIndex
 697 0044 00000000 		.word	diffManEncodedData
 698              		.cfi_endproc
 699              	.LFE68:
 700              		.size	initDiffManEncodedArray, .-initDiffManEncodedArray
 701              		.section	.text.stringToDiffMan,"ax",%progbits
 702              		.align	2
 703              		.global	stringToDiffMan
 704              		.thumb
 705              		.thumb_func
 706              		.type	stringToDiffMan, %function
 707              	stringToDiffMan:
 708              	.LFB69:
 249:.\main.c      **** 
 250:.\main.c      **** /*
 251:.\main.c      **** Enter key has been pressed, change binary data into diff man data.
 252:.\main.c      **** Call from main. Requires main to access diffManEncodedData array
 253:.\main.c      **** */
 254:.\main.c      **** void stringToDiffMan(char *lineString, uint8 stringPosition){
 709              		.loc 1 254 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 18


 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 84B0     		sub	sp, sp, #16
 718              		.cfi_def_cfa_offset 24
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 722 0008 0B46     		mov	r3, r1
 723 000a FB70     		strb	r3, [r7, #3]
 255:.\main.c      **** 
 256:.\main.c      ****     unsigned int i = 0;
 724              		.loc 1 256 0
 725 000c 0023     		movs	r3, #0
 726 000e FB60     		str	r3, [r7, #12]
 257:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 727              		.loc 1 257 0
 728 0010 0023     		movs	r3, #0
 729 0012 FB60     		str	r3, [r7, #12]
 730 0014 09E0     		b	.L45
 731              	.L46:
 258:.\main.c      ****         asciiToDiffMan(lineString[i]);//use to be lineString[i]
 732              		.loc 1 258 0 discriminator 3
 733 0016 7A68     		ldr	r2, [r7, #4]
 734 0018 FB68     		ldr	r3, [r7, #12]
 735 001a 1344     		add	r3, r3, r2
 736 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 737 001e 1846     		mov	r0, r3
 738 0020 FFF7FEFF 		bl	asciiToDiffMan
 257:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 739              		.loc 1 257 0 discriminator 3
 740 0024 FB68     		ldr	r3, [r7, #12]
 741 0026 0133     		adds	r3, r3, #1
 742 0028 FB60     		str	r3, [r7, #12]
 743              	.L45:
 257:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 744              		.loc 1 257 0 is_stmt 0 discriminator 1
 745 002a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 746 002c FB68     		ldr	r3, [r7, #12]
 747 002e 9A42     		cmp	r2, r3
 748 0030 F1D8     		bhi	.L46
 259:.\main.c      ****     }
 260:.\main.c      **** }
 749              		.loc 1 260 0 is_stmt 1
 750 0032 1037     		adds	r7, r7, #16
 751              		.cfi_def_cfa_offset 8
 752 0034 BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 0036 80BD     		pop	{r7, pc}
 756              		.cfi_endproc
 757              	.LFE69:
 758              		.size	stringToDiffMan, .-stringToDiffMan
 759              		.section	.text.asciiToDiffMan,"ax",%progbits
 760              		.align	2
 761              		.global	asciiToDiffMan
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 19


 762              		.thumb
 763              		.thumb_func
 764              		.type	asciiToDiffMan, %function
 765              	asciiToDiffMan:
 766              	.LFB70:
 261:.\main.c      **** 
 262:.\main.c      **** /*
 263:.\main.c      **** Helper method. Do not call from main.
 264:.\main.c      **** Converts a ascii char to a differental manchester line encoded version
 265:.\main.c      **** */
 266:.\main.c      **** void asciiToDiffMan(char asciiChar)
 267:.\main.c      **** {
 767              		.loc 1 267 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 104
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              		.cfi_def_cfa_offset 4
 774              		.cfi_offset 7, -4
 775 0002 9BB0     		sub	sp, sp, #108
 776              		.cfi_def_cfa_offset 112
 777 0004 00AF     		add	r7, sp, #0
 778              		.cfi_def_cfa_register 7
 779 0006 0346     		mov	r3, r0
 780 0008 FB71     		strb	r3, [r7, #7]
 268:.\main.c      ****     uint8 previousHalfBit = diffManEncodedData[halfBitIndex-1];
 781              		.loc 1 268 0
 782 000a 6C4B     		ldr	r3, .L59
 783 000c 1B68     		ldr	r3, [r3]
 784 000e 013B     		subs	r3, r3, #1
 785 0010 6B4A     		ldr	r2, .L59+4
 786 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 787 0016 87F86730 		strb	r3, [r7, #103]
 269:.\main.c      ****     //send starting 1 bit (encoded)
 270:.\main.c      ****     if(previousHalfBit == 1){
 788              		.loc 1 270 0
 789 001a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 790 001e 012B     		cmp	r3, #1
 791 0020 16D1     		bne	.L48
 271:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 792              		.loc 1 271 0
 793 0022 664B     		ldr	r3, .L59
 794 0024 1B68     		ldr	r3, [r3]
 795 0026 664A     		ldr	r2, .L59+4
 796 0028 0121     		movs	r1, #1
 797 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 272:.\main.c      ****         halfBitIndex++;
 798              		.loc 1 272 0
 799 002e 634B     		ldr	r3, .L59
 800 0030 1B68     		ldr	r3, [r3]
 801 0032 0133     		adds	r3, r3, #1
 802 0034 614A     		ldr	r2, .L59
 803 0036 1360     		str	r3, [r2]
 273:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 804              		.loc 1 273 0
 805 0038 604B     		ldr	r3, .L59
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 20


 806 003a 1B68     		ldr	r3, [r3]
 807 003c 604A     		ldr	r2, .L59+4
 808 003e 0021     		movs	r1, #0
 809 0040 42F82310 		str	r1, [r2, r3, lsl #2]
 274:.\main.c      ****         halfBitIndex++;
 810              		.loc 1 274 0
 811 0044 5D4B     		ldr	r3, .L59
 812 0046 1B68     		ldr	r3, [r3]
 813 0048 0133     		adds	r3, r3, #1
 814 004a 5C4A     		ldr	r2, .L59
 815 004c 1360     		str	r3, [r2]
 816 004e 15E0     		b	.L49
 817              	.L48:
 275:.\main.c      ****     }else{
 276:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 818              		.loc 1 276 0
 819 0050 5A4B     		ldr	r3, .L59
 820 0052 1B68     		ldr	r3, [r3]
 821 0054 5A4A     		ldr	r2, .L59+4
 822 0056 0021     		movs	r1, #0
 823 0058 42F82310 		str	r1, [r2, r3, lsl #2]
 277:.\main.c      ****         halfBitIndex++;
 824              		.loc 1 277 0
 825 005c 574B     		ldr	r3, .L59
 826 005e 1B68     		ldr	r3, [r3]
 827 0060 0133     		adds	r3, r3, #1
 828 0062 564A     		ldr	r2, .L59
 829 0064 1360     		str	r3, [r2]
 278:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 830              		.loc 1 278 0
 831 0066 554B     		ldr	r3, .L59
 832 0068 1B68     		ldr	r3, [r3]
 833 006a 554A     		ldr	r2, .L59+4
 834 006c 0121     		movs	r1, #1
 835 006e 42F82310 		str	r1, [r2, r3, lsl #2]
 279:.\main.c      ****         halfBitIndex++;
 836              		.loc 1 279 0
 837 0072 524B     		ldr	r3, .L59
 838 0074 1B68     		ldr	r3, [r3]
 839 0076 0133     		adds	r3, r3, #1
 840 0078 504A     		ldr	r2, .L59
 841 007a 1360     		str	r3, [r2]
 842              	.L49:
 280:.\main.c      ****     }
 281:.\main.c      ****     previousHalfBit = diffManEncodedData[halfBitIndex-1];
 843              		.loc 1 281 0
 844 007c 4F4B     		ldr	r3, .L59
 845 007e 1B68     		ldr	r3, [r3]
 846 0080 013B     		subs	r3, r3, #1
 847 0082 4F4A     		ldr	r2, .L59+4
 848 0084 52F82330 		ldr	r3, [r2, r3, lsl #2]
 849 0088 87F86730 		strb	r3, [r7, #103]
 282:.\main.c      **** 
 283:.\main.c      **** 
 284:.\main.c      ****     //convert asciil char to binary value (which will be 7 bits)
 285:.\main.c      ****     unsigned int binaryValueOfChar[20];//index zero is LSB
 286:.\main.c      ****     int i;
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 21


 287:.\main.c      ****     /*for(i=0; asciiChar>0; i++)
 288:.\main.c      ****     {
 289:.\main.c      ****         binaryValueOfChar[i]=asciiChar%2;
 290:.\main.c      ****         asciiChar=asciiChar/2;
 291:.\main.c      ****     }*/
 292:.\main.c      ****     for (i = 0; i < 8; ++i){//todo test new value
 850              		.loc 1 292 0
 851 008c 0023     		movs	r3, #0
 852 008e 3B66     		str	r3, [r7, #96]
 853 0090 0FE0     		b	.L50
 854              	.L51:
 293:.\main.c      ****         binaryValueOfChar[i] = (asciiChar >> i) & 1;
 855              		.loc 1 293 0 discriminator 3
 856 0092 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 857 0094 3B6E     		ldr	r3, [r7, #96]
 858 0096 42FA03F3 		asr	r3, r2, r3
 859 009a 03F00102 		and	r2, r3, #1
 860 009e 3B6E     		ldr	r3, [r7, #96]
 861 00a0 9B00     		lsls	r3, r3, #2
 862 00a2 07F16801 		add	r1, r7, #104
 863 00a6 0B44     		add	r3, r3, r1
 864 00a8 43F85C2C 		str	r2, [r3, #-92]
 292:.\main.c      ****         binaryValueOfChar[i] = (asciiChar >> i) & 1;
 865              		.loc 1 292 0 discriminator 3
 866 00ac 3B6E     		ldr	r3, [r7, #96]
 867 00ae 0133     		adds	r3, r3, #1
 868 00b0 3B66     		str	r3, [r7, #96]
 869              	.L50:
 292:.\main.c      ****         binaryValueOfChar[i] = (asciiChar >> i) & 1;
 870              		.loc 1 292 0 is_stmt 0 discriminator 1
 871 00b2 3B6E     		ldr	r3, [r7, #96]
 872 00b4 072B     		cmp	r3, #7
 873 00b6 ECDD     		ble	.L51
 294:.\main.c      ****     }
 295:.\main.c      ****     //differential encode the 7 bits (from the binary version of the char)
 296:.\main.c      ****     //must start at the end of the array so to encode the MSB first
 297:.\main.c      ****     int j;
 298:.\main.c      ****     for(j=INDEX_OF_MSB;j>=0;j--)
 874              		.loc 1 298 0 is_stmt 1
 875 00b8 0623     		movs	r3, #6
 876 00ba FB65     		str	r3, [r7, #92]
 877 00bc 76E0     		b	.L52
 878              	.L58:
 299:.\main.c      ****     {
 300:.\main.c      ****         if(binaryValueOfChar[j] == 1)
 879              		.loc 1 300 0
 880 00be FB6D     		ldr	r3, [r7, #92]
 881 00c0 9B00     		lsls	r3, r3, #2
 882 00c2 07F16802 		add	r2, r7, #104
 883 00c6 1344     		add	r3, r3, r2
 884 00c8 53F85C3C 		ldr	r3, [r3, #-92]
 885 00cc 012B     		cmp	r3, #1
 886 00ce 31D1     		bne	.L53
 301:.\main.c      ****         {
 302:.\main.c      ****             //bit == 1
 303:.\main.c      ****             if(previousHalfBit == 1)
 887              		.loc 1 303 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 22


 888 00d0 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 889 00d4 012B     		cmp	r3, #1
 890 00d6 16D1     		bne	.L54
 304:.\main.c      ****             {
 305:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 891              		.loc 1 305 0
 892 00d8 384B     		ldr	r3, .L59
 893 00da 1B68     		ldr	r3, [r3]
 894 00dc 384A     		ldr	r2, .L59+4
 895 00de 0121     		movs	r1, #1
 896 00e0 42F82310 		str	r1, [r2, r3, lsl #2]
 306:.\main.c      ****                 halfBitIndex++;
 897              		.loc 1 306 0
 898 00e4 354B     		ldr	r3, .L59
 899 00e6 1B68     		ldr	r3, [r3]
 900 00e8 0133     		adds	r3, r3, #1
 901 00ea 344A     		ldr	r2, .L59
 902 00ec 1360     		str	r3, [r2]
 307:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 903              		.loc 1 307 0
 904 00ee 334B     		ldr	r3, .L59
 905 00f0 1B68     		ldr	r3, [r3]
 906 00f2 334A     		ldr	r2, .L59+4
 907 00f4 0021     		movs	r1, #0
 908 00f6 42F82310 		str	r1, [r2, r3, lsl #2]
 308:.\main.c      ****                 halfBitIndex++;
 909              		.loc 1 308 0
 910 00fa 304B     		ldr	r3, .L59
 911 00fc 1B68     		ldr	r3, [r3]
 912 00fe 0133     		adds	r3, r3, #1
 913 0100 2E4A     		ldr	r2, .L59
 914 0102 1360     		str	r3, [r2]
 915 0104 47E0     		b	.L56
 916              	.L54:
 309:.\main.c      ****             }
 310:.\main.c      ****             else
 311:.\main.c      ****             {
 312:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 917              		.loc 1 312 0
 918 0106 2D4B     		ldr	r3, .L59
 919 0108 1B68     		ldr	r3, [r3]
 920 010a 2D4A     		ldr	r2, .L59+4
 921 010c 0021     		movs	r1, #0
 922 010e 42F82310 		str	r1, [r2, r3, lsl #2]
 313:.\main.c      ****                 halfBitIndex++;
 923              		.loc 1 313 0
 924 0112 2A4B     		ldr	r3, .L59
 925 0114 1B68     		ldr	r3, [r3]
 926 0116 0133     		adds	r3, r3, #1
 927 0118 284A     		ldr	r2, .L59
 928 011a 1360     		str	r3, [r2]
 314:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 929              		.loc 1 314 0
 930 011c 274B     		ldr	r3, .L59
 931 011e 1B68     		ldr	r3, [r3]
 932 0120 274A     		ldr	r2, .L59+4
 933 0122 0121     		movs	r1, #1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 23


 934 0124 42F82310 		str	r1, [r2, r3, lsl #2]
 315:.\main.c      ****                 halfBitIndex++;
 935              		.loc 1 315 0
 936 0128 244B     		ldr	r3, .L59
 937 012a 1B68     		ldr	r3, [r3]
 938 012c 0133     		adds	r3, r3, #1
 939 012e 234A     		ldr	r2, .L59
 940 0130 1360     		str	r3, [r2]
 941 0132 30E0     		b	.L56
 942              	.L53:
 316:.\main.c      ****             }
 317:.\main.c      **** 
 318:.\main.c      ****         }
 319:.\main.c      ****         else
 320:.\main.c      ****         {
 321:.\main.c      ****             //bit == 0
 322:.\main.c      ****             if(previousHalfBit == 1)
 943              		.loc 1 322 0
 944 0134 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 945 0138 012B     		cmp	r3, #1
 946 013a 16D1     		bne	.L57
 323:.\main.c      ****             {
 324:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 947              		.loc 1 324 0
 948 013c 1F4B     		ldr	r3, .L59
 949 013e 1B68     		ldr	r3, [r3]
 950 0140 1F4A     		ldr	r2, .L59+4
 951 0142 0021     		movs	r1, #0
 952 0144 42F82310 		str	r1, [r2, r3, lsl #2]
 325:.\main.c      ****                 halfBitIndex++;
 953              		.loc 1 325 0
 954 0148 1C4B     		ldr	r3, .L59
 955 014a 1B68     		ldr	r3, [r3]
 956 014c 0133     		adds	r3, r3, #1
 957 014e 1B4A     		ldr	r2, .L59
 958 0150 1360     		str	r3, [r2]
 326:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 959              		.loc 1 326 0
 960 0152 1A4B     		ldr	r3, .L59
 961 0154 1B68     		ldr	r3, [r3]
 962 0156 1A4A     		ldr	r2, .L59+4
 963 0158 0121     		movs	r1, #1
 964 015a 42F82310 		str	r1, [r2, r3, lsl #2]
 327:.\main.c      ****                 halfBitIndex++;
 965              		.loc 1 327 0
 966 015e 174B     		ldr	r3, .L59
 967 0160 1B68     		ldr	r3, [r3]
 968 0162 0133     		adds	r3, r3, #1
 969 0164 154A     		ldr	r2, .L59
 970 0166 1360     		str	r3, [r2]
 971 0168 15E0     		b	.L56
 972              	.L57:
 328:.\main.c      ****             }
 329:.\main.c      ****             else
 330:.\main.c      ****             {
 331:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 973              		.loc 1 331 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 24


 974 016a 144B     		ldr	r3, .L59
 975 016c 1B68     		ldr	r3, [r3]
 976 016e 144A     		ldr	r2, .L59+4
 977 0170 0121     		movs	r1, #1
 978 0172 42F82310 		str	r1, [r2, r3, lsl #2]
 332:.\main.c      ****                 halfBitIndex++;
 979              		.loc 1 332 0
 980 0176 114B     		ldr	r3, .L59
 981 0178 1B68     		ldr	r3, [r3]
 982 017a 0133     		adds	r3, r3, #1
 983 017c 0F4A     		ldr	r2, .L59
 984 017e 1360     		str	r3, [r2]
 333:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 985              		.loc 1 333 0
 986 0180 0E4B     		ldr	r3, .L59
 987 0182 1B68     		ldr	r3, [r3]
 988 0184 0E4A     		ldr	r2, .L59+4
 989 0186 0021     		movs	r1, #0
 990 0188 42F82310 		str	r1, [r2, r3, lsl #2]
 334:.\main.c      ****                 halfBitIndex++;
 991              		.loc 1 334 0
 992 018c 0B4B     		ldr	r3, .L59
 993 018e 1B68     		ldr	r3, [r3]
 994 0190 0133     		adds	r3, r3, #1
 995 0192 0A4A     		ldr	r2, .L59
 996 0194 1360     		str	r3, [r2]
 997              	.L56:
 335:.\main.c      ****             }
 336:.\main.c      ****         }
 337:.\main.c      **** 
 338:.\main.c      ****         previousHalfBit = diffManEncodedData[halfBitIndex-1];
 998              		.loc 1 338 0 discriminator 2
 999 0196 094B     		ldr	r3, .L59
 1000 0198 1B68     		ldr	r3, [r3]
 1001 019a 013B     		subs	r3, r3, #1
 1002 019c 084A     		ldr	r2, .L59+4
 1003 019e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1004 01a2 87F86730 		strb	r3, [r7, #103]
 298:.\main.c      ****     {
 1005              		.loc 1 298 0 discriminator 2
 1006 01a6 FB6D     		ldr	r3, [r7, #92]
 1007 01a8 013B     		subs	r3, r3, #1
 1008 01aa FB65     		str	r3, [r7, #92]
 1009              	.L52:
 298:.\main.c      ****     {
 1010              		.loc 1 298 0 is_stmt 0 discriminator 1
 1011 01ac FB6D     		ldr	r3, [r7, #92]
 1012 01ae 002B     		cmp	r3, #0
 1013 01b0 85DA     		bge	.L58
 339:.\main.c      ****     }//end for
 340:.\main.c      **** 
 341:.\main.c      **** }//end function
 1014              		.loc 1 341 0 is_stmt 1
 1015 01b2 6C37     		adds	r7, r7, #108
 1016              		.cfi_def_cfa_offset 4
 1017 01b4 BD46     		mov	sp, r7
 1018              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 25


 1019              		@ sp needed
 1020 01b6 5DF8047B 		ldr	r7, [sp], #4
 1021              		.cfi_restore 7
 1022              		.cfi_def_cfa_offset 0
 1023 01ba 7047     		bx	lr
 1024              	.L60:
 1025              		.align	2
 1026              	.L59:
 1027 01bc 00000000 		.word	halfBitIndex
 1028 01c0 00000000 		.word	diffManEncodedData
 1029              		.cfi_endproc
 1030              	.LFE70:
 1031              		.size	asciiToDiffMan, .-asciiToDiffMan
 1032              		.global	__aeabi_i2d
 1033              		.global	__aeabi_ddiv
 1034              		.global	__aeabi_dmul
 1035              		.global	__aeabi_d2iz
 1036              		.section	.text.transmitData,"ax",%progbits
 1037              		.align	2
 1038              		.global	transmitData
 1039              		.thumb
 1040              		.thumb_func
 1041              		.type	transmitData, %function
 1042              	transmitData:
 1043              	.LFB71:
 342:.\main.c      **** 
 343:.\main.c      **** /*
 344:.\main.c      **** Transmits the diff man encoded data. Must have converted string to diff man before calling this met
 345:.\main.c      **** Checks network state before transmitting.
 346:.\main.c      **** Note: halfBitIndex will be equal to the size of the diffManEncodedData array at this point.
 347:.\main.c      **** */
 348:.\main.c      **** void transmitData(){
 1044              		.loc 1 348 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 82B0     		sub	sp, sp, #8
 1053              		.cfi_def_cfa_offset 16
 1054 0004 00AF     		add	r7, sp, #0
 1055              		.cfi_def_cfa_register 7
 349:.\main.c      ****     int i;
 350:.\main.c      ****     for(i = 0; i < halfBitIndex; i++){
 1056              		.loc 1 350 0
 1057 0006 0023     		movs	r3, #0
 1058 0008 7B60     		str	r3, [r7, #4]
 1059 000a 47E0     		b	.L62
 1060              	.L66:
 351:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data.
 352:.\main.c      ****         //Else break out of transmition and wait random time
 353:.\main.c      ****         if(networkState != idle){
 1061              		.loc 1 353 0
 1062 000c 2B4B     		ldr	r3, .L68
 1063 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 26


 1064 0010 002B     		cmp	r3, #0
 1065 0012 2BD0     		beq	.L63
 354:.\main.c      ****             if(networkState == collision){
 1066              		.loc 1 354 0
 1067 0014 294B     		ldr	r3, .L68
 1068 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1069 0018 022B     		cmp	r3, #2
 1070 001a 27D1     		bne	.L63
 1071              	.LBB2:
 355:.\main.c      ****                 TX_pin_Write(1);
 1072              		.loc 1 355 0
 1073 001c 0120     		movs	r0, #1
 1074 001e FFF7FEFF 		bl	TX_pin_Write
 356:.\main.c      ****                 int value = (getRandomNumber()/128.0)*800.0;
 1075              		.loc 1 356 0
 1076 0022 FFF7FEFF 		bl	getRandomNumber
 1077 0026 0346     		mov	r3, r0
 1078 0028 1846     		mov	r0, r3
 1079 002a FFF7FEFF 		bl	__aeabi_i2d
 1080 002e 0246     		mov	r2, r0
 1081 0030 0B46     		mov	r3, r1
 1082 0032 1046     		mov	r0, r2
 1083 0034 1946     		mov	r1, r3
 1084 0036 4FF00002 		mov	r2, #0
 1085 003a 214B     		ldr	r3, .L68+4
 1086 003c FFF7FEFF 		bl	__aeabi_ddiv
 1087 0040 0246     		mov	r2, r0
 1088 0042 0B46     		mov	r3, r1
 1089 0044 1046     		mov	r0, r2
 1090 0046 1946     		mov	r1, r3
 1091 0048 4FF00002 		mov	r2, #0
 1092 004c 1D4B     		ldr	r3, .L68+8
 1093 004e FFF7FEFF 		bl	__aeabi_dmul
 1094 0052 0246     		mov	r2, r0
 1095 0054 0B46     		mov	r3, r1
 1096 0056 1046     		mov	r0, r2
 1097 0058 1946     		mov	r1, r3
 1098 005a FFF7FEFF 		bl	__aeabi_d2iz
 1099 005e 0346     		mov	r3, r0
 1100 0060 3B60     		str	r3, [r7]
 357:.\main.c      **** 
 358:.\main.c      ****                 //Back-off a random time between 0 and 0.8 seconds
 359:.\main.c      ****                 CyDelay(value);
 1101              		.loc 1 359 0
 1102 0062 3B68     		ldr	r3, [r7]
 1103 0064 1846     		mov	r0, r3
 1104 0066 FFF7FEFF 		bl	CyDelay
 360:.\main.c      ****                 break;
 1105              		.loc 1 360 0
 1106 006a 1CE0     		b	.L64
 1107              	.L63:
 1108              	.LBE2:
 361:.\main.c      ****             }
 362:.\main.c      ****         }
 363:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 1109              		.loc 1 363 0
 1110 006c 164A     		ldr	r2, .L68+12
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 27


 1111 006e 7B68     		ldr	r3, [r7, #4]
 1112 0070 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1113 0074 DBB2     		uxtb	r3, r3
 1114 0076 1846     		mov	r0, r3
 1115 0078 FFF7FEFF 		bl	TX_pin_Write
 364:.\main.c      ****         Timer_Start();
 1116              		.loc 1 364 0
 1117 007c FFF7FEFF 		bl	Timer_Start
 365:.\main.c      ****         while(!timerExpired);
 1118              		.loc 1 365 0
 1119 0080 00BF     		nop
 1120              	.L65:
 1121              		.loc 1 365 0 is_stmt 0 discriminator 1
 1122 0082 124B     		ldr	r3, .L68+16
 1123 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1124 0086 83F00103 		eor	r3, r3, #1
 1125 008a DBB2     		uxtb	r3, r3
 1126 008c 002B     		cmp	r3, #0
 1127 008e F8D1     		bne	.L65
 366:.\main.c      ****         timerExpired = false;
 1128              		.loc 1 366 0 is_stmt 1 discriminator 2
 1129 0090 0E4B     		ldr	r3, .L68+16
 1130 0092 0022     		movs	r2, #0
 1131 0094 1A70     		strb	r2, [r3]
 350:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data.
 1132              		.loc 1 350 0 discriminator 2
 1133 0096 7B68     		ldr	r3, [r7, #4]
 1134 0098 0133     		adds	r3, r3, #1
 1135 009a 7B60     		str	r3, [r7, #4]
 1136              	.L62:
 350:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data.
 1137              		.loc 1 350 0 is_stmt 0 discriminator 1
 1138 009c 0C4B     		ldr	r3, .L68+20
 1139 009e 1B68     		ldr	r3, [r3]
 1140 00a0 7A68     		ldr	r2, [r7, #4]
 1141 00a2 9A42     		cmp	r2, r3
 1142 00a4 B2DB     		blt	.L66
 1143              	.L64:
 367:.\main.c      ****     }
 368:.\main.c      **** 
 369:.\main.c      ****     //when finished transmitting diff manchester encoded data, set flag
 370:.\main.c      ****     if(i == halfBitIndex){
 1144              		.loc 1 370 0 is_stmt 1
 1145 00a6 0A4B     		ldr	r3, .L68+20
 1146 00a8 1B68     		ldr	r3, [r3]
 1147 00aa 7A68     		ldr	r2, [r7, #4]
 1148 00ac 9A42     		cmp	r2, r3
 1149 00ae 02D1     		bne	.L61
 371:.\main.c      ****         dataTransmissionComplete = true;
 1150              		.loc 1 371 0
 1151 00b0 084B     		ldr	r3, .L68+24
 1152 00b2 0122     		movs	r2, #1
 1153 00b4 1A70     		strb	r2, [r3]
 1154              	.L61:
 372:.\main.c      ****     }
 373:.\main.c      **** }
 1155              		.loc 1 373 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 28


 1156 00b6 0837     		adds	r7, r7, #8
 1157              		.cfi_def_cfa_offset 8
 1158 00b8 BD46     		mov	sp, r7
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
 1161 00ba 80BD     		pop	{r7, pc}
 1162              	.L69:
 1163              		.align	2
 1164              	.L68:
 1165 00bc 00000000 		.word	networkState
 1166 00c0 00006040 		.word	1080033280
 1167 00c4 00008940 		.word	1082720256
 1168 00c8 00000000 		.word	diffManEncodedData
 1169 00cc 00000000 		.word	timerExpired
 1170 00d0 00000000 		.word	halfBitIndex
 1171 00d4 00000000 		.word	dataTransmissionComplete
 1172              		.cfi_endproc
 1173              	.LFE71:
 1174              		.size	transmitData, .-transmitData
 1175              		.section	.text.setNetworkStateOnLEDs,"ax",%progbits
 1176              		.align	2
 1177              		.global	setNetworkStateOnLEDs
 1178              		.thumb
 1179              		.thumb_func
 1180              		.type	setNetworkStateOnLEDs, %function
 1181              	setNetworkStateOnLEDs:
 1182              	.LFB72:
 374:.\main.c      **** 
 375:.\main.c      **** void setNetworkStateOnLEDs(){
 1183              		.loc 1 375 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 1, uses_anonymous_args = 0
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 376:.\main.c      **** 	 switch(networkState){
 1193              		.loc 1 376 0
 1194 0004 134B     		ldr	r3, .L76
 1195 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 0008 012B     		cmp	r3, #1
 1197 000a 04D0     		beq	.L72
 1198 000c 022B     		cmp	r3, #2
 1199 000e 16D0     		beq	.L73
 1200 0010 002B     		cmp	r3, #0
 1201 0012 0AD0     		beq	.L74
 377:.\main.c      ****         case busy:
 378:.\main.c      ****         {
 379:.\main.c      ****             LED4_Write(1);
 380:.\main.c      ****             LED3_Write(0);
 381:.\main.c      ****             LED2_Write(0);
 382:.\main.c      ****             break;
 383:.\main.c      ****         }
 384:.\main.c      ****         case idle:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 29


 385:.\main.c      ****         {
 386:.\main.c      ****             LED3_Write(1);
 387:.\main.c      ****             LED4_Write(0);
 388:.\main.c      ****             LED2_Write(0);
 389:.\main.c      ****             break;
 390:.\main.c      ****         }
 391:.\main.c      ****         case collision:
 392:.\main.c      ****         {
 393:.\main.c      ****             LED2_Write(1);
 394:.\main.c      ****             LED4_Write(0);
 395:.\main.c      ****             LED3_Write(0);
 396:.\main.c      ****             break;
 397:.\main.c      ****         }
 398:.\main.c      ****         default:
 399:.\main.c      ****         {
 400:.\main.c      ****            //error
 401:.\main.c      ****             break;
 1202              		.loc 1 401 0
 1203 0014 1DE0     		b	.L70
 1204              	.L72:
 379:.\main.c      ****             LED3_Write(0);
 1205              		.loc 1 379 0
 1206 0016 0120     		movs	r0, #1
 1207 0018 FFF7FEFF 		bl	LED4_Write
 380:.\main.c      ****             LED2_Write(0);
 1208              		.loc 1 380 0
 1209 001c 0020     		movs	r0, #0
 1210 001e FFF7FEFF 		bl	LED3_Write
 381:.\main.c      ****             break;
 1211              		.loc 1 381 0
 1212 0022 0020     		movs	r0, #0
 1213 0024 FFF7FEFF 		bl	LED2_Write
 382:.\main.c      ****         }
 1214              		.loc 1 382 0
 1215 0028 13E0     		b	.L70
 1216              	.L74:
 386:.\main.c      ****             LED4_Write(0);
 1217              		.loc 1 386 0
 1218 002a 0120     		movs	r0, #1
 1219 002c FFF7FEFF 		bl	LED3_Write
 387:.\main.c      ****             LED2_Write(0);
 1220              		.loc 1 387 0
 1221 0030 0020     		movs	r0, #0
 1222 0032 FFF7FEFF 		bl	LED4_Write
 388:.\main.c      ****             break;
 1223              		.loc 1 388 0
 1224 0036 0020     		movs	r0, #0
 1225 0038 FFF7FEFF 		bl	LED2_Write
 389:.\main.c      ****         }
 1226              		.loc 1 389 0
 1227 003c 09E0     		b	.L70
 1228              	.L73:
 393:.\main.c      ****             LED4_Write(0);
 1229              		.loc 1 393 0
 1230 003e 0120     		movs	r0, #1
 1231 0040 FFF7FEFF 		bl	LED2_Write
 394:.\main.c      ****             LED3_Write(0);
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 30


 1232              		.loc 1 394 0
 1233 0044 0020     		movs	r0, #0
 1234 0046 FFF7FEFF 		bl	LED4_Write
 395:.\main.c      ****             break;
 1235              		.loc 1 395 0
 1236 004a 0020     		movs	r0, #0
 1237 004c FFF7FEFF 		bl	LED3_Write
 396:.\main.c      ****         }
 1238              		.loc 1 396 0
 1239 0050 00BF     		nop
 1240              	.L70:
 402:.\main.c      ****         }
 403:.\main.c      **** 	}
 404:.\main.c      **** }
 1241              		.loc 1 404 0
 1242 0052 80BD     		pop	{r7, pc}
 1243              	.L77:
 1244              		.align	2
 1245              	.L76:
 1246 0054 00000000 		.word	networkState
 1247              		.cfi_endproc
 1248              	.LFE72:
 1249              		.size	setNetworkStateOnLEDs, .-setNetworkStateOnLEDs
 1250              		.section	.text.getRandomNumber,"ax",%progbits
 1251              		.align	2
 1252              		.global	getRandomNumber
 1253              		.thumb
 1254              		.thumb_func
 1255              		.type	getRandomNumber, %function
 1256              	getRandomNumber:
 1257              	.LFB73:
 405:.\main.c      **** 
 406:.\main.c      **** /*
 407:.\main.c      **** Generates a random value from 1 to 128. Used in the random backoff time equation: (N/128)(0.800 sec
 408:.\main.c      **** */
 409:.\main.c      **** int getRandomNumber()
 410:.\main.c      **** {
 1258              		.loc 1 410 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 16
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 84B0     		sub	sp, sp, #16
 1267              		.cfi_def_cfa_offset 24
 1268 0004 00AF     		add	r7, sp, #0
 1269              		.cfi_def_cfa_register 7
 411:.\main.c      ****     const int MIN_N = 1;
 1270              		.loc 1 411 0
 1271 0006 0123     		movs	r3, #1
 1272 0008 FB60     		str	r3, [r7, #12]
 412:.\main.c      ****     const int MAX_N = 128;
 1273              		.loc 1 412 0
 1274 000a 8023     		movs	r3, #128
 1275 000c BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 31


 413:.\main.c      **** 
 414:.\main.c      ****     int n;
 415:.\main.c      **** /*
 416:.\main.c      ****     Get first and second random numbers.
 417:.\main.c      ****     */
 418:.\main.c      ****     n =rand() % (MAX_N - MIN_N + 1) + MIN_N;
 1276              		.loc 1 418 0
 1277 000e FFF7FEFF 		bl	rand
 1278 0012 0246     		mov	r2, r0
 1279 0014 B968     		ldr	r1, [r7, #8]
 1280 0016 FB68     		ldr	r3, [r7, #12]
 1281 0018 CB1A     		subs	r3, r1, r3
 1282 001a 0133     		adds	r3, r3, #1
 1283 001c 92FBF3F1 		sdiv	r1, r2, r3
 1284 0020 03FB01F3 		mul	r3, r3, r1
 1285 0024 D21A     		subs	r2, r2, r3
 1286 0026 FB68     		ldr	r3, [r7, #12]
 1287 0028 1344     		add	r3, r3, r2
 1288 002a 7B60     		str	r3, [r7, #4]
 419:.\main.c      ****     return n;
 1289              		.loc 1 419 0
 1290 002c 7B68     		ldr	r3, [r7, #4]
 420:.\main.c      **** }
 1291              		.loc 1 420 0
 1292 002e 1846     		mov	r0, r3
 1293 0030 1037     		adds	r7, r7, #16
 1294              		.cfi_def_cfa_offset 8
 1295 0032 BD46     		mov	sp, r7
 1296              		.cfi_def_cfa_register 13
 1297              		@ sp needed
 1298 0034 80BD     		pop	{r7, pc}
 1299              		.cfi_endproc
 1300              	.LFE73:
 1301              		.size	getRandomNumber, .-getRandomNumber
 1302 0036 00BF     		.section	.text.diffManToASCII,"ax",%progbits
 1303              		.align	2
 1304              		.global	diffManToASCII
 1305              		.thumb
 1306              		.thumb_func
 1307              		.type	diffManToASCII, %function
 1308              	diffManToASCII:
 1309              	.LFB74:
 421:.\main.c      **** 
 422:.\main.c      **** /*
 423:.\main.c      **** Helper method.
 424:.\main.c      **** Convert differental manchester line encoded byte to ascii char
 425:.\main.c      **** */
 426:.\main.c      **** void diffManToASCII()
 427:.\main.c      **** {
 1310              		.loc 1 427 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0000 80B4     		push	{r7}
 1316              		.cfi_def_cfa_offset 4
 1317              		.cfi_offset 7, -4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 32


 1318 0002 83B0     		sub	sp, sp, #12
 1319              		.cfi_def_cfa_offset 16
 1320 0004 00AF     		add	r7, sp, #0
 1321              		.cfi_def_cfa_register 7
 428:.\main.c      ****     int i;
 429:.\main.c      ****     for(i = 0; i < EIGHT_BITS; i++){
 1322              		.loc 1 429 0
 1323 0006 0023     		movs	r3, #0
 1324 0008 7B60     		str	r3, [r7, #4]
 1325 000a 42E0     		b	.L81
 1326              	.L87:
 1327              	.LBB3:
 430:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1328              		.loc 1 430 0
 1329 000c 254B     		ldr	r3, .L88
 1330 000e 1B68     		ldr	r3, [r3]
 1331 0010 013B     		subs	r3, r3, #1
 1332 0012 254A     		ldr	r2, .L88+4
 1333 0014 D35C     		ldrb	r3, [r2, r3]
 1334 0016 FB70     		strb	r3, [r7, #3]
 431:.\main.c      ****         //send starting 1 bit (encoded)
 432:.\main.c      ****         if(diffManReceivedData[receivedDataIndex] == 1){
 1335              		.loc 1 432 0
 1336 0018 224B     		ldr	r3, .L88
 1337 001a 1B68     		ldr	r3, [r3]
 1338 001c 224A     		ldr	r2, .L88+4
 1339 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1340 0020 012B     		cmp	r3, #1
 1341 0022 17D1     		bne	.L82
 433:.\main.c      ****             //current half bit is 1
 434:.\main.c      ****             if(previousHalfBit == 1)
 1342              		.loc 1 434 0
 1343 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1344 0026 012B     		cmp	r3, #1
 1345 0028 0FD1     		bne	.L83
 435:.\main.c      ****             {
 436:.\main.c      ****                 receivedChar |= (1 << (7 - i));
 1346              		.loc 1 436 0
 1347 002a 7B68     		ldr	r3, [r7, #4]
 1348 002c C3F10703 		rsb	r3, r3, #7
 1349 0030 0122     		movs	r2, #1
 1350 0032 02FA03F3 		lsl	r3, r2, r3
 1351 0036 DAB2     		uxtb	r2, r3
 1352 0038 1C4B     		ldr	r3, .L88+8
 1353 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1354 003c DBB2     		uxtb	r3, r3
 1355 003e 1343     		orrs	r3, r3, r2
 1356 0040 DBB2     		uxtb	r3, r3
 1357 0042 DAB2     		uxtb	r2, r3
 1358 0044 194B     		ldr	r3, .L88+8
 1359 0046 1A70     		strb	r2, [r3]
 1360 0048 1BE0     		b	.L85
 1361              	.L83:
 437:.\main.c      ****             }
 438:.\main.c      ****             else
 439:.\main.c      ****             {
 440:.\main.c      ****                 receivedChar |= (0 << (7 - i));
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 33


 1362              		.loc 1 440 0
 1363 004a 184B     		ldr	r3, .L88+8
 1364 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1365 004e 174B     		ldr	r3, .L88+8
 1366 0050 1A70     		strb	r2, [r3]
 1367 0052 16E0     		b	.L85
 1368              	.L82:
 441:.\main.c      ****             }
 442:.\main.c      ****         }
 443:.\main.c      ****         else{
 444:.\main.c      ****             //current half bit is 0
 445:.\main.c      ****             if(previousHalfBit == 1)
 1369              		.loc 1 445 0
 1370 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1371 0056 012B     		cmp	r3, #1
 1372 0058 04D1     		bne	.L86
 446:.\main.c      ****             {
 447:.\main.c      ****                 receivedChar |= (0 << (7 - i));
 1373              		.loc 1 447 0
 1374 005a 144B     		ldr	r3, .L88+8
 1375 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1376 005e 134B     		ldr	r3, .L88+8
 1377 0060 1A70     		strb	r2, [r3]
 1378 0062 0EE0     		b	.L85
 1379              	.L86:
 448:.\main.c      ****             }
 449:.\main.c      ****             else
 450:.\main.c      ****             {
 451:.\main.c      ****                 receivedChar |= (1 << (7 - i));
 1380              		.loc 1 451 0
 1381 0064 7B68     		ldr	r3, [r7, #4]
 1382 0066 C3F10703 		rsb	r3, r3, #7
 1383 006a 0122     		movs	r2, #1
 1384 006c 02FA03F3 		lsl	r3, r2, r3
 1385 0070 DAB2     		uxtb	r2, r3
 1386 0072 0E4B     		ldr	r3, .L88+8
 1387 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 0076 DBB2     		uxtb	r3, r3
 1389 0078 1343     		orrs	r3, r3, r2
 1390 007a DBB2     		uxtb	r3, r3
 1391 007c DAB2     		uxtb	r2, r3
 1392 007e 0B4B     		ldr	r3, .L88+8
 1393 0080 1A70     		strb	r2, [r3]
 1394              	.L85:
 452:.\main.c      ****             }
 453:.\main.c      ****         }
 454:.\main.c      ****         receivedDataIndex += 2;
 1395              		.loc 1 454 0 discriminator 2
 1396 0082 084B     		ldr	r3, .L88
 1397 0084 1B68     		ldr	r3, [r3]
 1398 0086 0233     		adds	r3, r3, #2
 1399 0088 064A     		ldr	r2, .L88
 1400 008a 1360     		str	r3, [r2]
 1401              	.LBE3:
 429:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1402              		.loc 1 429 0 discriminator 2
 1403 008c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 34


 1404 008e 0133     		adds	r3, r3, #1
 1405 0090 7B60     		str	r3, [r7, #4]
 1406              	.L81:
 429:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1407              		.loc 1 429 0 is_stmt 0 discriminator 1
 1408 0092 7B68     		ldr	r3, [r7, #4]
 1409 0094 072B     		cmp	r3, #7
 1410 0096 B9DD     		ble	.L87
 455:.\main.c      ****     }//end for loop
 456:.\main.c      **** }
 1411              		.loc 1 456 0 is_stmt 1
 1412 0098 0C37     		adds	r7, r7, #12
 1413              		.cfi_def_cfa_offset 4
 1414 009a BD46     		mov	sp, r7
 1415              		.cfi_def_cfa_register 13
 1416              		@ sp needed
 1417 009c 5DF8047B 		ldr	r7, [sp], #4
 1418              		.cfi_restore 7
 1419              		.cfi_def_cfa_offset 0
 1420 00a0 7047     		bx	lr
 1421              	.L89:
 1422 00a2 00BF     		.align	2
 1423              	.L88:
 1424 00a4 00000000 		.word	receivedDataIndex
 1425 00a8 00000000 		.word	diffManReceivedData
 1426 00ac 00000000 		.word	receivedChar
 1427              		.cfi_endproc
 1428              	.LFE74:
 1429              		.size	diffManToASCII, .-diffManToASCII
 1430              		.section	.text.storeChar,"ax",%progbits
 1431              		.align	2
 1432              		.global	storeChar
 1433              		.thumb
 1434              		.thumb_func
 1435              		.type	storeChar, %function
 1436              	storeChar:
 1437              	.LFB75:
 457:.\main.c      **** 
 458:.\main.c      **** //stores char in receive array
 459:.\main.c      **** void storeChar(){
 1438              		.loc 1 459 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443 0000 80B4     		push	{r7}
 1444              		.cfi_def_cfa_offset 4
 1445              		.cfi_offset 7, -4
 1446 0002 00AF     		add	r7, sp, #0
 1447              		.cfi_def_cfa_register 7
 460:.\main.c      **** 	receivedChar &= ASCII_CHAR_MASK;
 1448              		.loc 1 460 0
 1449 0004 0A4B     		ldr	r3, .L91
 1450 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1451 0008 03F07F03 		and	r3, r3, #127
 1452 000c DAB2     		uxtb	r2, r3
 1453 000e 084B     		ldr	r3, .L91
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 35


 1454 0010 1A70     		strb	r2, [r3]
 461:.\main.c      **** 	rxChar[currentRXCharPosition] = receivedChar;
 1455              		.loc 1 461 0
 1456 0012 084B     		ldr	r3, .L91+4
 1457 0014 1B68     		ldr	r3, [r3]
 1458 0016 064A     		ldr	r2, .L91
 1459 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1460 001a 074A     		ldr	r2, .L91+8
 1461 001c D154     		strb	r1, [r2, r3]
 462:.\main.c      **** 	currentRXCharPosition++;
 1462              		.loc 1 462 0
 1463 001e 054B     		ldr	r3, .L91+4
 1464 0020 1B68     		ldr	r3, [r3]
 1465 0022 0133     		adds	r3, r3, #1
 1466 0024 034A     		ldr	r2, .L91+4
 1467 0026 1360     		str	r3, [r2]
 463:.\main.c      **** }
 1468              		.loc 1 463 0
 1469 0028 BD46     		mov	sp, r7
 1470              		.cfi_def_cfa_register 13
 1471              		@ sp needed
 1472 002a 5DF8047B 		ldr	r7, [sp], #4
 1473              		.cfi_restore 7
 1474              		.cfi_def_cfa_offset 0
 1475 002e 7047     		bx	lr
 1476              	.L92:
 1477              		.align	2
 1478              	.L91:
 1479 0030 00000000 		.word	receivedChar
 1480 0034 00000000 		.word	currentRXCharPosition
 1481 0038 00000000 		.word	rxChar
 1482              		.cfi_endproc
 1483              	.LFE75:
 1484              		.size	storeChar, .-storeChar
 1485              		.section	.text.printChar,"ax",%progbits
 1486              		.align	2
 1487              		.global	printChar
 1488              		.thumb
 1489              		.thumb_func
 1490              		.type	printChar, %function
 1491              	printChar:
 1492              	.LFB76:
 464:.\main.c      **** 
 465:.\main.c      **** //Grabs all chars and prints to LCD
 466:.\main.c      **** void printChar(){
 1493              		.loc 1 466 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 8
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497 0000 80B5     		push	{r7, lr}
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 82B0     		sub	sp, sp, #8
 1502              		.cfi_def_cfa_offset 16
 1503 0004 00AF     		add	r7, sp, #0
 1504              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 36


 467:.\main.c      **** 	int i;//char position after array
 468:.\main.c      ****     for(i = 7; i < messageLength; i++){//we are assuming messageLength from the header is valid and
 1505              		.loc 1 468 0
 1506 0006 0723     		movs	r3, #7
 1507 0008 7B60     		str	r3, [r7, #4]
 1508 000a 09E0     		b	.L94
 1509              	.L95:
 469:.\main.c      **** 		LCD_PutChar(rxChar[i]);
 1510              		.loc 1 469 0 discriminator 3
 1511 000c 084A     		ldr	r2, .L96
 1512 000e 7B68     		ldr	r3, [r7, #4]
 1513 0010 1344     		add	r3, r3, r2
 1514 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 0014 1846     		mov	r0, r3
 1516 0016 FFF7FEFF 		bl	LCD_PutChar
 468:.\main.c      **** 		LCD_PutChar(rxChar[i]);
 1517              		.loc 1 468 0 discriminator 3
 1518 001a 7B68     		ldr	r3, [r7, #4]
 1519 001c 0133     		adds	r3, r3, #1
 1520 001e 7B60     		str	r3, [r7, #4]
 1521              	.L94:
 468:.\main.c      **** 		LCD_PutChar(rxChar[i]);
 1522              		.loc 1 468 0 is_stmt 0 discriminator 1
 1523 0020 044B     		ldr	r3, .L96+4
 1524 0022 1B68     		ldr	r3, [r3]
 1525 0024 7A68     		ldr	r2, [r7, #4]
 1526 0026 9A42     		cmp	r2, r3
 1527 0028 F0DB     		blt	.L95
 470:.\main.c      **** 		//TODO: implement USB transmit
 471:.\main.c      ****     }
 472:.\main.c      **** }
 1528              		.loc 1 472 0 is_stmt 1
 1529 002a 0837     		adds	r7, r7, #8
 1530              		.cfi_def_cfa_offset 8
 1531 002c BD46     		mov	sp, r7
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 002e 80BD     		pop	{r7, pc}
 1535              	.L97:
 1536              		.align	2
 1537              	.L96:
 1538 0030 00000000 		.word	rxChar
 1539 0034 00000000 		.word	messageLength
 1540              		.cfi_endproc
 1541              	.LFE76:
 1542              		.size	printChar, .-printChar
 1543              		.section	.text.headerCheck,"ax",%progbits
 1544              		.align	2
 1545              		.global	headerCheck
 1546              		.thumb
 1547              		.thumb_func
 1548              		.type	headerCheck, %function
 1549              	headerCheck:
 1550              	.LFB77:
 473:.\main.c      **** 
 474:.\main.c      **** //checks received header and strips from array if valid
 475:.\main.c      **** //otherwise, disregard contents
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 37


 476:.\main.c      **** bool headerCheck(){
 1551              		.loc 1 476 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 7, -8
 1558              		.cfi_offset 14, -4
 1559 0002 00AF     		add	r7, sp, #0
 1560              		.cfi_def_cfa_register 7
 477:.\main.c      ****     //nested if loops are probably the easiest way to check
 478:.\main.c      **** 	if(rxChar[0] == 'q'){
 1561              		.loc 1 478 0
 1562 0004 124B     		ldr	r3, .L102
 1563 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 0008 712B     		cmp	r3, #113
 1565 000a 1ED1     		bne	.L99
 479:.\main.c      **** 		if(rxChar[3] == 0x00 || rxChar[3] == RX_DESTINATION_ADDRESS){
 1566              		.loc 1 479 0
 1567 000c 104B     		ldr	r3, .L102
 1568 000e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1569 0010 002B     		cmp	r3, #0
 1570 0012 03D0     		beq	.L100
 1571              		.loc 1 479 0 is_stmt 0 discriminator 1
 1572 0014 0E4B     		ldr	r3, .L102
 1573 0016 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1574 0018 002B     		cmp	r3, #0
 1575 001a 16D1     		bne	.L99
 1576              	.L100:
 480:.\main.c      **** 			//this is as valid as we go (CRC is optional)
 481:.\main.c      **** 			messageLength = rxChar[4];
 1577              		.loc 1 481 0 is_stmt 1
 1578 001c 0C4B     		ldr	r3, .L102
 1579 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1580 0020 1A46     		mov	r2, r3
 1581 0022 0C4B     		ldr	r3, .L102+4
 1582 0024 1A60     		str	r2, [r3]
 482:.\main.c      ****             LCD_PrintNumber(rxChar[4]);
 1583              		.loc 1 482 0
 1584 0026 0A4B     		ldr	r3, .L102
 1585 0028 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1586 002a 1846     		mov	r0, r3
 1587 002c FFF7FEFF 		bl	LCD_PrintU32Number
 483:.\main.c      **** 			crcState = rxChar[5];
 1588              		.loc 1 483 0
 1589 0030 074B     		ldr	r3, .L102
 1590 0032 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1591 0034 084B     		ldr	r3, .L102+8
 1592 0036 1A70     		strb	r2, [r3]
 484:.\main.c      **** 			headerCRC = rxChar[6];
 1593              		.loc 1 484 0
 1594 0038 054B     		ldr	r3, .L102
 1595 003a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1596 003c 1A46     		mov	r2, r3
 1597 003e 074B     		ldr	r3, .L102+12
 1598 0040 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 38


 485:.\main.c      ****             CyDelay(1000);
 1599              		.loc 1 485 0
 1600 0042 4FF47A70 		mov	r0, #1000
 1601 0046 FFF7FEFF 		bl	CyDelay
 1602              	.L99:
 486:.\main.c      **** 			//return true;
 487:.\main.c      **** 		}
 488:.\main.c      **** 	}
 489:.\main.c      **** 	return false;
 1603              		.loc 1 489 0
 1604 004a 0023     		movs	r3, #0
 490:.\main.c      **** }
 1605              		.loc 1 490 0
 1606 004c 1846     		mov	r0, r3
 1607 004e 80BD     		pop	{r7, pc}
 1608              	.L103:
 1609              		.align	2
 1610              	.L102:
 1611 0050 00000000 		.word	rxChar
 1612 0054 00000000 		.word	messageLength
 1613 0058 00000000 		.word	crcState
 1614 005c 00000000 		.word	headerCRC
 1615              		.cfi_endproc
 1616              	.LFE77:
 1617              		.size	headerCheck, .-headerCheck
 1618              		.text
 1619              	.Letext0:
 1620              		.file 2 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1621              		.file 3 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1622              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1623              		.file 5 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1624              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1625              		.section	.debug_info,"",%progbits
 1626              	.Ldebug_info0:
 1627 0000 1C050000 		.4byte	0x51c
 1628 0004 0400     		.2byte	0x4
 1629 0006 00000000 		.4byte	.Ldebug_abbrev0
 1630 000a 04       		.byte	0x4
 1631 000b 01       		.uleb128 0x1
 1632 000c 4A010000 		.4byte	.LASF72
 1633 0010 01       		.byte	0x1
 1634 0011 A4030000 		.4byte	.LASF73
 1635 0015 D1000000 		.4byte	.LASF74
 1636 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1637 001d 00000000 		.4byte	0
 1638 0021 00000000 		.4byte	.Ldebug_line0
 1639 0025 02       		.uleb128 0x2
 1640 0026 01       		.byte	0x1
 1641 0027 06       		.byte	0x6
 1642 0028 5A020000 		.4byte	.LASF0
 1643 002c 02       		.uleb128 0x2
 1644 002d 01       		.byte	0x1
 1645 002e 08       		.byte	0x8
 1646 002f 08020000 		.4byte	.LASF1
 1647 0033 02       		.uleb128 0x2
 1648 0034 02       		.byte	0x2
 1649 0035 05       		.byte	0x5
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 39


 1650 0036 82000000 		.4byte	.LASF2
 1651 003a 02       		.uleb128 0x2
 1652 003b 02       		.byte	0x2
 1653 003c 07       		.byte	0x7
 1654 003d 01030000 		.4byte	.LASF3
 1655 0041 03       		.uleb128 0x3
 1656 0042 AD030000 		.4byte	.LASF9
 1657 0046 02       		.byte	0x2
 1658 0047 3F       		.byte	0x3f
 1659 0048 4C000000 		.4byte	0x4c
 1660 004c 02       		.uleb128 0x2
 1661 004d 04       		.byte	0x4
 1662 004e 05       		.byte	0x5
 1663 004f E1020000 		.4byte	.LASF4
 1664 0053 02       		.uleb128 0x2
 1665 0054 04       		.byte	0x4
 1666 0055 07       		.byte	0x7
 1667 0056 A8020000 		.4byte	.LASF5
 1668 005a 02       		.uleb128 0x2
 1669 005b 08       		.byte	0x8
 1670 005c 05       		.byte	0x5
 1671 005d 0E010000 		.4byte	.LASF6
 1672 0061 02       		.uleb128 0x2
 1673 0062 08       		.byte	0x8
 1674 0063 07       		.byte	0x7
 1675 0064 1C010000 		.4byte	.LASF7
 1676 0068 04       		.uleb128 0x4
 1677 0069 04       		.byte	0x4
 1678 006a 05       		.byte	0x5
 1679 006b 696E7400 		.ascii	"int\000"
 1680 006f 02       		.uleb128 0x2
 1681 0070 04       		.byte	0x4
 1682 0071 07       		.byte	0x7
 1683 0072 89020000 		.4byte	.LASF8
 1684 0076 03       		.uleb128 0x3
 1685 0077 F9020000 		.4byte	.LASF10
 1686 007b 03       		.byte	0x3
 1687 007c 2C       		.byte	0x2c
 1688 007d 41000000 		.4byte	0x41
 1689 0081 03       		.uleb128 0x3
 1690 0082 B0000000 		.4byte	.LASF11
 1691 0086 04       		.byte	0x4
 1692 0087 C2       		.byte	0xc2
 1693 0088 2C000000 		.4byte	0x2c
 1694 008c 03       		.uleb128 0x3
 1695 008d 9C000000 		.4byte	.LASF12
 1696 0091 04       		.byte	0x4
 1697 0092 C3       		.byte	0xc3
 1698 0093 3A000000 		.4byte	0x3a
 1699 0097 02       		.uleb128 0x2
 1700 0098 04       		.byte	0x4
 1701 0099 04       		.byte	0x4
 1702 009a 08010000 		.4byte	.LASF13
 1703 009e 02       		.uleb128 0x2
 1704 009f 08       		.byte	0x8
 1705 00a0 04       		.byte	0x4
 1706 00a1 46030000 		.4byte	.LASF14
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 40


 1707 00a5 02       		.uleb128 0x2
 1708 00a6 01       		.byte	0x1
 1709 00a7 08       		.byte	0x8
 1710 00a8 CF020000 		.4byte	.LASF15
 1711 00ac 05       		.uleb128 0x5
 1712 00ad 39030000 		.4byte	.LASF16
 1713 00b1 04       		.byte	0x4
 1714 00b2 6C01     		.2byte	0x16c
 1715 00b4 B8000000 		.4byte	0xb8
 1716 00b8 06       		.uleb128 0x6
 1717 00b9 81000000 		.4byte	0x81
 1718 00bd 02       		.uleb128 0x2
 1719 00be 04       		.byte	0x4
 1720 00bf 07       		.byte	0x7
 1721 00c0 3D000000 		.4byte	.LASF17
 1722 00c4 07       		.uleb128 0x7
 1723 00c5 04       		.byte	0x4
 1724 00c6 A5000000 		.4byte	0xa5
 1725 00ca 03       		.uleb128 0x3
 1726 00cb 3B020000 		.4byte	.LASF18
 1727 00cf 05       		.byte	0x5
 1728 00d0 7A       		.byte	0x7a
 1729 00d1 4C000000 		.4byte	0x4c
 1730 00d5 08       		.uleb128 0x8
 1731 00d6 27000000 		.4byte	.LASF22
 1732 00da 01       		.byte	0x1
 1733 00db 01       		.byte	0x1
 1734 00dc 24       		.byte	0x24
 1735 00dd F4000000 		.4byte	0xf4
 1736 00e1 09       		.uleb128 0x9
 1737 00e2 75020000 		.4byte	.LASF19
 1738 00e6 00       		.sleb128 0
 1739 00e7 09       		.uleb128 0x9
 1740 00e8 22030000 		.4byte	.LASF20
 1741 00ec 01       		.sleb128 1
 1742 00ed 09       		.uleb128 0x9
 1743 00ee 92000000 		.4byte	.LASF21
 1744 00f2 02       		.sleb128 2
 1745 00f3 00       		.byte	0
 1746 00f4 0A       		.uleb128 0xa
 1747 00f5 63726300 		.ascii	"crc\000"
 1748 00f9 01       		.byte	0x1
 1749 00fa 01       		.byte	0x1
 1750 00fb 25       		.byte	0x25
 1751 00fc 19010000 		.4byte	0x119
 1752 0100 09       		.uleb128 0x9
 1753 0101 7D000000 		.4byte	.LASF23
 1754 0105 00       		.sleb128 0
 1755 0106 09       		.uleb128 0x9
 1756 0107 00000000 		.4byte	.LASF24
 1757 010b 01       		.sleb128 1
 1758 010c 09       		.uleb128 0x9
 1759 010d 3E030000 		.4byte	.LASF25
 1760 0111 02       		.sleb128 2
 1761 0112 09       		.uleb128 0x9
 1762 0113 BA020000 		.4byte	.LASF26
 1763 0117 03       		.sleb128 3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 41


 1764 0118 00       		.byte	0
 1765 0119 0B       		.uleb128 0xb
 1766 011a 14000000 		.4byte	.LASF27
 1767 011e 01       		.byte	0x1
 1768 011f 29       		.byte	0x29
 1769 0120 00000000 		.4byte	.LFB63
 1770 0124 28000000 		.4byte	.LFE63-.LFB63
 1771 0128 01       		.uleb128 0x1
 1772 0129 9C       		.byte	0x9c
 1773 012a 0B       		.uleb128 0xb
 1774 012b C1000000 		.4byte	.LASF28
 1775 012f 01       		.byte	0x1
 1776 0130 33       		.byte	0x33
 1777 0131 00000000 		.4byte	.LFB64
 1778 0135 58000000 		.4byte	.LFE64-.LFB64
 1779 0139 01       		.uleb128 0x1
 1780 013a 9C       		.byte	0x9c
 1781 013b 0B       		.uleb128 0xb
 1782 013c FA030000 		.4byte	.LASF29
 1783 0140 01       		.byte	0x1
 1784 0141 44       		.byte	0x44
 1785 0142 00000000 		.4byte	.LFB65
 1786 0146 1C000000 		.4byte	.LFE65-.LFB65
 1787 014a 01       		.uleb128 0x1
 1788 014b 9C       		.byte	0x9c
 1789 014c 0C       		.uleb128 0xc
 1790 014d 82030000 		.4byte	.LASF30
 1791 0151 01       		.byte	0x1
 1792 0152 4B       		.byte	0x4b
 1793 0153 00000000 		.4byte	.LFB66
 1794 0157 38000000 		.4byte	.LFE66-.LFB66
 1795 015b 01       		.uleb128 0x1
 1796 015c 9C       		.byte	0x9c
 1797 015d 0D       		.uleb128 0xd
 1798 015e 59000000 		.4byte	.LASF34
 1799 0162 01       		.byte	0x1
 1800 0163 52       		.byte	0x52
 1801 0164 68000000 		.4byte	0x68
 1802 0168 00000000 		.4byte	.LFB67
 1803 016c 74020000 		.4byte	.LFE67-.LFB67
 1804 0170 01       		.uleb128 0x1
 1805 0171 9C       		.byte	0x9c
 1806 0172 B0010000 		.4byte	0x1b0
 1807 0176 0E       		.uleb128 0xe
 1808 0177 727800   		.ascii	"rx\000"
 1809 017a 01       		.byte	0x1
 1810 017b 54       		.byte	0x54
 1811 017c A5000000 		.4byte	0xa5
 1812 0180 02       		.uleb128 0x2
 1813 0181 91       		.byte	0x91
 1814 0182 76       		.sleb128 -10
 1815 0183 0F       		.uleb128 0xf
 1816 0184 B6000000 		.4byte	.LASF31
 1817 0188 01       		.byte	0x1
 1818 0189 55       		.byte	0x55
 1819 018a B0010000 		.4byte	0x1b0
 1820 018e 03       		.uleb128 0x3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 42


 1821 018f 91       		.byte	0x91
 1822 0190 887F     		.sleb128 -120
 1823 0192 0F       		.uleb128 0xf
 1824 0193 EA020000 		.4byte	.LASF32
 1825 0197 01       		.byte	0x1
 1826 0198 56       		.byte	0x56
 1827 0199 81000000 		.4byte	0x81
 1828 019d 02       		.uleb128 0x2
 1829 019e 91       		.byte	0x91
 1830 019f 77       		.sleb128 -9
 1831 01a0 0F       		.uleb128 0xf
 1832 01a1 14030000 		.4byte	.LASF33
 1833 01a5 01       		.byte	0x1
 1834 01a6 63       		.byte	0x63
 1835 01a7 CA000000 		.4byte	0xca
 1836 01ab 03       		.uleb128 0x3
 1837 01ac 91       		.byte	0x91
 1838 01ad 847F     		.sleb128 -124
 1839 01af 00       		.byte	0
 1840 01b0 10       		.uleb128 0x10
 1841 01b1 A5000000 		.4byte	0xa5
 1842 01b5 C0010000 		.4byte	0x1c0
 1843 01b9 11       		.uleb128 0x11
 1844 01ba BD000000 		.4byte	0xbd
 1845 01be 6B       		.byte	0x6b
 1846 01bf 00       		.byte	0
 1847 01c0 12       		.uleb128 0x12
 1848 01c1 42020000 		.4byte	.LASF41
 1849 01c5 01       		.byte	0x1
 1850 01c6 F2       		.byte	0xf2
 1851 01c7 00000000 		.4byte	.LFB68
 1852 01cb 48000000 		.4byte	.LFE68-.LFB68
 1853 01cf 01       		.uleb128 0x1
 1854 01d0 9C       		.byte	0x9c
 1855 01d1 13       		.uleb128 0x13
 1856 01d2 F8010000 		.4byte	.LASF35
 1857 01d6 01       		.byte	0x1
 1858 01d7 FE       		.byte	0xfe
 1859 01d8 00000000 		.4byte	.LFB69
 1860 01dc 38000000 		.4byte	.LFE69-.LFB69
 1861 01e0 01       		.uleb128 0x1
 1862 01e1 9C       		.byte	0x9c
 1863 01e2 10020000 		.4byte	0x210
 1864 01e6 14       		.uleb128 0x14
 1865 01e7 B6000000 		.4byte	.LASF31
 1866 01eb 01       		.byte	0x1
 1867 01ec FE       		.byte	0xfe
 1868 01ed C4000000 		.4byte	0xc4
 1869 01f1 02       		.uleb128 0x2
 1870 01f2 91       		.byte	0x91
 1871 01f3 6C       		.sleb128 -20
 1872 01f4 14       		.uleb128 0x14
 1873 01f5 EA020000 		.4byte	.LASF32
 1874 01f9 01       		.byte	0x1
 1875 01fa FE       		.byte	0xfe
 1876 01fb 81000000 		.4byte	0x81
 1877 01ff 02       		.uleb128 0x2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 43


 1878 0200 91       		.byte	0x91
 1879 0201 6B       		.sleb128 -21
 1880 0202 15       		.uleb128 0x15
 1881 0203 6900     		.ascii	"i\000"
 1882 0205 01       		.byte	0x1
 1883 0206 0001     		.2byte	0x100
 1884 0208 6F000000 		.4byte	0x6f
 1885 020c 02       		.uleb128 0x2
 1886 020d 91       		.byte	0x91
 1887 020e 74       		.sleb128 -12
 1888 020f 00       		.byte	0
 1889 0210 16       		.uleb128 0x16
 1890 0211 66020000 		.4byte	.LASF36
 1891 0215 01       		.byte	0x1
 1892 0216 0A01     		.2byte	0x10a
 1893 0218 00000000 		.4byte	.LFB70
 1894 021c C4010000 		.4byte	.LFE70-.LFB70
 1895 0220 01       		.uleb128 0x1
 1896 0221 9C       		.byte	0x9c
 1897 0222 70020000 		.4byte	0x270
 1898 0226 17       		.uleb128 0x17
 1899 0227 C5020000 		.4byte	.LASF37
 1900 022b 01       		.byte	0x1
 1901 022c 0A01     		.2byte	0x10a
 1902 022e A5000000 		.4byte	0xa5
 1903 0232 03       		.uleb128 0x3
 1904 0233 91       		.byte	0x91
 1905 0234 977F     		.sleb128 -105
 1906 0236 18       		.uleb128 0x18
 1907 0237 14040000 		.4byte	.LASF38
 1908 023b 01       		.byte	0x1
 1909 023c 0C01     		.2byte	0x10c
 1910 023e 81000000 		.4byte	0x81
 1911 0242 02       		.uleb128 0x2
 1912 0243 91       		.byte	0x91
 1913 0244 77       		.sleb128 -9
 1914 0245 18       		.uleb128 0x18
 1915 0246 92030000 		.4byte	.LASF39
 1916 024a 01       		.byte	0x1
 1917 024b 1D01     		.2byte	0x11d
 1918 024d 70020000 		.4byte	0x270
 1919 0251 03       		.uleb128 0x3
 1920 0252 91       		.byte	0x91
 1921 0253 9C7F     		.sleb128 -100
 1922 0255 15       		.uleb128 0x15
 1923 0256 6900     		.ascii	"i\000"
 1924 0258 01       		.byte	0x1
 1925 0259 1E01     		.2byte	0x11e
 1926 025b 68000000 		.4byte	0x68
 1927 025f 02       		.uleb128 0x2
 1928 0260 91       		.byte	0x91
 1929 0261 70       		.sleb128 -16
 1930 0262 15       		.uleb128 0x15
 1931 0263 6A00     		.ascii	"j\000"
 1932 0265 01       		.byte	0x1
 1933 0266 2901     		.2byte	0x129
 1934 0268 68000000 		.4byte	0x68
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 44


 1935 026c 02       		.uleb128 0x2
 1936 026d 91       		.byte	0x91
 1937 026e 6C       		.sleb128 -20
 1938 026f 00       		.byte	0
 1939 0270 10       		.uleb128 0x10
 1940 0271 6F000000 		.4byte	0x6f
 1941 0275 80020000 		.4byte	0x280
 1942 0279 11       		.uleb128 0x11
 1943 027a BD000000 		.4byte	0xbd
 1944 027e 13       		.byte	0x13
 1945 027f 00       		.byte	0
 1946 0280 19       		.uleb128 0x19
 1947 0281 07000000 		.4byte	.LASF46
 1948 0285 01       		.byte	0x1
 1949 0286 5C01     		.2byte	0x15c
 1950 0288 00000000 		.4byte	.LFB71
 1951 028c D8000000 		.4byte	.LFE71-.LFB71
 1952 0290 01       		.uleb128 0x1
 1953 0291 9C       		.byte	0x9c
 1954 0292 BD020000 		.4byte	0x2bd
 1955 0296 15       		.uleb128 0x15
 1956 0297 6900     		.ascii	"i\000"
 1957 0299 01       		.byte	0x1
 1958 029a 5D01     		.2byte	0x15d
 1959 029c 68000000 		.4byte	0x68
 1960 02a0 02       		.uleb128 0x2
 1961 02a1 91       		.byte	0x91
 1962 02a2 74       		.sleb128 -12
 1963 02a3 1A       		.uleb128 0x1a
 1964 02a4 1C000000 		.4byte	.LBB2
 1965 02a8 50000000 		.4byte	.LBE2-.LBB2
 1966 02ac 18       		.uleb128 0x18
 1967 02ad 8C000000 		.4byte	.LASF40
 1968 02b1 01       		.byte	0x1
 1969 02b2 6401     		.2byte	0x164
 1970 02b4 68000000 		.4byte	0x68
 1971 02b8 02       		.uleb128 0x2
 1972 02b9 91       		.byte	0x91
 1973 02ba 70       		.sleb128 -16
 1974 02bb 00       		.byte	0
 1975 02bc 00       		.byte	0
 1976 02bd 1B       		.uleb128 0x1b
 1977 02be D8010000 		.4byte	.LASF42
 1978 02c2 01       		.byte	0x1
 1979 02c3 7701     		.2byte	0x177
 1980 02c5 00000000 		.4byte	.LFB72
 1981 02c9 58000000 		.4byte	.LFE72-.LFB72
 1982 02cd 01       		.uleb128 0x1
 1983 02ce 9C       		.byte	0x9c
 1984 02cf 1C       		.uleb128 0x1c
 1985 02d0 2D000000 		.4byte	.LASF43
 1986 02d4 01       		.byte	0x1
 1987 02d5 9901     		.2byte	0x199
 1988 02d7 68000000 		.4byte	0x68
 1989 02db 00000000 		.4byte	.LFB73
 1990 02df 36000000 		.4byte	.LFE73-.LFB73
 1991 02e3 01       		.uleb128 0x1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 45


 1992 02e4 9C       		.byte	0x9c
 1993 02e5 15030000 		.4byte	0x315
 1994 02e9 18       		.uleb128 0x18
 1995 02ea BF020000 		.4byte	.LASF44
 1996 02ee 01       		.byte	0x1
 1997 02ef 9B01     		.2byte	0x19b
 1998 02f1 15030000 		.4byte	0x315
 1999 02f5 02       		.uleb128 0x2
 2000 02f6 91       		.byte	0x91
 2001 02f7 74       		.sleb128 -12
 2002 02f8 18       		.uleb128 0x18
 2003 02f9 C4030000 		.4byte	.LASF45
 2004 02fd 01       		.byte	0x1
 2005 02fe 9C01     		.2byte	0x19c
 2006 0300 15030000 		.4byte	0x315
 2007 0304 02       		.uleb128 0x2
 2008 0305 91       		.byte	0x91
 2009 0306 70       		.sleb128 -16
 2010 0307 15       		.uleb128 0x15
 2011 0308 6E00     		.ascii	"n\000"
 2012 030a 01       		.byte	0x1
 2013 030b 9E01     		.2byte	0x19e
 2014 030d 68000000 		.4byte	0x68
 2015 0311 02       		.uleb128 0x2
 2016 0312 91       		.byte	0x91
 2017 0313 6C       		.sleb128 -20
 2018 0314 00       		.byte	0
 2019 0315 1D       		.uleb128 0x1d
 2020 0316 68000000 		.4byte	0x68
 2021 031a 1E       		.uleb128 0x1e
 2022 031b 7A020000 		.4byte	.LASF47
 2023 031f 01       		.byte	0x1
 2024 0320 AA01     		.2byte	0x1aa
 2025 0322 00000000 		.4byte	.LFB74
 2026 0326 B0000000 		.4byte	.LFE74-.LFB74
 2027 032a 01       		.uleb128 0x1
 2028 032b 9C       		.byte	0x9c
 2029 032c 57030000 		.4byte	0x357
 2030 0330 15       		.uleb128 0x15
 2031 0331 6900     		.ascii	"i\000"
 2032 0333 01       		.byte	0x1
 2033 0334 AC01     		.2byte	0x1ac
 2034 0336 68000000 		.4byte	0x68
 2035 033a 02       		.uleb128 0x2
 2036 033b 91       		.byte	0x91
 2037 033c 74       		.sleb128 -12
 2038 033d 1A       		.uleb128 0x1a
 2039 033e 0C000000 		.4byte	.LBB3
 2040 0342 80000000 		.4byte	.LBE3-.LBB3
 2041 0346 18       		.uleb128 0x18
 2042 0347 14040000 		.4byte	.LASF38
 2043 034b 01       		.byte	0x1
 2044 034c AE01     		.2byte	0x1ae
 2045 034e 81000000 		.4byte	0x81
 2046 0352 02       		.uleb128 0x2
 2047 0353 91       		.byte	0x91
 2048 0354 73       		.sleb128 -13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 46


 2049 0355 00       		.byte	0
 2050 0356 00       		.byte	0
 2051 0357 1F       		.uleb128 0x1f
 2052 0358 6A000000 		.4byte	.LASF48
 2053 035c 01       		.byte	0x1
 2054 035d CB01     		.2byte	0x1cb
 2055 035f 00000000 		.4byte	.LFB75
 2056 0363 3C000000 		.4byte	.LFE75-.LFB75
 2057 0367 01       		.uleb128 0x1
 2058 0368 9C       		.byte	0x9c
 2059 0369 19       		.uleb128 0x19
 2060 036a EE010000 		.4byte	.LASF49
 2061 036e 01       		.byte	0x1
 2062 036f D201     		.2byte	0x1d2
 2063 0371 00000000 		.4byte	.LFB76
 2064 0375 38000000 		.4byte	.LFE76-.LFB76
 2065 0379 01       		.uleb128 0x1
 2066 037a 9C       		.byte	0x9c
 2067 037b 8D030000 		.4byte	0x38d
 2068 037f 15       		.uleb128 0x15
 2069 0380 6900     		.ascii	"i\000"
 2070 0382 01       		.byte	0x1
 2071 0383 D301     		.2byte	0x1d3
 2072 0385 68000000 		.4byte	0x68
 2073 0389 02       		.uleb128 0x2
 2074 038a 91       		.byte	0x91
 2075 038b 74       		.sleb128 -12
 2076 038c 00       		.byte	0
 2077 038d 20       		.uleb128 0x20
 2078 038e 5E000000 		.4byte	.LASF50
 2079 0392 01       		.byte	0x1
 2080 0393 DC01     		.2byte	0x1dc
 2081 0395 A3030000 		.4byte	0x3a3
 2082 0399 00000000 		.4byte	.LFB77
 2083 039d 60000000 		.4byte	.LFE77-.LFB77
 2084 03a1 01       		.uleb128 0x1
 2085 03a2 9C       		.byte	0x9c
 2086 03a3 02       		.uleb128 0x2
 2087 03a4 01       		.byte	0x1
 2088 03a5 02       		.byte	0x2
 2089 03a6 1C030000 		.4byte	.LASF51
 2090 03aa 21       		.uleb128 0x21
 2091 03ab 07040000 		.4byte	.LASF52
 2092 03af 06       		.byte	0x6
 2093 03b0 2A06     		.2byte	0x62a
 2094 03b2 B6030000 		.4byte	0x3b6
 2095 03b6 06       		.uleb128 0x6
 2096 03b7 76000000 		.4byte	0x76
 2097 03bb 10       		.uleb128 0x10
 2098 03bc 68000000 		.4byte	0x68
 2099 03c0 CC030000 		.4byte	0x3cc
 2100 03c4 22       		.uleb128 0x22
 2101 03c5 BD000000 		.4byte	0xbd
 2102 03c9 5F03     		.2byte	0x35f
 2103 03cb 00       		.byte	0
 2104 03cc 23       		.uleb128 0x23
 2105 03cd 46000000 		.4byte	.LASF53
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 47


 2106 03d1 01       		.byte	0x1
 2107 03d2 1E       		.byte	0x1e
 2108 03d3 BB030000 		.4byte	0x3bb
 2109 03d7 05       		.uleb128 0x5
 2110 03d8 03       		.byte	0x3
 2111 03d9 00000000 		.4byte	diffManEncodedData
 2112 03dd 10       		.uleb128 0x10
 2113 03de 81000000 		.4byte	0x81
 2114 03e2 ED030000 		.4byte	0x3ed
 2115 03e6 11       		.uleb128 0x11
 2116 03e7 BD000000 		.4byte	0xbd
 2117 03eb 6B       		.byte	0x6b
 2118 03ec 00       		.byte	0
 2119 03ed 23       		.uleb128 0x23
 2120 03ee 67030000 		.4byte	.LASF54
 2121 03f2 01       		.byte	0x1
 2122 03f3 1F       		.byte	0x1f
 2123 03f4 DD030000 		.4byte	0x3dd
 2124 03f8 05       		.uleb128 0x5
 2125 03f9 03       		.byte	0x3
 2126 03fa 00000000 		.4byte	diffManReceivedData
 2127 03fe 23       		.uleb128 0x23
 2128 03ff 7B030000 		.4byte	.LASF55
 2129 0403 01       		.byte	0x1
 2130 0404 20       		.byte	0x20
 2131 0405 B0010000 		.4byte	0x1b0
 2132 0409 05       		.uleb128 0x5
 2133 040a 03       		.byte	0x3
 2134 040b 00000000 		.4byte	rxChar
 2135 040f 23       		.uleb128 0x23
 2136 0410 96020000 		.4byte	.LASF56
 2137 0414 01       		.byte	0x1
 2138 0415 21       		.byte	0x21
 2139 0416 68000000 		.4byte	0x68
 2140 041a 05       		.uleb128 0x5
 2141 041b 03       		.byte	0x3
 2142 041c 00000000 		.4byte	receivedDataIndex
 2143 0420 23       		.uleb128 0x23
 2144 0421 27030000 		.4byte	.LASF57
 2145 0425 01       		.byte	0x1
 2146 0426 21       		.byte	0x21
 2147 0427 68000000 		.4byte	0x68
 2148 042b 05       		.uleb128 0x5
 2149 042c 03       		.byte	0x3
 2150 042d 00000000 		.4byte	receivedDataCount
 2151 0431 23       		.uleb128 0x23
 2152 0432 B7030000 		.4byte	.LASF58
 2153 0436 01       		.byte	0x1
 2154 0437 22       		.byte	0x22
 2155 0438 68000000 		.4byte	0x68
 2156 043c 05       		.uleb128 0x5
 2157 043d 03       		.byte	0x3
 2158 043e 00000000 		.4byte	halfBitIndex
 2159 0442 23       		.uleb128 0x23
 2160 0443 16020000 		.4byte	.LASF59
 2161 0447 01       		.byte	0x1
 2162 0448 22       		.byte	0x22
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 48


 2163 0449 68000000 		.4byte	0x68
 2164 044d 05       		.uleb128 0x5
 2165 044e 03       		.byte	0x3
 2166 044f 00000000 		.4byte	currentDataPos
 2167 0453 23       		.uleb128 0x23
 2168 0454 25020000 		.4byte	.LASF60
 2169 0458 01       		.byte	0x1
 2170 0459 22       		.byte	0x22
 2171 045a 68000000 		.4byte	0x68
 2172 045e 05       		.uleb128 0x5
 2173 045f 03       		.byte	0x3
 2174 0460 00000000 		.4byte	currentRXCharPosition
 2175 0464 23       		.uleb128 0x23
 2176 0465 D4030000 		.4byte	.LASF61
 2177 0469 01       		.byte	0x1
 2178 046a 22       		.byte	0x22
 2179 046b 68000000 		.4byte	0x68
 2180 046f 05       		.uleb128 0x5
 2181 0470 03       		.byte	0x3
 2182 0471 00000000 		.4byte	lengthOfData
 2183 0475 23       		.uleb128 0x23
 2184 0476 59030000 		.4byte	.LASF62
 2185 047a 01       		.byte	0x1
 2186 047b 22       		.byte	0x22
 2187 047c 68000000 		.4byte	0x68
 2188 0480 05       		.uleb128 0x5
 2189 0481 03       		.byte	0x3
 2190 0482 00000000 		.4byte	messageLength
 2191 0486 23       		.uleb128 0x23
 2192 0487 CA030000 		.4byte	.LASF63
 2193 048b 01       		.byte	0x1
 2194 048c 22       		.byte	0x22
 2195 048d 68000000 		.4byte	0x68
 2196 0491 05       		.uleb128 0x5
 2197 0492 03       		.byte	0x3
 2198 0493 00000000 		.4byte	headerCRC
 2199 0497 23       		.uleb128 0x23
 2200 0498 33010000 		.4byte	.LASF64
 2201 049c 01       		.byte	0x1
 2202 049d 22       		.byte	0x22
 2203 049e 68000000 		.4byte	0x68
 2204 04a2 05       		.uleb128 0x5
 2205 04a3 03       		.byte	0x3
 2206 04a4 00000000 		.4byte	TX_DESTINATION_ADDRESS
 2207 04a8 23       		.uleb128 0x23
 2208 04a9 24040000 		.4byte	.LASF65
 2209 04ad 01       		.byte	0x1
 2210 04ae 23       		.byte	0x23
 2211 04af A3030000 		.4byte	0x3a3
 2212 04b3 05       		.uleb128 0x5
 2213 04b4 03       		.byte	0x3
 2214 04b5 00000000 		.4byte	timerExpired
 2215 04b9 23       		.uleb128 0x23
 2216 04ba E1030000 		.4byte	.LASF66
 2217 04be 01       		.byte	0x1
 2218 04bf 23       		.byte	0x23
 2219 04c0 A3030000 		.4byte	0x3a3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 49


 2220 04c4 05       		.uleb128 0x5
 2221 04c5 03       		.byte	0x3
 2222 04c6 00000000 		.4byte	dataTransmissionComplete
 2223 04ca 23       		.uleb128 0x23
 2224 04cb 31040000 		.4byte	.LASF67
 2225 04cf 01       		.byte	0x1
 2226 04d0 23       		.byte	0x23
 2227 04d1 A3030000 		.4byte	0x3a3
 2228 04d5 05       		.uleb128 0x5
 2229 04d6 03       		.byte	0x3
 2230 04d7 00000000 		.4byte	powerOnEdge
 2231 04db 23       		.uleb128 0x23
 2232 04dc 4D030000 		.4byte	.LASF68
 2233 04e0 01       		.byte	0x1
 2234 04e1 23       		.byte	0x23
 2235 04e2 A3030000 		.4byte	0x3a3
 2236 04e6 05       		.uleb128 0x5
 2237 04e7 03       		.byte	0x3
 2238 04e8 00000000 		.4byte	headerValid
 2239 04ec 23       		.uleb128 0x23
 2240 04ed A3000000 		.4byte	.LASF69
 2241 04f1 01       		.byte	0x1
 2242 04f2 24       		.byte	0x24
 2243 04f3 D5000000 		.4byte	0xd5
 2244 04f7 05       		.uleb128 0x5
 2245 04f8 03       		.byte	0x3
 2246 04f9 00000000 		.4byte	networkState
 2247 04fd 23       		.uleb128 0x23
 2248 04fe 74000000 		.4byte	.LASF70
 2249 0502 01       		.byte	0x1
 2250 0503 25       		.byte	0x25
 2251 0504 F4000000 		.4byte	0xf4
 2252 0508 05       		.uleb128 0x5
 2253 0509 03       		.byte	0x3
 2254 050a 00000000 		.4byte	crcState
 2255 050e 23       		.uleb128 0x23
 2256 050f D4020000 		.4byte	.LASF71
 2257 0513 01       		.byte	0x1
 2258 0514 27       		.byte	0x27
 2259 0515 A5000000 		.4byte	0xa5
 2260 0519 05       		.uleb128 0x5
 2261 051a 03       		.byte	0x3
 2262 051b 00000000 		.4byte	receivedChar
 2263 051f 00       		.byte	0
 2264              		.section	.debug_abbrev,"",%progbits
 2265              	.Ldebug_abbrev0:
 2266 0000 01       		.uleb128 0x1
 2267 0001 11       		.uleb128 0x11
 2268 0002 01       		.byte	0x1
 2269 0003 25       		.uleb128 0x25
 2270 0004 0E       		.uleb128 0xe
 2271 0005 13       		.uleb128 0x13
 2272 0006 0B       		.uleb128 0xb
 2273 0007 03       		.uleb128 0x3
 2274 0008 0E       		.uleb128 0xe
 2275 0009 1B       		.uleb128 0x1b
 2276 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 50


 2277 000b 55       		.uleb128 0x55
 2278 000c 17       		.uleb128 0x17
 2279 000d 11       		.uleb128 0x11
 2280 000e 01       		.uleb128 0x1
 2281 000f 10       		.uleb128 0x10
 2282 0010 17       		.uleb128 0x17
 2283 0011 00       		.byte	0
 2284 0012 00       		.byte	0
 2285 0013 02       		.uleb128 0x2
 2286 0014 24       		.uleb128 0x24
 2287 0015 00       		.byte	0
 2288 0016 0B       		.uleb128 0xb
 2289 0017 0B       		.uleb128 0xb
 2290 0018 3E       		.uleb128 0x3e
 2291 0019 0B       		.uleb128 0xb
 2292 001a 03       		.uleb128 0x3
 2293 001b 0E       		.uleb128 0xe
 2294 001c 00       		.byte	0
 2295 001d 00       		.byte	0
 2296 001e 03       		.uleb128 0x3
 2297 001f 16       		.uleb128 0x16
 2298 0020 00       		.byte	0
 2299 0021 03       		.uleb128 0x3
 2300 0022 0E       		.uleb128 0xe
 2301 0023 3A       		.uleb128 0x3a
 2302 0024 0B       		.uleb128 0xb
 2303 0025 3B       		.uleb128 0x3b
 2304 0026 0B       		.uleb128 0xb
 2305 0027 49       		.uleb128 0x49
 2306 0028 13       		.uleb128 0x13
 2307 0029 00       		.byte	0
 2308 002a 00       		.byte	0
 2309 002b 04       		.uleb128 0x4
 2310 002c 24       		.uleb128 0x24
 2311 002d 00       		.byte	0
 2312 002e 0B       		.uleb128 0xb
 2313 002f 0B       		.uleb128 0xb
 2314 0030 3E       		.uleb128 0x3e
 2315 0031 0B       		.uleb128 0xb
 2316 0032 03       		.uleb128 0x3
 2317 0033 08       		.uleb128 0x8
 2318 0034 00       		.byte	0
 2319 0035 00       		.byte	0
 2320 0036 05       		.uleb128 0x5
 2321 0037 16       		.uleb128 0x16
 2322 0038 00       		.byte	0
 2323 0039 03       		.uleb128 0x3
 2324 003a 0E       		.uleb128 0xe
 2325 003b 3A       		.uleb128 0x3a
 2326 003c 0B       		.uleb128 0xb
 2327 003d 3B       		.uleb128 0x3b
 2328 003e 05       		.uleb128 0x5
 2329 003f 49       		.uleb128 0x49
 2330 0040 13       		.uleb128 0x13
 2331 0041 00       		.byte	0
 2332 0042 00       		.byte	0
 2333 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 51


 2334 0044 35       		.uleb128 0x35
 2335 0045 00       		.byte	0
 2336 0046 49       		.uleb128 0x49
 2337 0047 13       		.uleb128 0x13
 2338 0048 00       		.byte	0
 2339 0049 00       		.byte	0
 2340 004a 07       		.uleb128 0x7
 2341 004b 0F       		.uleb128 0xf
 2342 004c 00       		.byte	0
 2343 004d 0B       		.uleb128 0xb
 2344 004e 0B       		.uleb128 0xb
 2345 004f 49       		.uleb128 0x49
 2346 0050 13       		.uleb128 0x13
 2347 0051 00       		.byte	0
 2348 0052 00       		.byte	0
 2349 0053 08       		.uleb128 0x8
 2350 0054 04       		.uleb128 0x4
 2351 0055 01       		.byte	0x1
 2352 0056 03       		.uleb128 0x3
 2353 0057 0E       		.uleb128 0xe
 2354 0058 0B       		.uleb128 0xb
 2355 0059 0B       		.uleb128 0xb
 2356 005a 3A       		.uleb128 0x3a
 2357 005b 0B       		.uleb128 0xb
 2358 005c 3B       		.uleb128 0x3b
 2359 005d 0B       		.uleb128 0xb
 2360 005e 01       		.uleb128 0x1
 2361 005f 13       		.uleb128 0x13
 2362 0060 00       		.byte	0
 2363 0061 00       		.byte	0
 2364 0062 09       		.uleb128 0x9
 2365 0063 28       		.uleb128 0x28
 2366 0064 00       		.byte	0
 2367 0065 03       		.uleb128 0x3
 2368 0066 0E       		.uleb128 0xe
 2369 0067 1C       		.uleb128 0x1c
 2370 0068 0D       		.uleb128 0xd
 2371 0069 00       		.byte	0
 2372 006a 00       		.byte	0
 2373 006b 0A       		.uleb128 0xa
 2374 006c 04       		.uleb128 0x4
 2375 006d 01       		.byte	0x1
 2376 006e 03       		.uleb128 0x3
 2377 006f 08       		.uleb128 0x8
 2378 0070 0B       		.uleb128 0xb
 2379 0071 0B       		.uleb128 0xb
 2380 0072 3A       		.uleb128 0x3a
 2381 0073 0B       		.uleb128 0xb
 2382 0074 3B       		.uleb128 0x3b
 2383 0075 0B       		.uleb128 0xb
 2384 0076 01       		.uleb128 0x1
 2385 0077 13       		.uleb128 0x13
 2386 0078 00       		.byte	0
 2387 0079 00       		.byte	0
 2388 007a 0B       		.uleb128 0xb
 2389 007b 2E       		.uleb128 0x2e
 2390 007c 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 52


 2391 007d 3F       		.uleb128 0x3f
 2392 007e 19       		.uleb128 0x19
 2393 007f 03       		.uleb128 0x3
 2394 0080 0E       		.uleb128 0xe
 2395 0081 3A       		.uleb128 0x3a
 2396 0082 0B       		.uleb128 0xb
 2397 0083 3B       		.uleb128 0x3b
 2398 0084 0B       		.uleb128 0xb
 2399 0085 27       		.uleb128 0x27
 2400 0086 19       		.uleb128 0x19
 2401 0087 11       		.uleb128 0x11
 2402 0088 01       		.uleb128 0x1
 2403 0089 12       		.uleb128 0x12
 2404 008a 06       		.uleb128 0x6
 2405 008b 40       		.uleb128 0x40
 2406 008c 18       		.uleb128 0x18
 2407 008d 9642     		.uleb128 0x2116
 2408 008f 19       		.uleb128 0x19
 2409 0090 00       		.byte	0
 2410 0091 00       		.byte	0
 2411 0092 0C       		.uleb128 0xc
 2412 0093 2E       		.uleb128 0x2e
 2413 0094 00       		.byte	0
 2414 0095 3F       		.uleb128 0x3f
 2415 0096 19       		.uleb128 0x19
 2416 0097 03       		.uleb128 0x3
 2417 0098 0E       		.uleb128 0xe
 2418 0099 3A       		.uleb128 0x3a
 2419 009a 0B       		.uleb128 0xb
 2420 009b 3B       		.uleb128 0x3b
 2421 009c 0B       		.uleb128 0xb
 2422 009d 27       		.uleb128 0x27
 2423 009e 19       		.uleb128 0x19
 2424 009f 11       		.uleb128 0x11
 2425 00a0 01       		.uleb128 0x1
 2426 00a1 12       		.uleb128 0x12
 2427 00a2 06       		.uleb128 0x6
 2428 00a3 40       		.uleb128 0x40
 2429 00a4 18       		.uleb128 0x18
 2430 00a5 9742     		.uleb128 0x2117
 2431 00a7 19       		.uleb128 0x19
 2432 00a8 00       		.byte	0
 2433 00a9 00       		.byte	0
 2434 00aa 0D       		.uleb128 0xd
 2435 00ab 2E       		.uleb128 0x2e
 2436 00ac 01       		.byte	0x1
 2437 00ad 3F       		.uleb128 0x3f
 2438 00ae 19       		.uleb128 0x19
 2439 00af 03       		.uleb128 0x3
 2440 00b0 0E       		.uleb128 0xe
 2441 00b1 3A       		.uleb128 0x3a
 2442 00b2 0B       		.uleb128 0xb
 2443 00b3 3B       		.uleb128 0x3b
 2444 00b4 0B       		.uleb128 0xb
 2445 00b5 49       		.uleb128 0x49
 2446 00b6 13       		.uleb128 0x13
 2447 00b7 11       		.uleb128 0x11
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 53


 2448 00b8 01       		.uleb128 0x1
 2449 00b9 12       		.uleb128 0x12
 2450 00ba 06       		.uleb128 0x6
 2451 00bb 40       		.uleb128 0x40
 2452 00bc 18       		.uleb128 0x18
 2453 00bd 9642     		.uleb128 0x2116
 2454 00bf 19       		.uleb128 0x19
 2455 00c0 01       		.uleb128 0x1
 2456 00c1 13       		.uleb128 0x13
 2457 00c2 00       		.byte	0
 2458 00c3 00       		.byte	0
 2459 00c4 0E       		.uleb128 0xe
 2460 00c5 34       		.uleb128 0x34
 2461 00c6 00       		.byte	0
 2462 00c7 03       		.uleb128 0x3
 2463 00c8 08       		.uleb128 0x8
 2464 00c9 3A       		.uleb128 0x3a
 2465 00ca 0B       		.uleb128 0xb
 2466 00cb 3B       		.uleb128 0x3b
 2467 00cc 0B       		.uleb128 0xb
 2468 00cd 49       		.uleb128 0x49
 2469 00ce 13       		.uleb128 0x13
 2470 00cf 02       		.uleb128 0x2
 2471 00d0 18       		.uleb128 0x18
 2472 00d1 00       		.byte	0
 2473 00d2 00       		.byte	0
 2474 00d3 0F       		.uleb128 0xf
 2475 00d4 34       		.uleb128 0x34
 2476 00d5 00       		.byte	0
 2477 00d6 03       		.uleb128 0x3
 2478 00d7 0E       		.uleb128 0xe
 2479 00d8 3A       		.uleb128 0x3a
 2480 00d9 0B       		.uleb128 0xb
 2481 00da 3B       		.uleb128 0x3b
 2482 00db 0B       		.uleb128 0xb
 2483 00dc 49       		.uleb128 0x49
 2484 00dd 13       		.uleb128 0x13
 2485 00de 02       		.uleb128 0x2
 2486 00df 18       		.uleb128 0x18
 2487 00e0 00       		.byte	0
 2488 00e1 00       		.byte	0
 2489 00e2 10       		.uleb128 0x10
 2490 00e3 01       		.uleb128 0x1
 2491 00e4 01       		.byte	0x1
 2492 00e5 49       		.uleb128 0x49
 2493 00e6 13       		.uleb128 0x13
 2494 00e7 01       		.uleb128 0x1
 2495 00e8 13       		.uleb128 0x13
 2496 00e9 00       		.byte	0
 2497 00ea 00       		.byte	0
 2498 00eb 11       		.uleb128 0x11
 2499 00ec 21       		.uleb128 0x21
 2500 00ed 00       		.byte	0
 2501 00ee 49       		.uleb128 0x49
 2502 00ef 13       		.uleb128 0x13
 2503 00f0 2F       		.uleb128 0x2f
 2504 00f1 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 54


 2505 00f2 00       		.byte	0
 2506 00f3 00       		.byte	0
 2507 00f4 12       		.uleb128 0x12
 2508 00f5 2E       		.uleb128 0x2e
 2509 00f6 00       		.byte	0
 2510 00f7 3F       		.uleb128 0x3f
 2511 00f8 19       		.uleb128 0x19
 2512 00f9 03       		.uleb128 0x3
 2513 00fa 0E       		.uleb128 0xe
 2514 00fb 3A       		.uleb128 0x3a
 2515 00fc 0B       		.uleb128 0xb
 2516 00fd 3B       		.uleb128 0x3b
 2517 00fe 0B       		.uleb128 0xb
 2518 00ff 11       		.uleb128 0x11
 2519 0100 01       		.uleb128 0x1
 2520 0101 12       		.uleb128 0x12
 2521 0102 06       		.uleb128 0x6
 2522 0103 40       		.uleb128 0x40
 2523 0104 18       		.uleb128 0x18
 2524 0105 9742     		.uleb128 0x2117
 2525 0107 19       		.uleb128 0x19
 2526 0108 00       		.byte	0
 2527 0109 00       		.byte	0
 2528 010a 13       		.uleb128 0x13
 2529 010b 2E       		.uleb128 0x2e
 2530 010c 01       		.byte	0x1
 2531 010d 3F       		.uleb128 0x3f
 2532 010e 19       		.uleb128 0x19
 2533 010f 03       		.uleb128 0x3
 2534 0110 0E       		.uleb128 0xe
 2535 0111 3A       		.uleb128 0x3a
 2536 0112 0B       		.uleb128 0xb
 2537 0113 3B       		.uleb128 0x3b
 2538 0114 0B       		.uleb128 0xb
 2539 0115 27       		.uleb128 0x27
 2540 0116 19       		.uleb128 0x19
 2541 0117 11       		.uleb128 0x11
 2542 0118 01       		.uleb128 0x1
 2543 0119 12       		.uleb128 0x12
 2544 011a 06       		.uleb128 0x6
 2545 011b 40       		.uleb128 0x40
 2546 011c 18       		.uleb128 0x18
 2547 011d 9642     		.uleb128 0x2116
 2548 011f 19       		.uleb128 0x19
 2549 0120 01       		.uleb128 0x1
 2550 0121 13       		.uleb128 0x13
 2551 0122 00       		.byte	0
 2552 0123 00       		.byte	0
 2553 0124 14       		.uleb128 0x14
 2554 0125 05       		.uleb128 0x5
 2555 0126 00       		.byte	0
 2556 0127 03       		.uleb128 0x3
 2557 0128 0E       		.uleb128 0xe
 2558 0129 3A       		.uleb128 0x3a
 2559 012a 0B       		.uleb128 0xb
 2560 012b 3B       		.uleb128 0x3b
 2561 012c 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 55


 2562 012d 49       		.uleb128 0x49
 2563 012e 13       		.uleb128 0x13
 2564 012f 02       		.uleb128 0x2
 2565 0130 18       		.uleb128 0x18
 2566 0131 00       		.byte	0
 2567 0132 00       		.byte	0
 2568 0133 15       		.uleb128 0x15
 2569 0134 34       		.uleb128 0x34
 2570 0135 00       		.byte	0
 2571 0136 03       		.uleb128 0x3
 2572 0137 08       		.uleb128 0x8
 2573 0138 3A       		.uleb128 0x3a
 2574 0139 0B       		.uleb128 0xb
 2575 013a 3B       		.uleb128 0x3b
 2576 013b 05       		.uleb128 0x5
 2577 013c 49       		.uleb128 0x49
 2578 013d 13       		.uleb128 0x13
 2579 013e 02       		.uleb128 0x2
 2580 013f 18       		.uleb128 0x18
 2581 0140 00       		.byte	0
 2582 0141 00       		.byte	0
 2583 0142 16       		.uleb128 0x16
 2584 0143 2E       		.uleb128 0x2e
 2585 0144 01       		.byte	0x1
 2586 0145 3F       		.uleb128 0x3f
 2587 0146 19       		.uleb128 0x19
 2588 0147 03       		.uleb128 0x3
 2589 0148 0E       		.uleb128 0xe
 2590 0149 3A       		.uleb128 0x3a
 2591 014a 0B       		.uleb128 0xb
 2592 014b 3B       		.uleb128 0x3b
 2593 014c 05       		.uleb128 0x5
 2594 014d 27       		.uleb128 0x27
 2595 014e 19       		.uleb128 0x19
 2596 014f 11       		.uleb128 0x11
 2597 0150 01       		.uleb128 0x1
 2598 0151 12       		.uleb128 0x12
 2599 0152 06       		.uleb128 0x6
 2600 0153 40       		.uleb128 0x40
 2601 0154 18       		.uleb128 0x18
 2602 0155 9742     		.uleb128 0x2117
 2603 0157 19       		.uleb128 0x19
 2604 0158 01       		.uleb128 0x1
 2605 0159 13       		.uleb128 0x13
 2606 015a 00       		.byte	0
 2607 015b 00       		.byte	0
 2608 015c 17       		.uleb128 0x17
 2609 015d 05       		.uleb128 0x5
 2610 015e 00       		.byte	0
 2611 015f 03       		.uleb128 0x3
 2612 0160 0E       		.uleb128 0xe
 2613 0161 3A       		.uleb128 0x3a
 2614 0162 0B       		.uleb128 0xb
 2615 0163 3B       		.uleb128 0x3b
 2616 0164 05       		.uleb128 0x5
 2617 0165 49       		.uleb128 0x49
 2618 0166 13       		.uleb128 0x13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 56


 2619 0167 02       		.uleb128 0x2
 2620 0168 18       		.uleb128 0x18
 2621 0169 00       		.byte	0
 2622 016a 00       		.byte	0
 2623 016b 18       		.uleb128 0x18
 2624 016c 34       		.uleb128 0x34
 2625 016d 00       		.byte	0
 2626 016e 03       		.uleb128 0x3
 2627 016f 0E       		.uleb128 0xe
 2628 0170 3A       		.uleb128 0x3a
 2629 0171 0B       		.uleb128 0xb
 2630 0172 3B       		.uleb128 0x3b
 2631 0173 05       		.uleb128 0x5
 2632 0174 49       		.uleb128 0x49
 2633 0175 13       		.uleb128 0x13
 2634 0176 02       		.uleb128 0x2
 2635 0177 18       		.uleb128 0x18
 2636 0178 00       		.byte	0
 2637 0179 00       		.byte	0
 2638 017a 19       		.uleb128 0x19
 2639 017b 2E       		.uleb128 0x2e
 2640 017c 01       		.byte	0x1
 2641 017d 3F       		.uleb128 0x3f
 2642 017e 19       		.uleb128 0x19
 2643 017f 03       		.uleb128 0x3
 2644 0180 0E       		.uleb128 0xe
 2645 0181 3A       		.uleb128 0x3a
 2646 0182 0B       		.uleb128 0xb
 2647 0183 3B       		.uleb128 0x3b
 2648 0184 05       		.uleb128 0x5
 2649 0185 11       		.uleb128 0x11
 2650 0186 01       		.uleb128 0x1
 2651 0187 12       		.uleb128 0x12
 2652 0188 06       		.uleb128 0x6
 2653 0189 40       		.uleb128 0x40
 2654 018a 18       		.uleb128 0x18
 2655 018b 9642     		.uleb128 0x2116
 2656 018d 19       		.uleb128 0x19
 2657 018e 01       		.uleb128 0x1
 2658 018f 13       		.uleb128 0x13
 2659 0190 00       		.byte	0
 2660 0191 00       		.byte	0
 2661 0192 1A       		.uleb128 0x1a
 2662 0193 0B       		.uleb128 0xb
 2663 0194 01       		.byte	0x1
 2664 0195 11       		.uleb128 0x11
 2665 0196 01       		.uleb128 0x1
 2666 0197 12       		.uleb128 0x12
 2667 0198 06       		.uleb128 0x6
 2668 0199 00       		.byte	0
 2669 019a 00       		.byte	0
 2670 019b 1B       		.uleb128 0x1b
 2671 019c 2E       		.uleb128 0x2e
 2672 019d 00       		.byte	0
 2673 019e 3F       		.uleb128 0x3f
 2674 019f 19       		.uleb128 0x19
 2675 01a0 03       		.uleb128 0x3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 57


 2676 01a1 0E       		.uleb128 0xe
 2677 01a2 3A       		.uleb128 0x3a
 2678 01a3 0B       		.uleb128 0xb
 2679 01a4 3B       		.uleb128 0x3b
 2680 01a5 05       		.uleb128 0x5
 2681 01a6 11       		.uleb128 0x11
 2682 01a7 01       		.uleb128 0x1
 2683 01a8 12       		.uleb128 0x12
 2684 01a9 06       		.uleb128 0x6
 2685 01aa 40       		.uleb128 0x40
 2686 01ab 18       		.uleb128 0x18
 2687 01ac 9642     		.uleb128 0x2116
 2688 01ae 19       		.uleb128 0x19
 2689 01af 00       		.byte	0
 2690 01b0 00       		.byte	0
 2691 01b1 1C       		.uleb128 0x1c
 2692 01b2 2E       		.uleb128 0x2e
 2693 01b3 01       		.byte	0x1
 2694 01b4 3F       		.uleb128 0x3f
 2695 01b5 19       		.uleb128 0x19
 2696 01b6 03       		.uleb128 0x3
 2697 01b7 0E       		.uleb128 0xe
 2698 01b8 3A       		.uleb128 0x3a
 2699 01b9 0B       		.uleb128 0xb
 2700 01ba 3B       		.uleb128 0x3b
 2701 01bb 05       		.uleb128 0x5
 2702 01bc 49       		.uleb128 0x49
 2703 01bd 13       		.uleb128 0x13
 2704 01be 11       		.uleb128 0x11
 2705 01bf 01       		.uleb128 0x1
 2706 01c0 12       		.uleb128 0x12
 2707 01c1 06       		.uleb128 0x6
 2708 01c2 40       		.uleb128 0x40
 2709 01c3 18       		.uleb128 0x18
 2710 01c4 9642     		.uleb128 0x2116
 2711 01c6 19       		.uleb128 0x19
 2712 01c7 01       		.uleb128 0x1
 2713 01c8 13       		.uleb128 0x13
 2714 01c9 00       		.byte	0
 2715 01ca 00       		.byte	0
 2716 01cb 1D       		.uleb128 0x1d
 2717 01cc 26       		.uleb128 0x26
 2718 01cd 00       		.byte	0
 2719 01ce 49       		.uleb128 0x49
 2720 01cf 13       		.uleb128 0x13
 2721 01d0 00       		.byte	0
 2722 01d1 00       		.byte	0
 2723 01d2 1E       		.uleb128 0x1e
 2724 01d3 2E       		.uleb128 0x2e
 2725 01d4 01       		.byte	0x1
 2726 01d5 3F       		.uleb128 0x3f
 2727 01d6 19       		.uleb128 0x19
 2728 01d7 03       		.uleb128 0x3
 2729 01d8 0E       		.uleb128 0xe
 2730 01d9 3A       		.uleb128 0x3a
 2731 01da 0B       		.uleb128 0xb
 2732 01db 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 58


 2733 01dc 05       		.uleb128 0x5
 2734 01dd 11       		.uleb128 0x11
 2735 01de 01       		.uleb128 0x1
 2736 01df 12       		.uleb128 0x12
 2737 01e0 06       		.uleb128 0x6
 2738 01e1 40       		.uleb128 0x40
 2739 01e2 18       		.uleb128 0x18
 2740 01e3 9742     		.uleb128 0x2117
 2741 01e5 19       		.uleb128 0x19
 2742 01e6 01       		.uleb128 0x1
 2743 01e7 13       		.uleb128 0x13
 2744 01e8 00       		.byte	0
 2745 01e9 00       		.byte	0
 2746 01ea 1F       		.uleb128 0x1f
 2747 01eb 2E       		.uleb128 0x2e
 2748 01ec 00       		.byte	0
 2749 01ed 3F       		.uleb128 0x3f
 2750 01ee 19       		.uleb128 0x19
 2751 01ef 03       		.uleb128 0x3
 2752 01f0 0E       		.uleb128 0xe
 2753 01f1 3A       		.uleb128 0x3a
 2754 01f2 0B       		.uleb128 0xb
 2755 01f3 3B       		.uleb128 0x3b
 2756 01f4 05       		.uleb128 0x5
 2757 01f5 11       		.uleb128 0x11
 2758 01f6 01       		.uleb128 0x1
 2759 01f7 12       		.uleb128 0x12
 2760 01f8 06       		.uleb128 0x6
 2761 01f9 40       		.uleb128 0x40
 2762 01fa 18       		.uleb128 0x18
 2763 01fb 9742     		.uleb128 0x2117
 2764 01fd 19       		.uleb128 0x19
 2765 01fe 00       		.byte	0
 2766 01ff 00       		.byte	0
 2767 0200 20       		.uleb128 0x20
 2768 0201 2E       		.uleb128 0x2e
 2769 0202 00       		.byte	0
 2770 0203 3F       		.uleb128 0x3f
 2771 0204 19       		.uleb128 0x19
 2772 0205 03       		.uleb128 0x3
 2773 0206 0E       		.uleb128 0xe
 2774 0207 3A       		.uleb128 0x3a
 2775 0208 0B       		.uleb128 0xb
 2776 0209 3B       		.uleb128 0x3b
 2777 020a 05       		.uleb128 0x5
 2778 020b 49       		.uleb128 0x49
 2779 020c 13       		.uleb128 0x13
 2780 020d 11       		.uleb128 0x11
 2781 020e 01       		.uleb128 0x1
 2782 020f 12       		.uleb128 0x12
 2783 0210 06       		.uleb128 0x6
 2784 0211 40       		.uleb128 0x40
 2785 0212 18       		.uleb128 0x18
 2786 0213 9642     		.uleb128 0x2116
 2787 0215 19       		.uleb128 0x19
 2788 0216 00       		.byte	0
 2789 0217 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 59


 2790 0218 21       		.uleb128 0x21
 2791 0219 34       		.uleb128 0x34
 2792 021a 00       		.byte	0
 2793 021b 03       		.uleb128 0x3
 2794 021c 0E       		.uleb128 0xe
 2795 021d 3A       		.uleb128 0x3a
 2796 021e 0B       		.uleb128 0xb
 2797 021f 3B       		.uleb128 0x3b
 2798 0220 05       		.uleb128 0x5
 2799 0221 49       		.uleb128 0x49
 2800 0222 13       		.uleb128 0x13
 2801 0223 3F       		.uleb128 0x3f
 2802 0224 19       		.uleb128 0x19
 2803 0225 3C       		.uleb128 0x3c
 2804 0226 19       		.uleb128 0x19
 2805 0227 00       		.byte	0
 2806 0228 00       		.byte	0
 2807 0229 22       		.uleb128 0x22
 2808 022a 21       		.uleb128 0x21
 2809 022b 00       		.byte	0
 2810 022c 49       		.uleb128 0x49
 2811 022d 13       		.uleb128 0x13
 2812 022e 2F       		.uleb128 0x2f
 2813 022f 05       		.uleb128 0x5
 2814 0230 00       		.byte	0
 2815 0231 00       		.byte	0
 2816 0232 23       		.uleb128 0x23
 2817 0233 34       		.uleb128 0x34
 2818 0234 00       		.byte	0
 2819 0235 03       		.uleb128 0x3
 2820 0236 0E       		.uleb128 0xe
 2821 0237 3A       		.uleb128 0x3a
 2822 0238 0B       		.uleb128 0xb
 2823 0239 3B       		.uleb128 0x3b
 2824 023a 0B       		.uleb128 0xb
 2825 023b 49       		.uleb128 0x49
 2826 023c 13       		.uleb128 0x13
 2827 023d 3F       		.uleb128 0x3f
 2828 023e 19       		.uleb128 0x19
 2829 023f 02       		.uleb128 0x2
 2830 0240 18       		.uleb128 0x18
 2831 0241 00       		.byte	0
 2832 0242 00       		.byte	0
 2833 0243 00       		.byte	0
 2834              		.section	.debug_aranges,"",%progbits
 2835 0000 8C000000 		.4byte	0x8c
 2836 0004 0200     		.2byte	0x2
 2837 0006 00000000 		.4byte	.Ldebug_info0
 2838 000a 04       		.byte	0x4
 2839 000b 00       		.byte	0
 2840 000c 0000     		.2byte	0
 2841 000e 0000     		.2byte	0
 2842 0010 00000000 		.4byte	.LFB63
 2843 0014 28000000 		.4byte	.LFE63-.LFB63
 2844 0018 00000000 		.4byte	.LFB64
 2845 001c 58000000 		.4byte	.LFE64-.LFB64
 2846 0020 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 60


 2847 0024 1C000000 		.4byte	.LFE65-.LFB65
 2848 0028 00000000 		.4byte	.LFB66
 2849 002c 38000000 		.4byte	.LFE66-.LFB66
 2850 0030 00000000 		.4byte	.LFB67
 2851 0034 74020000 		.4byte	.LFE67-.LFB67
 2852 0038 00000000 		.4byte	.LFB68
 2853 003c 48000000 		.4byte	.LFE68-.LFB68
 2854 0040 00000000 		.4byte	.LFB69
 2855 0044 38000000 		.4byte	.LFE69-.LFB69
 2856 0048 00000000 		.4byte	.LFB70
 2857 004c C4010000 		.4byte	.LFE70-.LFB70
 2858 0050 00000000 		.4byte	.LFB71
 2859 0054 D8000000 		.4byte	.LFE71-.LFB71
 2860 0058 00000000 		.4byte	.LFB72
 2861 005c 58000000 		.4byte	.LFE72-.LFB72
 2862 0060 00000000 		.4byte	.LFB73
 2863 0064 36000000 		.4byte	.LFE73-.LFB73
 2864 0068 00000000 		.4byte	.LFB74
 2865 006c B0000000 		.4byte	.LFE74-.LFB74
 2866 0070 00000000 		.4byte	.LFB75
 2867 0074 3C000000 		.4byte	.LFE75-.LFB75
 2868 0078 00000000 		.4byte	.LFB76
 2869 007c 38000000 		.4byte	.LFE76-.LFB76
 2870 0080 00000000 		.4byte	.LFB77
 2871 0084 60000000 		.4byte	.LFE77-.LFB77
 2872 0088 00000000 		.4byte	0
 2873 008c 00000000 		.4byte	0
 2874              		.section	.debug_ranges,"",%progbits
 2875              	.Ldebug_ranges0:
 2876 0000 00000000 		.4byte	.LFB63
 2877 0004 28000000 		.4byte	.LFE63
 2878 0008 00000000 		.4byte	.LFB64
 2879 000c 58000000 		.4byte	.LFE64
 2880 0010 00000000 		.4byte	.LFB65
 2881 0014 1C000000 		.4byte	.LFE65
 2882 0018 00000000 		.4byte	.LFB66
 2883 001c 38000000 		.4byte	.LFE66
 2884 0020 00000000 		.4byte	.LFB67
 2885 0024 74020000 		.4byte	.LFE67
 2886 0028 00000000 		.4byte	.LFB68
 2887 002c 48000000 		.4byte	.LFE68
 2888 0030 00000000 		.4byte	.LFB69
 2889 0034 38000000 		.4byte	.LFE69
 2890 0038 00000000 		.4byte	.LFB70
 2891 003c C4010000 		.4byte	.LFE70
 2892 0040 00000000 		.4byte	.LFB71
 2893 0044 D8000000 		.4byte	.LFE71
 2894 0048 00000000 		.4byte	.LFB72
 2895 004c 58000000 		.4byte	.LFE72
 2896 0050 00000000 		.4byte	.LFB73
 2897 0054 36000000 		.4byte	.LFE73
 2898 0058 00000000 		.4byte	.LFB74
 2899 005c B0000000 		.4byte	.LFE74
 2900 0060 00000000 		.4byte	.LFB75
 2901 0064 3C000000 		.4byte	.LFE75
 2902 0068 00000000 		.4byte	.LFB76
 2903 006c 38000000 		.4byte	.LFE76
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 61


 2904 0070 00000000 		.4byte	.LFB77
 2905 0074 60000000 		.4byte	.LFE77
 2906 0078 00000000 		.4byte	0
 2907 007c 00000000 		.4byte	0
 2908              		.section	.debug_line,"",%progbits
 2909              	.Ldebug_line0:
 2910 0000 1E040000 		.section	.debug_str,"MS",%progbits,1
 2910      0200AE01 
 2910      00000201 
 2910      FB0E0D00 
 2910      01010101 
 2911              	.LASF24:
 2912 0000 68656164 		.ascii	"header\000"
 2912      657200
 2913              	.LASF46:
 2914 0007 7472616E 		.ascii	"transmitData\000"
 2914      736D6974 
 2914      44617461 
 2914      00
 2915              	.LASF27:
 2916 0014 49646C65 		.ascii	"Idle_Collision_ISR\000"
 2916      5F436F6C 
 2916      6C697369 
 2916      6F6E5F49 
 2916      535200
 2917              	.LASF22:
 2918 0027 73746174 		.ascii	"state\000"
 2918      6500
 2919              	.LASF43:
 2920 002d 67657452 		.ascii	"getRandomNumber\000"
 2920      616E646F 
 2920      6D4E756D 
 2920      62657200 
 2921              	.LASF17:
 2922 003d 73697A65 		.ascii	"sizetype\000"
 2922      74797065 
 2922      00
 2923              	.LASF53:
 2924 0046 64696666 		.ascii	"diffManEncodedData\000"
 2924      4D616E45 
 2924      6E636F64 
 2924      65644461 
 2924      746100
 2925              	.LASF34:
 2926 0059 6D61696E 		.ascii	"main\000"
 2926      00
 2927              	.LASF50:
 2928 005e 68656164 		.ascii	"headerCheck\000"
 2928      65724368 
 2928      65636B00 
 2929              	.LASF48:
 2930 006a 73746F72 		.ascii	"storeChar\000"
 2930      65436861 
 2930      7200
 2931              	.LASF70:
 2932 0074 63726353 		.ascii	"crcState\000"
 2932      74617465 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 62


 2932      00
 2933              	.LASF23:
 2934 007d 6E6F6E65 		.ascii	"none\000"
 2934      00
 2935              	.LASF2:
 2936 0082 73686F72 		.ascii	"short int\000"
 2936      7420696E 
 2936      7400
 2937              	.LASF40:
 2938 008c 76616C75 		.ascii	"value\000"
 2938      6500
 2939              	.LASF21:
 2940 0092 636F6C6C 		.ascii	"collision\000"
 2940      6973696F 
 2940      6E00
 2941              	.LASF12:
 2942 009c 75696E74 		.ascii	"uint16\000"
 2942      313600
 2943              	.LASF69:
 2944 00a3 6E657477 		.ascii	"networkState\000"
 2944      6F726B53 
 2944      74617465 
 2944      00
 2945              	.LASF11:
 2946 00b0 75696E74 		.ascii	"uint8\000"
 2946      3800
 2947              	.LASF31:
 2948 00b6 6C696E65 		.ascii	"lineString\000"
 2948      53747269 
 2948      6E6700
 2949              	.LASF28:
 2950 00c1 45646765 		.ascii	"Edge_detect_ISR\000"
 2950      5F646574 
 2950      6563745F 
 2950      49535200 
 2951              	.LASF74:
 2952 00d1 443A5C4D 		.ascii	"D:\\MyDocs\\Documents\\CE4950\\USB_UART01\\USB_UART"
 2952      79446F63 
 2952      735C446F 
 2952      63756D65 
 2952      6E74735C 
 2953 00ff 30312E63 		.ascii	"01.cydsn\000"
 2953      7964736E 
 2953      00
 2954              	.LASF13:
 2955 0108 666C6F61 		.ascii	"float\000"
 2955      7400
 2956              	.LASF6:
 2957 010e 6C6F6E67 		.ascii	"long long int\000"
 2957      206C6F6E 
 2957      6720696E 
 2957      7400
 2958              	.LASF7:
 2959 011c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2959      206C6F6E 
 2959      6720756E 
 2959      7369676E 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 63


 2959      65642069 
 2960              	.LASF64:
 2961 0133 54585F44 		.ascii	"TX_DESTINATION_ADDRESS\000"
 2961      45535449 
 2961      4E415449 
 2961      4F4E5F41 
 2961      44445245 
 2962              	.LASF72:
 2963 014a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2963      4320342E 
 2963      392E3320 
 2963      32303135 
 2963      30333033 
 2964 017d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2964      20726576 
 2964      6973696F 
 2964      6E203232 
 2964      31323230 
 2965 01b0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2965      66756E63 
 2965      74696F6E 
 2965      2D736563 
 2965      74696F6E 
 2966              	.LASF42:
 2967 01d8 7365744E 		.ascii	"setNetworkStateOnLEDs\000"
 2967      6574776F 
 2967      726B5374 
 2967      6174654F 
 2967      6E4C4544 
 2968              	.LASF49:
 2969 01ee 7072696E 		.ascii	"printChar\000"
 2969      74436861 
 2969      7200
 2970              	.LASF35:
 2971 01f8 73747269 		.ascii	"stringToDiffMan\000"
 2971      6E67546F 
 2971      44696666 
 2971      4D616E00 
 2972              	.LASF1:
 2973 0208 756E7369 		.ascii	"unsigned char\000"
 2973      676E6564 
 2973      20636861 
 2973      7200
 2974              	.LASF59:
 2975 0216 63757272 		.ascii	"currentDataPos\000"
 2975      656E7444 
 2975      61746150 
 2975      6F7300
 2976              	.LASF60:
 2977 0225 63757272 		.ascii	"currentRXCharPosition\000"
 2977      656E7452 
 2977      58436861 
 2977      72506F73 
 2977      6974696F 
 2978              	.LASF18:
 2979 023b 74696D65 		.ascii	"time_t\000"
 2979      5F7400
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 64


 2980              	.LASF41:
 2981 0242 696E6974 		.ascii	"initDiffManEncodedArray\000"
 2981      44696666 
 2981      4D616E45 
 2981      6E636F64 
 2981      65644172 
 2982              	.LASF0:
 2983 025a 7369676E 		.ascii	"signed char\000"
 2983      65642063 
 2983      68617200 
 2984              	.LASF36:
 2985 0266 61736369 		.ascii	"asciiToDiffMan\000"
 2985      69546F44 
 2985      6966664D 
 2985      616E00
 2986              	.LASF19:
 2987 0275 69646C65 		.ascii	"idle\000"
 2987      00
 2988              	.LASF47:
 2989 027a 64696666 		.ascii	"diffManToASCII\000"
 2989      4D616E54 
 2989      6F415343 
 2989      494900
 2990              	.LASF8:
 2991 0289 756E7369 		.ascii	"unsigned int\000"
 2991      676E6564 
 2991      20696E74 
 2991      00
 2992              	.LASF56:
 2993 0296 72656365 		.ascii	"receivedDataIndex\000"
 2993      69766564 
 2993      44617461 
 2993      496E6465 
 2993      7800
 2994              	.LASF5:
 2995 02a8 6C6F6E67 		.ascii	"long unsigned int\000"
 2995      20756E73 
 2995      69676E65 
 2995      6420696E 
 2995      7400
 2996              	.LASF26:
 2997 02ba 626F7468 		.ascii	"both\000"
 2997      00
 2998              	.LASF44:
 2999 02bf 4D494E5F 		.ascii	"MIN_N\000"
 2999      4E00
 3000              	.LASF37:
 3001 02c5 61736369 		.ascii	"asciiChar\000"
 3001      69436861 
 3001      7200
 3002              	.LASF15:
 3003 02cf 63686172 		.ascii	"char\000"
 3003      00
 3004              	.LASF71:
 3005 02d4 72656365 		.ascii	"receivedChar\000"
 3005      69766564 
 3005      43686172 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 65


 3005      00
 3006              	.LASF4:
 3007 02e1 6C6F6E67 		.ascii	"long int\000"
 3007      20696E74 
 3007      00
 3008              	.LASF32:
 3009 02ea 73747269 		.ascii	"stringPosition\000"
 3009      6E67506F 
 3009      73697469 
 3009      6F6E00
 3010              	.LASF10:
 3011 02f9 696E7433 		.ascii	"int32_t\000"
 3011      325F7400 
 3012              	.LASF3:
 3013 0301 73686F72 		.ascii	"short unsigned int\000"
 3013      7420756E 
 3013      7369676E 
 3013      65642069 
 3013      6E7400
 3014              	.LASF33:
 3015 0314 7365636F 		.ascii	"seconds\000"
 3015      6E647300 
 3016              	.LASF51:
 3017 031c 5F426F6F 		.ascii	"_Bool\000"
 3017      6C00
 3018              	.LASF20:
 3019 0322 62757379 		.ascii	"busy\000"
 3019      00
 3020              	.LASF57:
 3021 0327 72656365 		.ascii	"receivedDataCount\000"
 3021      69766564 
 3021      44617461 
 3021      436F756E 
 3021      7400
 3022              	.LASF16:
 3023 0339 72656738 		.ascii	"reg8\000"
 3023      00
 3024              	.LASF25:
 3025 033e 6D657373 		.ascii	"message\000"
 3025      61676500 
 3026              	.LASF14:
 3027 0346 646F7562 		.ascii	"double\000"
 3027      6C6500
 3028              	.LASF68:
 3029 034d 68656164 		.ascii	"headerValid\000"
 3029      65725661 
 3029      6C696400 
 3030              	.LASF62:
 3031 0359 6D657373 		.ascii	"messageLength\000"
 3031      6167654C 
 3031      656E6774 
 3031      6800
 3032              	.LASF54:
 3033 0367 64696666 		.ascii	"diffManReceivedData\000"
 3033      4D616E52 
 3033      65636569 
 3033      76656444 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 66


 3033      61746100 
 3034              	.LASF55:
 3035 037b 72784368 		.ascii	"rxChar\000"
 3035      617200
 3036              	.LASF30:
 3037 0382 52656365 		.ascii	"ReceiveTimerISR\000"
 3037      69766554 
 3037      696D6572 
 3037      49535200 
 3038              	.LASF39:
 3039 0392 62696E61 		.ascii	"binaryValueOfChar\000"
 3039      72795661 
 3039      6C75654F 
 3039      66436861 
 3039      7200
 3040              	.LASF73:
 3041 03a4 2E5C6D61 		.ascii	".\\main.c\000"
 3041      696E2E63 
 3041      00
 3042              	.LASF9:
 3043 03ad 5F5F696E 		.ascii	"__int32_t\000"
 3043      7433325F 
 3043      7400
 3044              	.LASF58:
 3045 03b7 68616C66 		.ascii	"halfBitIndex\000"
 3045      42697449 
 3045      6E646578 
 3045      00
 3046              	.LASF45:
 3047 03c4 4D41585F 		.ascii	"MAX_N\000"
 3047      4E00
 3048              	.LASF63:
 3049 03ca 68656164 		.ascii	"headerCRC\000"
 3049      65724352 
 3049      4300
 3050              	.LASF61:
 3051 03d4 6C656E67 		.ascii	"lengthOfData\000"
 3051      74684F66 
 3051      44617461 
 3051      00
 3052              	.LASF66:
 3053 03e1 64617461 		.ascii	"dataTransmissionComplete\000"
 3053      5472616E 
 3053      736D6973 
 3053      73696F6E 
 3053      436F6D70 
 3054              	.LASF29:
 3055 03fa 54696D65 		.ascii	"TimerHandler\000"
 3055      7248616E 
 3055      646C6572 
 3055      00
 3056              	.LASF52:
 3057 0407 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3057      52784275 
 3057      66666572 
 3057      00
 3058              	.LASF38:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccRLyAP5.s 			page 67


 3059 0414 70726576 		.ascii	"previousHalfBit\000"
 3059      696F7573 
 3059      48616C66 
 3059      42697400 
 3060              	.LASF65:
 3061 0424 74696D65 		.ascii	"timerExpired\000"
 3061      72457870 
 3061      69726564 
 3061      00
 3062              	.LASF67:
 3063 0431 706F7765 		.ascii	"powerOnEdge\000"
 3063      724F6E45 
 3063      64676500 
 3064              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
