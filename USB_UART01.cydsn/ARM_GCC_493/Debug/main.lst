ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	diffManEncodedData,3200,4
  19              		.comm	diffManReceivedData,100,4
  20              		.comm	receivedDataIndex,4,4
  21              		.comm	receivedDataCount,4,4
  22              		.global	halfBitIndex
  23              		.bss
  24              		.align	2
  25              		.type	halfBitIndex, %object
  26              		.size	halfBitIndex, 4
  27              	halfBitIndex:
  28 0000 00000000 		.space	4
  29              		.global	currentDataPos
  30              		.align	2
  31              		.type	currentDataPos, %object
  32              		.size	currentDataPos, 4
  33              	currentDataPos:
  34 0004 00000000 		.space	4
  35              		.comm	lengthOfData,4,4
  36              		.comm	timerExpired,1,1
  37              		.comm	dataTransmissionComplete,1,1
  38              		.comm	powerOnEdge,1,1
  39              		.comm	networkState,1,1
  40              		.global	timerInterruptCount
  41              		.align	2
  42              		.type	timerInterruptCount, %object
  43              		.size	timerInterruptCount, 4
  44              	timerInterruptCount:
  45 0008 00000000 		.space	4
  46              		.section	.text.Idle_Collision_ISR,"ax",%progbits
  47              		.align	2
  48              		.global	Idle_Collision_ISR
  49              		.thumb
  50              		.thumb_func
  51              		.type	Idle_Collision_ISR, %function
  52              	Idle_Collision_ISR:
  53              	.LFB63:
  54              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** This file performs a transmit. No collision is detected. 
   3:.\main.c      **** *******************************************************************************/
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 2


   4:.\main.c      **** #define INDEX_OF_MSB 6
   5:.\main.c      **** #define HIGH 1
   6:.\main.c      **** #define EIGHT_BITS 8
   7:.\main.c      **** #define START_BIT 2
   8:.\main.c      **** #define ASCII_CHAR_MASK 0x7F
   9:.\main.c      **** 
  10:.\main.c      **** #include <device.h>
  11:.\main.c      **** #include <stdbool.h>
  12:.\main.c      **** #include <stdlib.h> //For random number generator
  13:.\main.c      **** #include <time.h>
  14:.\main.c      **** #include "stdio.h"
  15:.\main.c      **** 
  16:.\main.c      **** 
  17:.\main.c      **** int getRandomNumber();
  18:.\main.c      **** void initDiffManEncodedArray();
  19:.\main.c      **** void stringToDiffMan(char*, uint8);
  20:.\main.c      **** void asciiToDiffMan(char);
  21:.\main.c      **** void transmitData();
  22:.\main.c      **** void setNetworkStateOnLEDs();
  23:.\main.c      **** void diffManToASCII(char*);
  24:.\main.c      **** void printChar(char *);
  25:.\main.c      **** 
  26:.\main.c      **** int diffManEncodedData[800]; //TODO examine array size
  27:.\main.c      **** uint8 diffManReceivedData[100];//TODO examine array size
  28:.\main.c      **** int receivedDataIndex, receivedDataCount;
  29:.\main.c      **** int halfBitIndex = 0, currentDataPos=0, lengthOfData;
  30:.\main.c      **** bool timerExpired, dataTransmissionComplete, powerOnEdge;
  31:.\main.c      **** enum state {idle, busy, collision} networkState; 
  32:.\main.c      **** 
  33:.\main.c      **** 
  34:.\main.c      **** int timerInterruptCount =0;//TODO remove
  35:.\main.c      **** 
  36:.\main.c      **** CY_ISR(Idle_Collision_ISR){ 
  55              		.loc 1 36 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
  37:.\main.c      ****     networkState = idle; 
  65              		.loc 1 37 0
  66 0004 074B     		ldr	r3, .L4
  67 0006 0022     		movs	r2, #0
  68 0008 1A70     		strb	r2, [r3]
  38:.\main.c      ****     if(Receive_Read() == HIGH){
  69              		.loc 1 38 0
  70 000a FFF7FEFF 		bl	Receive_Read
  71 000e 0346     		mov	r3, r0
  72 0010 012B     		cmp	r3, #1
  73 0012 03D1     		bne	.L2
  39:.\main.c      ****         networkState = idle;  
  74              		.loc 1 39 0
  75 0014 034B     		ldr	r3, .L4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 3


  76 0016 0022     		movs	r2, #0
  77 0018 1A70     		strb	r2, [r3]
  78 001a 02E0     		b	.L1
  79              	.L2:
  40:.\main.c      ****     }
  41:.\main.c      ****     else{
  42:.\main.c      ****         networkState = collision;
  80              		.loc 1 42 0
  81 001c 014B     		ldr	r3, .L4
  82 001e 0222     		movs	r2, #2
  83 0020 1A70     		strb	r2, [r3]
  84              	.L1:
  43:.\main.c      ****     }
  44:.\main.c      **** }
  85              		.loc 1 44 0
  86 0022 80BD     		pop	{r7, pc}
  87              	.L5:
  88              		.align	2
  89              	.L4:
  90 0024 00000000 		.word	networkState
  91              		.cfi_endproc
  92              	.LFE63:
  93              		.size	Idle_Collision_ISR, .-Idle_Collision_ISR
  94              		.section	.text.Edge_detect_ISR,"ax",%progbits
  95              		.align	2
  96              		.global	Edge_detect_ISR
  97              		.thumb
  98              		.thumb_func
  99              		.type	Edge_detect_ISR, %function
 100              	Edge_detect_ISR:
 101              	.LFB64:
  45:.\main.c      **** 
  46:.\main.c      **** CY_ISR(Edge_detect_ISR){
 102              		.loc 1 46 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 98B5     		push	{r3, r4, r7, lr}
 107              		.cfi_def_cfa_offset 16
 108              		.cfi_offset 3, -16
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
  47:.\main.c      ****      //Note: onedge detect, will trigger receive timer to start (see TopDesign)
  48:.\main.c      ****     Idle_Collision_Timer_Start();
 114              		.loc 1 48 0
 115 0004 FFF7FEFF 		bl	Idle_Collision_Timer_Start
  49:.\main.c      ****     
  50:.\main.c      ****     //Ignore power on egde 
  51:.\main.c      ****     if(!powerOnEdge){
 116              		.loc 1 51 0
 117 0008 0F4B     		ldr	r3, .L9
 118 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119 000c 83F00103 		eor	r3, r3, #1
 120 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 4


 121 0012 002B     		cmp	r3, #0
 122 0014 0FD0     		beq	.L7
  52:.\main.c      ****         Receive_Timer_Start(); 
 123              		.loc 1 52 0
 124 0016 FFF7FEFF 		bl	Receive_Timer_Start
  53:.\main.c      ****         diffManReceivedData[receivedDataCount] = Receive_Read();
 125              		.loc 1 53 0
 126 001a 0C4B     		ldr	r3, .L9+4
 127 001c 1C68     		ldr	r4, [r3]
 128 001e FFF7FEFF 		bl	Receive_Read
 129 0022 0346     		mov	r3, r0
 130 0024 1A46     		mov	r2, r3
 131 0026 0A4B     		ldr	r3, .L9+8
 132 0028 1A55     		strb	r2, [r3, r4]
  54:.\main.c      ****         receivedDataCount++;    
 133              		.loc 1 54 0
 134 002a 084B     		ldr	r3, .L9+4
 135 002c 1B68     		ldr	r3, [r3]
 136 002e 0133     		adds	r3, r3, #1
 137 0030 064A     		ldr	r2, .L9+4
 138 0032 1360     		str	r3, [r2]
 139 0034 02E0     		b	.L8
 140              	.L7:
  55:.\main.c      ****     }
  56:.\main.c      ****     else{
  57:.\main.c      ****         powerOnEdge = false;
 141              		.loc 1 57 0
 142 0036 044B     		ldr	r3, .L9
 143 0038 0022     		movs	r2, #0
 144 003a 1A70     		strb	r2, [r3]
 145              	.L8:
  58:.\main.c      ****     }
  59:.\main.c      ****     networkState = busy;
 146              		.loc 1 59 0
 147 003c 054B     		ldr	r3, .L9+12
 148 003e 0122     		movs	r2, #1
 149 0040 1A70     		strb	r2, [r3]
  60:.\main.c      ****     Receive_ClearInterrupt();
 150              		.loc 1 60 0
 151 0042 FFF7FEFF 		bl	Receive_ClearInterrupt
  61:.\main.c      **** }
 152              		.loc 1 61 0
 153 0046 98BD     		pop	{r3, r4, r7, pc}
 154              	.L10:
 155              		.align	2
 156              	.L9:
 157 0048 00000000 		.word	powerOnEdge
 158 004c 00000000 		.word	receivedDataCount
 159 0050 00000000 		.word	diffManReceivedData
 160 0054 00000000 		.word	networkState
 161              		.cfi_endproc
 162              	.LFE64:
 163              		.size	Edge_detect_ISR, .-Edge_detect_ISR
 164              		.section	.text.TimerHandler,"ax",%progbits
 165              		.align	2
 166              		.global	TimerHandler
 167              		.thumb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 5


 168              		.thumb_func
 169              		.type	TimerHandler, %function
 170              	TimerHandler:
 171              	.LFB65:
  62:.\main.c      **** 
  63:.\main.c      **** CY_ISR(TimerHandler){
 172              		.loc 1 63 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
  64:.\main.c      ****     Timer_Stop();
 182              		.loc 1 64 0
 183 0004 FFF7FEFF 		bl	Timer_Stop
  65:.\main.c      ****     timerExpired = true;
 184              		.loc 1 65 0
 185 0008 024B     		ldr	r3, .L12
 186 000a 0122     		movs	r2, #1
 187 000c 1A70     		strb	r2, [r3]
  66:.\main.c      ****     Timer_STATUS;   //clear the timer interrupt
 188              		.loc 1 66 0
 189 000e 024B     		ldr	r3, .L12+4
 190 0010 1B78     		ldrb	r3, [r3]
  67:.\main.c      **** }
 191              		.loc 1 67 0
 192 0012 80BD     		pop	{r7, pc}
 193              	.L13:
 194              		.align	2
 195              	.L12:
 196 0014 00000000 		.word	timerExpired
 197 0018 6B640040 		.word	1073767531
 198              		.cfi_endproc
 199              	.LFE65:
 200              		.size	TimerHandler, .-TimerHandler
 201              		.section	.text.ReceiveTimerISR,"ax",%progbits
 202              		.align	2
 203              		.global	ReceiveTimerISR
 204              		.thumb
 205              		.thumb_func
 206              		.type	ReceiveTimerISR, %function
 207              	ReceiveTimerISR:
 208              	.LFB66:
  68:.\main.c      **** 
  69:.\main.c      **** //TODO changing from reading to just repeting last data
  70:.\main.c      **** CY_ISR(ReceiveTimerISR){
 209              		.loc 1 70 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 6


 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  71:.\main.c      ****     diffManReceivedData[receivedDataCount] = diffManReceivedData[receivedDataCount-1];
 219              		.loc 1 71 0
 220 0004 094B     		ldr	r3, .L15
 221 0006 1B68     		ldr	r3, [r3]
 222 0008 084A     		ldr	r2, .L15
 223 000a 1268     		ldr	r2, [r2]
 224 000c 013A     		subs	r2, r2, #1
 225 000e 0849     		ldr	r1, .L15+4
 226 0010 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 227 0012 074A     		ldr	r2, .L15+4
 228 0014 D154     		strb	r1, [r2, r3]
  72:.\main.c      ****     //or  diffManReceivedData[receivedDataCount] = Receive_Read();
  73:.\main.c      ****     receivedDataCount++;
 229              		.loc 1 73 0
 230 0016 054B     		ldr	r3, .L15
 231 0018 1B68     		ldr	r3, [r3]
 232 001a 0133     		adds	r3, r3, #1
 233 001c 034A     		ldr	r2, .L15
 234 001e 1360     		str	r3, [r2]
  74:.\main.c      ****     //timerInterruptCount++;//TODO remove
  75:.\main.c      ****     Receive_Timer_STATUS;   //clear interrupt
 235              		.loc 1 75 0
 236 0020 044B     		ldr	r3, .L15+8
 237 0022 1B78     		ldrb	r3, [r3]
  76:.\main.c      **** }
 238              		.loc 1 76 0
 239 0024 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 0026 5DF8047B 		ldr	r7, [sp], #4
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 002a 7047     		bx	lr
 246              	.L16:
 247              		.align	2
 248              	.L15:
 249 002c 00000000 		.word	receivedDataCount
 250 0030 00000000 		.word	diffManReceivedData
 251 0034 6F640040 		.word	1073767535
 252              		.cfi_endproc
 253              	.LFE66:
 254              		.size	ReceiveTimerISR, .-ReceiveTimerISR
 255              		.section	.text.main,"ax",%progbits
 256              		.align	2
 257              		.global	main
 258              		.thumb
 259              		.thumb_func
 260              		.type	main, %function
 261              	main:
 262              	.LFB67:
  77:.\main.c      **** 
  78:.\main.c      **** int main()
  79:.\main.c      **** {
 263              		.loc 1 79 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 7


 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 120
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267 0000 80B5     		push	{r7, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 9EB0     		sub	sp, sp, #120
 272              		.cfi_def_cfa_offset 128
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
  80:.\main.c      **** 
  81:.\main.c      ****     char rx;
  82:.\main.c      ****     char lineString[100];
  83:.\main.c      ****     uint8 stringPosition = 0;
 275              		.loc 1 83 0
 276 0006 0023     		movs	r3, #0
 277 0008 87F87730 		strb	r3, [r7, #119]
  84:.\main.c      ****     timerExpired = false;
 278              		.loc 1 84 0
 279 000c 784B     		ldr	r3, .L38
 280 000e 0022     		movs	r2, #0
 281 0010 1A70     		strb	r2, [r3]
  85:.\main.c      ****     dataTransmissionComplete = false;
 282              		.loc 1 85 0
 283 0012 784B     		ldr	r3, .L38+4
 284 0014 0022     		movs	r2, #0
 285 0016 1A70     		strb	r2, [r3]
  86:.\main.c      ****     powerOnEdge = true; //When the system powers up, it creates a rising edge. 
 286              		.loc 1 86 0
 287 0018 774B     		ldr	r3, .L38+8
 288 001a 0122     		movs	r2, #1
 289 001c 1A70     		strb	r2, [r3]
  87:.\main.c      ****     //We want to ignore this edge on the rising edge.
  88:.\main.c      ****     
  89:.\main.c      ****     /*
  90:.\main.c      ****     Get value from system clock and
  91:.\main.c      ****     place in seconds variable.
  92:.\main.c      ****     */
  93:.\main.c      ****     time_t seconds; 
  94:.\main.c      ****     time(&seconds);
 290              		.loc 1 94 0
 291 001e 07F10803 		add	r3, r7, #8
 292 0022 1846     		mov	r0, r3
 293 0024 FFF7FEFF 		bl	time
  95:.\main.c      ****     /*
  96:.\main.c      ****     Convert seconds to a unsigned
  97:.\main.c      ****     integer for seed for random number generator
  98:.\main.c      ****     */
  99:.\main.c      ****     srand((unsigned int) seconds);
 294              		.loc 1 99 0
 295 0028 BB68     		ldr	r3, [r7, #8]
 296 002a 1846     		mov	r0, r3
 297 002c FFF7FEFF 		bl	srand
 100:.\main.c      ****             
 101:.\main.c      ****     TX_pin_Write(1);  //set TX line to high to start
 298              		.loc 1 101 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 8


 299 0030 0120     		movs	r0, #1
 300 0032 FFF7FEFF 		bl	TX_pin_Write
 102:.\main.c      ****     
 103:.\main.c      ****     /* Enable Global Interrupts */
 104:.\main.c      ****     CyGlobalIntEnable;  
 301              		.loc 1 104 0
 302              	@ 104 ".\main.c" 1
 303 0036 62B6     		CPSIE   i
 304              	@ 0 "" 2
 105:.\main.c      ****     
 106:.\main.c      ****     Receive_ClearInterrupt();//TODO clearing first edge
 305              		.loc 1 106 0
 306              		.thumb
 307 0038 FFF7FEFF 		bl	Receive_ClearInterrupt
 107:.\main.c      ****     
 108:.\main.c      ****     LCD_Start();
 308              		.loc 1 108 0
 309 003c FFF7FEFF 		bl	LCD_Start
 109:.\main.c      ****     
 110:.\main.c      ****     //enable collision detection
 111:.\main.c      ****     Idle_Collision_IRQ_StartEx(Idle_Collision_ISR);
 310              		.loc 1 111 0
 311 0040 6E48     		ldr	r0, .L38+12
 312 0042 FFF7FEFF 		bl	Idle_Collision_IRQ_StartEx
 112:.\main.c      ****     Edge_detect_IRQ_StartEx(Edge_detect_ISR);
 313              		.loc 1 112 0
 314 0046 6E48     		ldr	r0, .L38+16
 315 0048 FFF7FEFF 		bl	Edge_detect_IRQ_StartEx
 113:.\main.c      ****     Idle_Collision_Timer_Start();
 316              		.loc 1 113 0
 317 004c FFF7FEFF 		bl	Idle_Collision_Timer_Start
 114:.\main.c      **** 
 115:.\main.c      ****     /* Start USBFS Operation with 3V operation */
 116:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
 318              		.loc 1 116 0
 319 0050 0020     		movs	r0, #0
 320 0052 0021     		movs	r1, #0
 321 0054 FFF7FEFF 		bl	USBUART_1_Start
 117:.\main.c      ****     
 118:.\main.c      ****     //start tranmission timer
 119:.\main.c      ****     TimerISR_StartEx(TimerHandler);
 322              		.loc 1 119 0
 323 0058 6A48     		ldr	r0, .L38+20
 324 005a FFF7FEFF 		bl	TimerISR_StartEx
 120:.\main.c      **** 
 121:.\main.c      ****     ReceiveTimerIRQ_StartEx(ReceiveTimerISR); 
 325              		.loc 1 121 0
 326 005e 6A48     		ldr	r0, .L38+24
 327 0060 FFF7FEFF 		bl	ReceiveTimerIRQ_StartEx
 122:.\main.c      ****     
 123:.\main.c      ****     receivedDataCount = 0;
 328              		.loc 1 123 0
 329 0064 694B     		ldr	r3, .L38+28
 330 0066 0022     		movs	r2, #0
 331 0068 1A60     		str	r2, [r3]
 124:.\main.c      ****     receivedDataIndex = 0; 
 332              		.loc 1 124 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 9


 333 006a 694B     		ldr	r3, .L38+32
 334 006c 0022     		movs	r2, #0
 335 006e 1A60     		str	r2, [r3]
 125:.\main.c      ****     timerInterruptCount = 0;
 336              		.loc 1 125 0
 337 0070 684B     		ldr	r3, .L38+36
 338 0072 0022     		movs	r2, #0
 339 0074 1A60     		str	r2, [r3]
 340              	.L35:
 126:.\main.c      ****    
 127:.\main.c      ****     
 128:.\main.c      ****     /* Main Loop: */
 129:.\main.c      ****     for(;;)
 130:.\main.c      ****     {
 131:.\main.c      ****         setNetworkStateOnLEDs();
 341              		.loc 1 131 0
 342 0076 FFF7FEFF 		bl	setNetworkStateOnLEDs
 132:.\main.c      ****         
 133:.\main.c      ****         /*Receive*/
 134:.\main.c      ****         //Precondidtion: must finished receiving data so channel state machine at idle and wait for
 135:.\main.c      ****         if(networkState == idle && receivedDataCount >= 34){//TODO remove hardcode #
 343              		.loc 1 135 0
 344 007a 674B     		ldr	r3, .L38+40
 345 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346 007e 002B     		cmp	r3, #0
 347 0080 2AD1     		bne	.L18
 348              		.loc 1 135 0 is_stmt 0 discriminator 1
 349 0082 624B     		ldr	r3, .L38+28
 350 0084 1B68     		ldr	r3, [r3]
 351 0086 212B     		cmp	r3, #33
 352 0088 26DD     		ble	.L18
 136:.\main.c      ****             //Verify that have received start bit (01). Note: ignore first edge from turning system
 137:.\main.c      ****             if(diffManReceivedData[0] == 0 && diffManReceivedData[1] == 1){
 353              		.loc 1 137 0 is_stmt 1
 354 008a 644B     		ldr	r3, .L38+44
 355 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 008e 002B     		cmp	r3, #0
 357 0090 1CD1     		bne	.L19
 358              		.loc 1 137 0 is_stmt 0 discriminator 1
 359 0092 624B     		ldr	r3, .L38+44
 360 0094 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 361 0096 012B     		cmp	r3, #1
 362 0098 18D1     		bne	.L19
 138:.\main.c      ****                 
 139:.\main.c      ****                 
 140:.\main.c      ****                 receivedDataIndex = 2; //skip start bit (two half bits)
 363              		.loc 1 140 0 is_stmt 1
 364 009a 5D4B     		ldr	r3, .L38+32
 365 009c 0222     		movs	r2, #2
 366 009e 1A60     		str	r2, [r3]
 141:.\main.c      ****                 while(receivedDataIndex < receivedDataCount){
 367              		.loc 1 141 0
 368 00a0 07E0     		b	.L20
 369              	.L21:
 370              	.LBB2:
 142:.\main.c      ****                     //wait for 8 bits TODO bad comment
 143:.\main.c      ****                     char receivedChar;     
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 10


 144:.\main.c      ****                     char *charPtr = &receivedChar;
 371              		.loc 1 144 0
 372 00a2 FB1D     		adds	r3, r7, #7
 373 00a4 3B67     		str	r3, [r7, #112]
 145:.\main.c      ****                     
 146:.\main.c      ****                     diffManToASCII(charPtr);
 374              		.loc 1 146 0
 375 00a6 386F     		ldr	r0, [r7, #112]
 376 00a8 FFF7FEFF 		bl	diffManToASCII
 147:.\main.c      ****                     printChar(charPtr);
 377              		.loc 1 147 0
 378 00ac 386F     		ldr	r0, [r7, #112]
 379 00ae FFF7FEFF 		bl	printChar
 380              	.L20:
 381              	.LBE2:
 141:.\main.c      ****                     //wait for 8 bits TODO bad comment
 382              		.loc 1 141 0
 383 00b2 574B     		ldr	r3, .L38+32
 384 00b4 1A68     		ldr	r2, [r3]
 385 00b6 554B     		ldr	r3, .L38+28
 386 00b8 1B68     		ldr	r3, [r3]
 387 00ba 9A42     		cmp	r2, r3
 388 00bc F1DB     		blt	.L21
 148:.\main.c      ****                 }
 149:.\main.c      ****                 receivedDataCount = 0;
 389              		.loc 1 149 0
 390 00be 534B     		ldr	r3, .L38+28
 391 00c0 0022     		movs	r2, #0
 392 00c2 1A60     		str	r2, [r3]
 150:.\main.c      ****                 receivedDataIndex = 0; 
 393              		.loc 1 150 0
 394 00c4 524B     		ldr	r3, .L38+32
 395 00c6 0022     		movs	r2, #0
 396 00c8 1A60     		str	r2, [r3]
 397 00ca 05E0     		b	.L18
 398              	.L19:
 151:.\main.c      ****             }
 152:.\main.c      ****             else{
 153:.\main.c      ****                 //Receive data did not start with the start bit
 154:.\main.c      ****                 receivedDataCount = 0;
 399              		.loc 1 154 0
 400 00cc 4F4B     		ldr	r3, .L38+28
 401 00ce 0022     		movs	r2, #0
 402 00d0 1A60     		str	r2, [r3]
 155:.\main.c      ****                 receivedDataIndex = 0; 
 403              		.loc 1 155 0
 404 00d2 4F4B     		ldr	r3, .L38+32
 405 00d4 0022     		movs	r2, #0
 406 00d6 1A60     		str	r2, [r3]
 407              	.L18:
 156:.\main.c      ****             }
 157:.\main.c      ****         }
 158:.\main.c      ****         else
 159:.\main.c      ****         {
 160:.\main.c      ****             //TODO prob remove this else
 161:.\main.c      ****         }
 162:.\main.c      ****         /*End Receive*/
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 11


 163:.\main.c      ****         
 164:.\main.c      ****         if(USBUART_1_IsConfigurationChanged() != 0u) /* Host could send double SET_INTERFACE reques
 408              		.loc 1 164 0
 409 00d8 FFF7FEFF 		bl	USBUART_1_IsConfigurationChanged
 410 00dc 0346     		mov	r3, r0
 411 00de 002B     		cmp	r3, #0
 412 00e0 06D0     		beq	.L23
 165:.\main.c      ****         {
 166:.\main.c      ****             if(USBUART_1_GetConfiguration() != 0u)   /* Init IN endpoints when device configured */
 413              		.loc 1 166 0
 414 00e2 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 415 00e6 0346     		mov	r3, r0
 416 00e8 002B     		cmp	r3, #0
 417 00ea 01D0     		beq	.L23
 167:.\main.c      ****             {
 168:.\main.c      ****                 /* Enumeration is done, enable OUT endpoint for receive data from Host */
 169:.\main.c      ****                 USBUART_1_CDC_Init();
 418              		.loc 1 169 0
 419 00ec FFF7FEFF 		bl	USBUART_1_CDC_Init
 420              	.L23:
 170:.\main.c      ****             }
 171:.\main.c      ****         }         
 172:.\main.c      ****         if(USBUART_1_GetConfiguration() != 0u)    /* Service USB CDC when device configured */
 421              		.loc 1 172 0
 422 00f0 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 423 00f4 0346     		mov	r3, r0
 424 00f6 002B     		cmp	r3, #0
 425 00f8 79D0     		beq	.L24
 173:.\main.c      ****         {
 174:.\main.c      ****             if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
 426              		.loc 1 174 0
 427 00fa FFF7FEFF 		bl	USBUART_1_DataIsReady
 428 00fe 0346     		mov	r3, r0
 429 0100 002B     		cmp	r3, #0
 430 0102 74D0     		beq	.L24
 175:.\main.c      ****             {   
 176:.\main.c      ****                 rx = USBUART_1_GetChar();
 431              		.loc 1 176 0
 432 0104 FFF7FEFF 		bl	USBUART_1_GetChar
 433 0108 0346     		mov	r3, r0
 434 010a 87F87630 		strb	r3, [r7, #118]
 177:.\main.c      ****                 switch(rx){
 435              		.loc 1 177 0
 436 010e 97F87630 		ldrb	r3, [r7, #118]	@ zero_extendqisi2
 437 0112 0D2B     		cmp	r3, #13
 438 0114 25D0     		beq	.L26
 439 0116 1B2B     		cmp	r3, #27
 440 0118 68D0     		beq	.L37
 441 011a 082B     		cmp	r3, #8
 442 011c 4CD1     		bne	.L36
 178:.\main.c      ****                     case 8://backspace
 179:.\main.c      ****                         if(stringPosition>0){
 443              		.loc 1 179 0
 444 011e 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 445 0122 002B     		cmp	r3, #0
 446 0124 1CD0     		beq	.L29
 180:.\main.c      ****                             stringPosition--;
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 12


 447              		.loc 1 180 0
 448 0126 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 449 012a 013B     		subs	r3, r3, #1
 450 012c 87F87730 		strb	r3, [r7, #119]
 181:.\main.c      ****                             lineString[stringPosition] = '\0';
 451              		.loc 1 181 0
 452 0130 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 453 0134 07F17802 		add	r2, r7, #120
 454 0138 1344     		add	r3, r3, r2
 455 013a 0022     		movs	r2, #0
 456 013c 03F86C2C 		strb	r2, [r3, #-108]
 182:.\main.c      ****                             //backspace space backspace
 183:.\main.c      ****                             while(USBUART_1_CDCIsReady() == 0u); 
 457              		.loc 1 183 0
 458 0140 00BF     		nop
 459              	.L30:
 460              		.loc 1 183 0 is_stmt 0 discriminator 1
 461 0142 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 462 0146 0346     		mov	r3, r0
 463 0148 002B     		cmp	r3, #0
 464 014a FAD0     		beq	.L30
 184:.\main.c      ****                             USBUART_1_PutChar(8);
 465              		.loc 1 184 0 is_stmt 1
 466 014c 0820     		movs	r0, #8
 467 014e FFF7FEFF 		bl	USBUART_1_PutChar
 185:.\main.c      ****                             USBUART_1_PutChar(32);
 468              		.loc 1 185 0
 469 0152 2020     		movs	r0, #32
 470 0154 FFF7FEFF 		bl	USBUART_1_PutChar
 186:.\main.c      ****                             USBUART_1_PutChar(8);
 471              		.loc 1 186 0
 472 0158 0820     		movs	r0, #8
 473 015a FFF7FEFF 		bl	USBUART_1_PutChar
 187:.\main.c      ****                         }
 188:.\main.c      ****                         break;
 474              		.loc 1 188 0
 475 015e 46E0     		b	.L24
 476              	.L29:
 477 0160 45E0     		b	.L24
 478              	.L26:
 189:.\main.c      ****                     case 13://enter (carriage return)
 190:.\main.c      ****                         initDiffManEncodedArray();
 479              		.loc 1 190 0
 480 0162 FFF7FEFF 		bl	initDiffManEncodedArray
 191:.\main.c      ****                         stringToDiffMan(lineString, stringPosition);
 481              		.loc 1 191 0
 482 0166 07F10C02 		add	r2, r7, #12
 483 016a 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 484 016e 1046     		mov	r0, r2
 485 0170 1946     		mov	r1, r3
 486 0172 FFF7FEFF 		bl	stringToDiffMan
 192:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u);
 487              		.loc 1 192 0
 488 0176 00BF     		nop
 489              	.L31:
 490              		.loc 1 192 0 is_stmt 0 discriminator 1
 491 0178 FFF7FEFF 		bl	USBUART_1_CDCIsReady
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 13


 492 017c 0346     		mov	r3, r0
 493 017e 002B     		cmp	r3, #0
 494 0180 FAD0     		beq	.L31
 193:.\main.c      ****                         USBUART_1_PutCRLF();
 495              		.loc 1 193 0 is_stmt 1
 496 0182 FFF7FEFF 		bl	USBUART_1_PutCRLF
 194:.\main.c      ****                         
 195:.\main.c      ****                         //keep looping until data is transmitted
 196:.\main.c      ****                         while(!dataTransmissionComplete){
 497              		.loc 1 196 0
 498 0186 03E0     		b	.L32
 499              	.L33:
 197:.\main.c      ****                             transmitData();
 500              		.loc 1 197 0
 501 0188 FFF7FEFF 		bl	transmitData
 198:.\main.c      ****                             setNetworkStateOnLEDs();
 502              		.loc 1 198 0
 503 018c FFF7FEFF 		bl	setNetworkStateOnLEDs
 504              	.L32:
 196:.\main.c      ****                             transmitData();
 505              		.loc 1 196 0
 506 0190 184B     		ldr	r3, .L38+4
 507 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 508 0194 83F00103 		eor	r3, r3, #1
 509 0198 DBB2     		uxtb	r3, r3
 510 019a 002B     		cmp	r3, #0
 511 019c F4D1     		bne	.L33
 199:.\main.c      ****                         }
 200:.\main.c      ****                         dataTransmissionComplete = false;
 512              		.loc 1 200 0
 513 019e 154B     		ldr	r3, .L38+4
 514 01a0 0022     		movs	r2, #0
 515 01a2 1A70     		strb	r2, [r3]
 201:.\main.c      ****                         TX_pin_Write(1);    //set line to logic-1 after transmission
 516              		.loc 1 201 0
 517 01a4 0120     		movs	r0, #1
 518 01a6 FFF7FEFF 		bl	TX_pin_Write
 202:.\main.c      ****                         //reset index
 203:.\main.c      ****                         halfBitIndex = 0;
 519              		.loc 1 203 0
 520 01aa 1D4B     		ldr	r3, .L38+48
 521 01ac 0022     		movs	r2, #0
 522 01ae 1A60     		str	r2, [r3]
 204:.\main.c      ****                         stringPosition = 0; 
 523              		.loc 1 204 0
 524 01b0 0023     		movs	r3, #0
 525 01b2 87F87730 		strb	r3, [r7, #119]
 205:.\main.c      ****                         break;
 526              		.loc 1 205 0
 527 01b6 1AE0     		b	.L24
 528              	.L36:
 206:.\main.c      ****                     case 27://escape
 207:.\main.c      ****                         break;
 208:.\main.c      ****                     default://everything else
 209:.\main.c      ****                         lineString[stringPosition] = rx;
 529              		.loc 1 209 0
 530 01b8 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 14


 531 01bc 07F17802 		add	r2, r7, #120
 532 01c0 1344     		add	r3, r3, r2
 533 01c2 97F87620 		ldrb	r2, [r7, #118]
 534 01c6 03F86C2C 		strb	r2, [r3, #-108]
 210:.\main.c      ****                         stringPosition++;
 535              		.loc 1 210 0
 536 01ca 97F87730 		ldrb	r3, [r7, #119]	@ zero_extendqisi2
 537 01ce 0133     		adds	r3, r3, #1
 538 01d0 87F87730 		strb	r3, [r7, #119]
 211:.\main.c      ****                         while(USBUART_1_CDCIsReady() == 0u); 
 539              		.loc 1 211 0
 540 01d4 00BF     		nop
 541              	.L34:
 542              		.loc 1 211 0 is_stmt 0 discriminator 1
 543 01d6 FFF7FEFF 		bl	USBUART_1_CDCIsReady
 544 01da 0346     		mov	r3, r0
 545 01dc 002B     		cmp	r3, #0
 546 01de FAD0     		beq	.L34
 212:.\main.c      ****                         USBUART_1_PutChar(rx);       /* Send data back to PC */
 547              		.loc 1 212 0 is_stmt 1
 548 01e0 97F87630 		ldrb	r3, [r7, #118]	@ zero_extendqisi2
 549 01e4 1846     		mov	r0, r3
 550 01e6 FFF7FEFF 		bl	USBUART_1_PutChar
 213:.\main.c      ****                         break;
 551              		.loc 1 213 0
 552 01ea 00E0     		b	.L24
 553              	.L37:
 207:.\main.c      ****                     default://everything else
 554              		.loc 1 207 0
 555 01ec 00BF     		nop
 556              	.L24:
 214:.\main.c      ****                 }
 215:.\main.c      ****             }
 216:.\main.c      ****         }
 217:.\main.c      ****     }   
 557              		.loc 1 217 0 discriminator 1
 558 01ee 42E7     		b	.L35
 559              	.L39:
 560              		.align	2
 561              	.L38:
 562 01f0 00000000 		.word	timerExpired
 563 01f4 00000000 		.word	dataTransmissionComplete
 564 01f8 00000000 		.word	powerOnEdge
 565 01fc 00000000 		.word	Idle_Collision_ISR
 566 0200 00000000 		.word	Edge_detect_ISR
 567 0204 00000000 		.word	TimerHandler
 568 0208 00000000 		.word	ReceiveTimerISR
 569 020c 00000000 		.word	receivedDataCount
 570 0210 00000000 		.word	receivedDataIndex
 571 0214 00000000 		.word	timerInterruptCount
 572 0218 00000000 		.word	networkState
 573 021c 00000000 		.word	diffManReceivedData
 574 0220 00000000 		.word	halfBitIndex
 575              		.cfi_endproc
 576              	.LFE67:
 577              		.size	main, .-main
 578              		.section	.text.initDiffManEncodedArray,"ax",%progbits
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 15


 579              		.align	2
 580              		.global	initDiffManEncodedArray
 581              		.thumb
 582              		.thumb_func
 583              		.type	initDiffManEncodedArray, %function
 584              	initDiffManEncodedArray:
 585              	.LFB68:
 218:.\main.c      **** }
 219:.\main.c      **** 
 220:.\main.c      **** /*
 221:.\main.c      **** init dif man encoded data array with a leading "starting bit". The starting bit is madeup of the 
 222:.\main.c      **** half bits 01. 
 223:.\main.c      **** Only call when starting to transfer a new string
 224:.\main.c      **** */
 225:.\main.c      **** void initDiffManEncodedArray(){
 586              		.loc 1 225 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 0002 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 226:.\main.c      ****     halfBitIndex = 0;
 596              		.loc 1 226 0
 597 0004 0E4B     		ldr	r3, .L41
 598 0006 0022     		movs	r2, #0
 599 0008 1A60     		str	r2, [r3]
 227:.\main.c      ****     diffManEncodedData[halfBitIndex] = 0;
 600              		.loc 1 227 0
 601 000a 0D4B     		ldr	r3, .L41
 602 000c 1B68     		ldr	r3, [r3]
 603 000e 0D4A     		ldr	r2, .L41+4
 604 0010 0021     		movs	r1, #0
 605 0012 42F82310 		str	r1, [r2, r3, lsl #2]
 228:.\main.c      ****     halfBitIndex++;
 606              		.loc 1 228 0
 607 0016 0A4B     		ldr	r3, .L41
 608 0018 1B68     		ldr	r3, [r3]
 609 001a 0133     		adds	r3, r3, #1
 610 001c 084A     		ldr	r2, .L41
 611 001e 1360     		str	r3, [r2]
 229:.\main.c      ****     diffManEncodedData[halfBitIndex] = 1;
 612              		.loc 1 229 0
 613 0020 074B     		ldr	r3, .L41
 614 0022 1B68     		ldr	r3, [r3]
 615 0024 074A     		ldr	r2, .L41+4
 616 0026 0121     		movs	r1, #1
 617 0028 42F82310 		str	r1, [r2, r3, lsl #2]
 230:.\main.c      ****     halfBitIndex++;
 618              		.loc 1 230 0
 619 002c 044B     		ldr	r3, .L41
 620 002e 1B68     		ldr	r3, [r3]
 621 0030 0133     		adds	r3, r3, #1
 622 0032 034A     		ldr	r2, .L41
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 16


 623 0034 1360     		str	r3, [r2]
 231:.\main.c      **** }
 624              		.loc 1 231 0
 625 0036 BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0038 5DF8047B 		ldr	r7, [sp], #4
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 003c 7047     		bx	lr
 632              	.L42:
 633 003e 00BF     		.align	2
 634              	.L41:
 635 0040 00000000 		.word	halfBitIndex
 636 0044 00000000 		.word	diffManEncodedData
 637              		.cfi_endproc
 638              	.LFE68:
 639              		.size	initDiffManEncodedArray, .-initDiffManEncodedArray
 640              		.section	.text.stringToDiffMan,"ax",%progbits
 641              		.align	2
 642              		.global	stringToDiffMan
 643              		.thumb
 644              		.thumb_func
 645              		.type	stringToDiffMan, %function
 646              	stringToDiffMan:
 647              	.LFB69:
 232:.\main.c      **** 
 233:.\main.c      **** /*
 234:.\main.c      **** Enter key has been pressed, change binary data into diff man data.
 235:.\main.c      **** Call from main. Requires main to access diffManEncodedData array
 236:.\main.c      **** */
 237:.\main.c      **** void stringToDiffMan(char lineString[], uint8 stringPosition){
 648              		.loc 1 237 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 16
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 84B0     		sub	sp, sp, #16
 657              		.cfi_def_cfa_offset 24
 658 0004 00AF     		add	r7, sp, #0
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 661 0008 0B46     		mov	r3, r1
 662 000a FB70     		strb	r3, [r7, #3]
 238:.\main.c      **** 
 239:.\main.c      ****     unsigned int i = 0;
 663              		.loc 1 239 0
 664 000c 0023     		movs	r3, #0
 665 000e FB60     		str	r3, [r7, #12]
 240:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 666              		.loc 1 240 0
 667 0010 0023     		movs	r3, #0
 668 0012 FB60     		str	r3, [r7, #12]
 669 0014 09E0     		b	.L44
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 17


 670              	.L45:
 241:.\main.c      ****         asciiToDiffMan(lineString[i]);
 671              		.loc 1 241 0 discriminator 3
 672 0016 7A68     		ldr	r2, [r7, #4]
 673 0018 FB68     		ldr	r3, [r7, #12]
 674 001a 1344     		add	r3, r3, r2
 675 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 676 001e 1846     		mov	r0, r3
 677 0020 FFF7FEFF 		bl	asciiToDiffMan
 240:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 678              		.loc 1 240 0 discriminator 3
 679 0024 FB68     		ldr	r3, [r7, #12]
 680 0026 0133     		adds	r3, r3, #1
 681 0028 FB60     		str	r3, [r7, #12]
 682              	.L44:
 240:.\main.c      ****     for(i = 0; i < stringPosition; i++){
 683              		.loc 1 240 0 is_stmt 0 discriminator 1
 684 002a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 685 002c FB68     		ldr	r3, [r7, #12]
 686 002e 9A42     		cmp	r2, r3
 687 0030 F1D8     		bhi	.L45
 242:.\main.c      ****     }
 243:.\main.c      **** }
 688              		.loc 1 243 0 is_stmt 1
 689 0032 1037     		adds	r7, r7, #16
 690              		.cfi_def_cfa_offset 8
 691 0034 BD46     		mov	sp, r7
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0036 80BD     		pop	{r7, pc}
 695              		.cfi_endproc
 696              	.LFE69:
 697              		.size	stringToDiffMan, .-stringToDiffMan
 698              		.section	.text.asciiToDiffMan,"ax",%progbits
 699              		.align	2
 700              		.global	asciiToDiffMan
 701              		.thumb
 702              		.thumb_func
 703              		.type	asciiToDiffMan, %function
 704              	asciiToDiffMan:
 705              	.LFB70:
 244:.\main.c      **** 
 245:.\main.c      **** /*
 246:.\main.c      **** Helper method. Do not call from main.
 247:.\main.c      **** Converts a ascii char to a differental manchester line encoded version
 248:.\main.c      **** */
 249:.\main.c      **** void asciiToDiffMan(char asciiChar)
 250:.\main.c      **** {
 706              		.loc 1 250 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 104
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              		.cfi_def_cfa_offset 4
 713              		.cfi_offset 7, -4
 714 0002 9BB0     		sub	sp, sp, #108
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 18


 715              		.cfi_def_cfa_offset 112
 716 0004 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 718 0006 0346     		mov	r3, r0
 719 0008 FB71     		strb	r3, [r7, #7]
 251:.\main.c      ****     uint8 previousHalfBit = diffManEncodedData[halfBitIndex-1];
 720              		.loc 1 251 0
 721 000a 6C4B     		ldr	r3, .L58
 722 000c 1B68     		ldr	r3, [r3]
 723 000e 013B     		subs	r3, r3, #1
 724 0010 6B4A     		ldr	r2, .L58+4
 725 0012 52F82330 		ldr	r3, [r2, r3, lsl #2]
 726 0016 87F86730 		strb	r3, [r7, #103]
 252:.\main.c      ****     //send starting 1 bit (encoded)
 253:.\main.c      ****     if(previousHalfBit == 1){
 727              		.loc 1 253 0
 728 001a 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 729 001e 012B     		cmp	r3, #1
 730 0020 16D1     		bne	.L47
 254:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 731              		.loc 1 254 0
 732 0022 664B     		ldr	r3, .L58
 733 0024 1B68     		ldr	r3, [r3]
 734 0026 664A     		ldr	r2, .L58+4
 735 0028 0121     		movs	r1, #1
 736 002a 42F82310 		str	r1, [r2, r3, lsl #2]
 255:.\main.c      ****         halfBitIndex++;
 737              		.loc 1 255 0
 738 002e 634B     		ldr	r3, .L58
 739 0030 1B68     		ldr	r3, [r3]
 740 0032 0133     		adds	r3, r3, #1
 741 0034 614A     		ldr	r2, .L58
 742 0036 1360     		str	r3, [r2]
 256:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 743              		.loc 1 256 0
 744 0038 604B     		ldr	r3, .L58
 745 003a 1B68     		ldr	r3, [r3]
 746 003c 604A     		ldr	r2, .L58+4
 747 003e 0021     		movs	r1, #0
 748 0040 42F82310 		str	r1, [r2, r3, lsl #2]
 257:.\main.c      ****         halfBitIndex++;
 749              		.loc 1 257 0
 750 0044 5D4B     		ldr	r3, .L58
 751 0046 1B68     		ldr	r3, [r3]
 752 0048 0133     		adds	r3, r3, #1
 753 004a 5C4A     		ldr	r2, .L58
 754 004c 1360     		str	r3, [r2]
 755 004e 15E0     		b	.L48
 756              	.L47:
 258:.\main.c      ****     }else{
 259:.\main.c      ****         diffManEncodedData[halfBitIndex] = 0;
 757              		.loc 1 259 0
 758 0050 5A4B     		ldr	r3, .L58
 759 0052 1B68     		ldr	r3, [r3]
 760 0054 5A4A     		ldr	r2, .L58+4
 761 0056 0021     		movs	r1, #0
 762 0058 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 19


 260:.\main.c      ****         halfBitIndex++;
 763              		.loc 1 260 0
 764 005c 574B     		ldr	r3, .L58
 765 005e 1B68     		ldr	r3, [r3]
 766 0060 0133     		adds	r3, r3, #1
 767 0062 564A     		ldr	r2, .L58
 768 0064 1360     		str	r3, [r2]
 261:.\main.c      ****         diffManEncodedData[halfBitIndex] = 1;
 769              		.loc 1 261 0
 770 0066 554B     		ldr	r3, .L58
 771 0068 1B68     		ldr	r3, [r3]
 772 006a 554A     		ldr	r2, .L58+4
 773 006c 0121     		movs	r1, #1
 774 006e 42F82310 		str	r1, [r2, r3, lsl #2]
 262:.\main.c      ****         halfBitIndex++;
 775              		.loc 1 262 0
 776 0072 524B     		ldr	r3, .L58
 777 0074 1B68     		ldr	r3, [r3]
 778 0076 0133     		adds	r3, r3, #1
 779 0078 504A     		ldr	r2, .L58
 780 007a 1360     		str	r3, [r2]
 781              	.L48:
 263:.\main.c      ****     } 
 264:.\main.c      ****     previousHalfBit = diffManEncodedData[halfBitIndex-1];
 782              		.loc 1 264 0
 783 007c 4F4B     		ldr	r3, .L58
 784 007e 1B68     		ldr	r3, [r3]
 785 0080 013B     		subs	r3, r3, #1
 786 0082 4F4A     		ldr	r2, .L58+4
 787 0084 52F82330 		ldr	r3, [r2, r3, lsl #2]
 788 0088 87F86730 		strb	r3, [r7, #103]
 265:.\main.c      **** 
 266:.\main.c      ****     
 267:.\main.c      ****     //convert asciil char to binary value (which will be 7 bits)
 268:.\main.c      ****     unsigned int binaryValueOfChar[20];//index zero is LSB 
 269:.\main.c      ****     int i;
 270:.\main.c      ****     for(i=0; asciiChar>0; i++)
 789              		.loc 1 270 0
 790 008c 0023     		movs	r3, #0
 791 008e 3B66     		str	r3, [r7, #96]
 792 0090 0FE0     		b	.L49
 793              	.L50:
 271:.\main.c      ****     { 
 272:.\main.c      ****         binaryValueOfChar[i]=asciiChar%2; 
 794              		.loc 1 272 0 discriminator 3
 795 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 796 0094 03F00102 		and	r2, r3, #1
 797 0098 3B6E     		ldr	r3, [r7, #96]
 798 009a 9B00     		lsls	r3, r3, #2
 799 009c 07F16801 		add	r1, r7, #104
 800 00a0 0B44     		add	r3, r3, r1
 801 00a2 43F85C2C 		str	r2, [r3, #-92]
 273:.\main.c      ****         asciiChar=asciiChar/2;
 802              		.loc 1 273 0 discriminator 3
 803 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 804 00a8 5B08     		lsrs	r3, r3, #1
 805 00aa FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 20


 270:.\main.c      ****     { 
 806              		.loc 1 270 0 discriminator 3
 807 00ac 3B6E     		ldr	r3, [r7, #96]
 808 00ae 0133     		adds	r3, r3, #1
 809 00b0 3B66     		str	r3, [r7, #96]
 810              	.L49:
 270:.\main.c      ****     { 
 811              		.loc 1 270 0 is_stmt 0 discriminator 1
 812 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 813 00b4 002B     		cmp	r3, #0
 814 00b6 ECD1     		bne	.L50
 274:.\main.c      ****     }
 275:.\main.c      **** 
 276:.\main.c      ****     //differential encode the 7 bits (from the binary version of the char)
 277:.\main.c      ****     //must start at the end of the array so to encode the MSB first 
 278:.\main.c      ****     int j;
 279:.\main.c      ****     for(j=INDEX_OF_MSB;j>=0;j--) 
 815              		.loc 1 279 0 is_stmt 1
 816 00b8 0623     		movs	r3, #6
 817 00ba FB65     		str	r3, [r7, #92]
 818 00bc 76E0     		b	.L51
 819              	.L57:
 280:.\main.c      ****     {
 281:.\main.c      ****         if(binaryValueOfChar[j] == 1)
 820              		.loc 1 281 0
 821 00be FB6D     		ldr	r3, [r7, #92]
 822 00c0 9B00     		lsls	r3, r3, #2
 823 00c2 07F16802 		add	r2, r7, #104
 824 00c6 1344     		add	r3, r3, r2
 825 00c8 53F85C3C 		ldr	r3, [r3, #-92]
 826 00cc 012B     		cmp	r3, #1
 827 00ce 31D1     		bne	.L52
 282:.\main.c      ****         {
 283:.\main.c      ****             //bit == 1
 284:.\main.c      ****             if(previousHalfBit == 1)
 828              		.loc 1 284 0
 829 00d0 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 830 00d4 012B     		cmp	r3, #1
 831 00d6 16D1     		bne	.L53
 285:.\main.c      ****             {
 286:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 832              		.loc 1 286 0
 833 00d8 384B     		ldr	r3, .L58
 834 00da 1B68     		ldr	r3, [r3]
 835 00dc 384A     		ldr	r2, .L58+4
 836 00de 0121     		movs	r1, #1
 837 00e0 42F82310 		str	r1, [r2, r3, lsl #2]
 287:.\main.c      ****                 halfBitIndex++;
 838              		.loc 1 287 0
 839 00e4 354B     		ldr	r3, .L58
 840 00e6 1B68     		ldr	r3, [r3]
 841 00e8 0133     		adds	r3, r3, #1
 842 00ea 344A     		ldr	r2, .L58
 843 00ec 1360     		str	r3, [r2]
 288:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 844              		.loc 1 288 0
 845 00ee 334B     		ldr	r3, .L58
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 21


 846 00f0 1B68     		ldr	r3, [r3]
 847 00f2 334A     		ldr	r2, .L58+4
 848 00f4 0021     		movs	r1, #0
 849 00f6 42F82310 		str	r1, [r2, r3, lsl #2]
 289:.\main.c      ****                 halfBitIndex++;    
 850              		.loc 1 289 0
 851 00fa 304B     		ldr	r3, .L58
 852 00fc 1B68     		ldr	r3, [r3]
 853 00fe 0133     		adds	r3, r3, #1
 854 0100 2E4A     		ldr	r2, .L58
 855 0102 1360     		str	r3, [r2]
 856 0104 47E0     		b	.L55
 857              	.L53:
 290:.\main.c      ****             }
 291:.\main.c      ****             else
 292:.\main.c      ****             {
 293:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 858              		.loc 1 293 0
 859 0106 2D4B     		ldr	r3, .L58
 860 0108 1B68     		ldr	r3, [r3]
 861 010a 2D4A     		ldr	r2, .L58+4
 862 010c 0021     		movs	r1, #0
 863 010e 42F82310 		str	r1, [r2, r3, lsl #2]
 294:.\main.c      ****                 halfBitIndex++;
 864              		.loc 1 294 0
 865 0112 2A4B     		ldr	r3, .L58
 866 0114 1B68     		ldr	r3, [r3]
 867 0116 0133     		adds	r3, r3, #1
 868 0118 284A     		ldr	r2, .L58
 869 011a 1360     		str	r3, [r2]
 295:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 870              		.loc 1 295 0
 871 011c 274B     		ldr	r3, .L58
 872 011e 1B68     		ldr	r3, [r3]
 873 0120 274A     		ldr	r2, .L58+4
 874 0122 0121     		movs	r1, #1
 875 0124 42F82310 		str	r1, [r2, r3, lsl #2]
 296:.\main.c      ****                 halfBitIndex++;
 876              		.loc 1 296 0
 877 0128 244B     		ldr	r3, .L58
 878 012a 1B68     		ldr	r3, [r3]
 879 012c 0133     		adds	r3, r3, #1
 880 012e 234A     		ldr	r2, .L58
 881 0130 1360     		str	r3, [r2]
 882 0132 30E0     		b	.L55
 883              	.L52:
 297:.\main.c      ****             }
 298:.\main.c      ****             
 299:.\main.c      ****         }
 300:.\main.c      ****         else
 301:.\main.c      ****         {
 302:.\main.c      ****             //bit == 0
 303:.\main.c      ****             if(previousHalfBit == 1)
 884              		.loc 1 303 0
 885 0134 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 886 0138 012B     		cmp	r3, #1
 887 013a 16D1     		bne	.L56
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 22


 304:.\main.c      ****             {
 305:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 888              		.loc 1 305 0
 889 013c 1F4B     		ldr	r3, .L58
 890 013e 1B68     		ldr	r3, [r3]
 891 0140 1F4A     		ldr	r2, .L58+4
 892 0142 0021     		movs	r1, #0
 893 0144 42F82310 		str	r1, [r2, r3, lsl #2]
 306:.\main.c      ****                 halfBitIndex++;
 894              		.loc 1 306 0
 895 0148 1C4B     		ldr	r3, .L58
 896 014a 1B68     		ldr	r3, [r3]
 897 014c 0133     		adds	r3, r3, #1
 898 014e 1B4A     		ldr	r2, .L58
 899 0150 1360     		str	r3, [r2]
 307:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 900              		.loc 1 307 0
 901 0152 1A4B     		ldr	r3, .L58
 902 0154 1B68     		ldr	r3, [r3]
 903 0156 1A4A     		ldr	r2, .L58+4
 904 0158 0121     		movs	r1, #1
 905 015a 42F82310 		str	r1, [r2, r3, lsl #2]
 308:.\main.c      ****                 halfBitIndex++;
 906              		.loc 1 308 0
 907 015e 174B     		ldr	r3, .L58
 908 0160 1B68     		ldr	r3, [r3]
 909 0162 0133     		adds	r3, r3, #1
 910 0164 154A     		ldr	r2, .L58
 911 0166 1360     		str	r3, [r2]
 912 0168 15E0     		b	.L55
 913              	.L56:
 309:.\main.c      ****             }
 310:.\main.c      ****             else
 311:.\main.c      ****             {
 312:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 1;
 914              		.loc 1 312 0
 915 016a 144B     		ldr	r3, .L58
 916 016c 1B68     		ldr	r3, [r3]
 917 016e 144A     		ldr	r2, .L58+4
 918 0170 0121     		movs	r1, #1
 919 0172 42F82310 		str	r1, [r2, r3, lsl #2]
 313:.\main.c      ****                 halfBitIndex++;
 920              		.loc 1 313 0
 921 0176 114B     		ldr	r3, .L58
 922 0178 1B68     		ldr	r3, [r3]
 923 017a 0133     		adds	r3, r3, #1
 924 017c 0F4A     		ldr	r2, .L58
 925 017e 1360     		str	r3, [r2]
 314:.\main.c      ****                 diffManEncodedData[halfBitIndex] = 0;
 926              		.loc 1 314 0
 927 0180 0E4B     		ldr	r3, .L58
 928 0182 1B68     		ldr	r3, [r3]
 929 0184 0E4A     		ldr	r2, .L58+4
 930 0186 0021     		movs	r1, #0
 931 0188 42F82310 		str	r1, [r2, r3, lsl #2]
 315:.\main.c      ****                 halfBitIndex++;
 932              		.loc 1 315 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 23


 933 018c 0B4B     		ldr	r3, .L58
 934 018e 1B68     		ldr	r3, [r3]
 935 0190 0133     		adds	r3, r3, #1
 936 0192 0A4A     		ldr	r2, .L58
 937 0194 1360     		str	r3, [r2]
 938              	.L55:
 316:.\main.c      ****             }
 317:.\main.c      ****         }
 318:.\main.c      ****         
 319:.\main.c      ****         previousHalfBit = diffManEncodedData[halfBitIndex-1];
 939              		.loc 1 319 0 discriminator 2
 940 0196 094B     		ldr	r3, .L58
 941 0198 1B68     		ldr	r3, [r3]
 942 019a 013B     		subs	r3, r3, #1
 943 019c 084A     		ldr	r2, .L58+4
 944 019e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 945 01a2 87F86730 		strb	r3, [r7, #103]
 279:.\main.c      ****     {
 946              		.loc 1 279 0 discriminator 2
 947 01a6 FB6D     		ldr	r3, [r7, #92]
 948 01a8 013B     		subs	r3, r3, #1
 949 01aa FB65     		str	r3, [r7, #92]
 950              	.L51:
 279:.\main.c      ****     {
 951              		.loc 1 279 0 is_stmt 0 discriminator 1
 952 01ac FB6D     		ldr	r3, [r7, #92]
 953 01ae 002B     		cmp	r3, #0
 954 01b0 85DA     		bge	.L57
 320:.\main.c      ****     }//end for
 321:.\main.c      ****    
 322:.\main.c      **** }//end function
 955              		.loc 1 322 0 is_stmt 1
 956 01b2 6C37     		adds	r7, r7, #108
 957              		.cfi_def_cfa_offset 4
 958 01b4 BD46     		mov	sp, r7
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 01b6 5DF8047B 		ldr	r7, [sp], #4
 962              		.cfi_restore 7
 963              		.cfi_def_cfa_offset 0
 964 01ba 7047     		bx	lr
 965              	.L59:
 966              		.align	2
 967              	.L58:
 968 01bc 00000000 		.word	halfBitIndex
 969 01c0 00000000 		.word	diffManEncodedData
 970              		.cfi_endproc
 971              	.LFE70:
 972              		.size	asciiToDiffMan, .-asciiToDiffMan
 973              		.global	__aeabi_i2d
 974              		.global	__aeabi_ddiv
 975              		.global	__aeabi_dmul
 976              		.global	__aeabi_d2iz
 977              		.section	.text.transmitData,"ax",%progbits
 978              		.align	2
 979              		.global	transmitData
 980              		.thumb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 24


 981              		.thumb_func
 982              		.type	transmitData, %function
 983              	transmitData:
 984              	.LFB71:
 323:.\main.c      **** 
 324:.\main.c      **** /*
 325:.\main.c      **** Transmits the diff man encoded data. Must have converted string to diff man before calling this met
 326:.\main.c      **** Checks network state before transmitting.
 327:.\main.c      **** Note: halfBitIndex will be equal to the size of the diffManEncodedData array at this point.
 328:.\main.c      **** */
 329:.\main.c      **** void transmitData(){
 985              		.loc 1 329 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989 0000 80B5     		push	{r7, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 82B0     		sub	sp, sp, #8
 994              		.cfi_def_cfa_offset 16
 995 0004 00AF     		add	r7, sp, #0
 996              		.cfi_def_cfa_register 7
 330:.\main.c      ****     int i;
 331:.\main.c      ****     for(i = 0; i < halfBitIndex; i++){
 997              		.loc 1 331 0
 998 0006 0023     		movs	r3, #0
 999 0008 7B60     		str	r3, [r7, #4]
 1000 000a 47E0     		b	.L61
 1001              	.L65:
 332:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 333:.\main.c      ****         //Else break out of transmition and wait random time
 334:.\main.c      ****         if(networkState != idle){
 1002              		.loc 1 334 0
 1003 000c 2B4B     		ldr	r3, .L67
 1004 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1005 0010 002B     		cmp	r3, #0
 1006 0012 2BD0     		beq	.L62
 335:.\main.c      ****             if(networkState == collision){
 1007              		.loc 1 335 0
 1008 0014 294B     		ldr	r3, .L67
 1009 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0018 022B     		cmp	r3, #2
 1011 001a 27D1     		bne	.L62
 1012              	.LBB3:
 336:.\main.c      ****                 TX_pin_Write(1);
 1013              		.loc 1 336 0
 1014 001c 0120     		movs	r0, #1
 1015 001e FFF7FEFF 		bl	TX_pin_Write
 337:.\main.c      ****                 int value = (getRandomNumber()/128.0)*800.0;
 1016              		.loc 1 337 0
 1017 0022 FFF7FEFF 		bl	getRandomNumber
 1018 0026 0346     		mov	r3, r0
 1019 0028 1846     		mov	r0, r3
 1020 002a FFF7FEFF 		bl	__aeabi_i2d
 1021 002e 0246     		mov	r2, r0
 1022 0030 0B46     		mov	r3, r1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 25


 1023 0032 1046     		mov	r0, r2
 1024 0034 1946     		mov	r1, r3
 1025 0036 4FF00002 		mov	r2, #0
 1026 003a 214B     		ldr	r3, .L67+4
 1027 003c FFF7FEFF 		bl	__aeabi_ddiv
 1028 0040 0246     		mov	r2, r0
 1029 0042 0B46     		mov	r3, r1
 1030 0044 1046     		mov	r0, r2
 1031 0046 1946     		mov	r1, r3
 1032 0048 4FF00002 		mov	r2, #0
 1033 004c 1D4B     		ldr	r3, .L67+8
 1034 004e FFF7FEFF 		bl	__aeabi_dmul
 1035 0052 0246     		mov	r2, r0
 1036 0054 0B46     		mov	r3, r1
 1037 0056 1046     		mov	r0, r2
 1038 0058 1946     		mov	r1, r3
 1039 005a FFF7FEFF 		bl	__aeabi_d2iz
 1040 005e 0346     		mov	r3, r0
 1041 0060 3B60     		str	r3, [r7]
 338:.\main.c      ****                
 339:.\main.c      ****                 //Back-off a random time between 0 and 0.8 seconds
 340:.\main.c      ****                 CyDelay(value);
 1042              		.loc 1 340 0
 1043 0062 3B68     		ldr	r3, [r7]
 1044 0064 1846     		mov	r0, r3
 1045 0066 FFF7FEFF 		bl	CyDelay
 341:.\main.c      ****                 //LCD_Position(0,0);      
 342:.\main.c      ****                /// LCD_PrintNumber(value); TODO remove
 343:.\main.c      ****                 break;
 1046              		.loc 1 343 0
 1047 006a 1CE0     		b	.L63
 1048              	.L62:
 1049              	.LBE3:
 344:.\main.c      ****             }
 345:.\main.c      ****         }
 346:.\main.c      ****         TX_pin_Write(diffManEncodedData[i]);
 1050              		.loc 1 346 0
 1051 006c 164A     		ldr	r2, .L67+12
 1052 006e 7B68     		ldr	r3, [r7, #4]
 1053 0070 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1054 0074 DBB2     		uxtb	r3, r3
 1055 0076 1846     		mov	r0, r3
 1056 0078 FFF7FEFF 		bl	TX_pin_Write
 347:.\main.c      ****         Timer_Start();
 1057              		.loc 1 347 0
 1058 007c FFF7FEFF 		bl	Timer_Start
 348:.\main.c      ****         while(!timerExpired); 
 1059              		.loc 1 348 0
 1060 0080 00BF     		nop
 1061              	.L64:
 1062              		.loc 1 348 0 is_stmt 0 discriminator 1
 1063 0082 124B     		ldr	r3, .L67+16
 1064 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 0086 83F00103 		eor	r3, r3, #1
 1066 008a DBB2     		uxtb	r3, r3
 1067 008c 002B     		cmp	r3, #0
 1068 008e F8D1     		bne	.L64
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 26


 349:.\main.c      ****         timerExpired = false;
 1069              		.loc 1 349 0 is_stmt 1 discriminator 2
 1070 0090 0E4B     		ldr	r3, .L67+16
 1071 0092 0022     		movs	r2, #0
 1072 0094 1A70     		strb	r2, [r3]
 331:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 1073              		.loc 1 331 0 discriminator 2
 1074 0096 7B68     		ldr	r3, [r7, #4]
 1075 0098 0133     		adds	r3, r3, #1
 1076 009a 7B60     		str	r3, [r7, #4]
 1077              	.L61:
 331:.\main.c      ****         //check for idle, if network is idle, cotinue to transmit data. 
 1078              		.loc 1 331 0 is_stmt 0 discriminator 1
 1079 009c 0C4B     		ldr	r3, .L67+20
 1080 009e 1B68     		ldr	r3, [r3]
 1081 00a0 7A68     		ldr	r2, [r7, #4]
 1082 00a2 9A42     		cmp	r2, r3
 1083 00a4 B2DB     		blt	.L65
 1084              	.L63:
 350:.\main.c      ****     }
 351:.\main.c      ****     
 352:.\main.c      ****     //when finished transmitting diff manchester encoded data, set flag 
 353:.\main.c      ****     if(i == halfBitIndex){
 1085              		.loc 1 353 0 is_stmt 1
 1086 00a6 0A4B     		ldr	r3, .L67+20
 1087 00a8 1B68     		ldr	r3, [r3]
 1088 00aa 7A68     		ldr	r2, [r7, #4]
 1089 00ac 9A42     		cmp	r2, r3
 1090 00ae 02D1     		bne	.L60
 354:.\main.c      ****         dataTransmissionComplete = true;
 1091              		.loc 1 354 0
 1092 00b0 084B     		ldr	r3, .L67+24
 1093 00b2 0122     		movs	r2, #1
 1094 00b4 1A70     		strb	r2, [r3]
 1095              	.L60:
 355:.\main.c      ****     }
 356:.\main.c      **** }
 1096              		.loc 1 356 0
 1097 00b6 0837     		adds	r7, r7, #8
 1098              		.cfi_def_cfa_offset 8
 1099 00b8 BD46     		mov	sp, r7
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 00ba 80BD     		pop	{r7, pc}
 1103              	.L68:
 1104              		.align	2
 1105              	.L67:
 1106 00bc 00000000 		.word	networkState
 1107 00c0 00006040 		.word	1080033280
 1108 00c4 00008940 		.word	1082720256
 1109 00c8 00000000 		.word	diffManEncodedData
 1110 00cc 00000000 		.word	timerExpired
 1111 00d0 00000000 		.word	halfBitIndex
 1112 00d4 00000000 		.word	dataTransmissionComplete
 1113              		.cfi_endproc
 1114              	.LFE71:
 1115              		.size	transmitData, .-transmitData
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 27


 1116              		.section	.text.setNetworkStateOnLEDs,"ax",%progbits
 1117              		.align	2
 1118              		.global	setNetworkStateOnLEDs
 1119              		.thumb
 1120              		.thumb_func
 1121              		.type	setNetworkStateOnLEDs, %function
 1122              	setNetworkStateOnLEDs:
 1123              	.LFB72:
 357:.\main.c      **** 
 358:.\main.c      **** void setNetworkStateOnLEDs(){
 1124              		.loc 1 358 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 80B5     		push	{r7, lr}
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 359:.\main.c      **** 	 switch(networkState){
 1134              		.loc 1 359 0
 1135 0004 134B     		ldr	r3, .L75
 1136 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1137 0008 012B     		cmp	r3, #1
 1138 000a 04D0     		beq	.L71
 1139 000c 022B     		cmp	r3, #2
 1140 000e 16D0     		beq	.L72
 1141 0010 002B     		cmp	r3, #0
 1142 0012 0AD0     		beq	.L73
 360:.\main.c      ****         case busy:
 361:.\main.c      ****         {
 362:.\main.c      ****             LED4_Write(1);
 363:.\main.c      ****             LED3_Write(0);
 364:.\main.c      ****             LED2_Write(0);
 365:.\main.c      ****             break;
 366:.\main.c      ****         }
 367:.\main.c      ****         case idle:
 368:.\main.c      ****         {
 369:.\main.c      ****             LED3_Write(1);
 370:.\main.c      ****             LED4_Write(0);
 371:.\main.c      ****             LED2_Write(0);
 372:.\main.c      ****             break;
 373:.\main.c      ****         }
 374:.\main.c      ****         case collision:
 375:.\main.c      ****         {
 376:.\main.c      ****             LED2_Write(1);
 377:.\main.c      ****             LED4_Write(0);
 378:.\main.c      ****             LED3_Write(0);
 379:.\main.c      ****             break;
 380:.\main.c      ****         }
 381:.\main.c      ****         default:
 382:.\main.c      ****         {
 383:.\main.c      ****            //error
 384:.\main.c      ****             break;
 1143              		.loc 1 384 0
 1144 0014 1DE0     		b	.L69
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 28


 1145              	.L71:
 362:.\main.c      ****             LED3_Write(0);
 1146              		.loc 1 362 0
 1147 0016 0120     		movs	r0, #1
 1148 0018 FFF7FEFF 		bl	LED4_Write
 363:.\main.c      ****             LED2_Write(0);
 1149              		.loc 1 363 0
 1150 001c 0020     		movs	r0, #0
 1151 001e FFF7FEFF 		bl	LED3_Write
 364:.\main.c      ****             break;
 1152              		.loc 1 364 0
 1153 0022 0020     		movs	r0, #0
 1154 0024 FFF7FEFF 		bl	LED2_Write
 365:.\main.c      ****         }
 1155              		.loc 1 365 0
 1156 0028 13E0     		b	.L69
 1157              	.L73:
 369:.\main.c      ****             LED4_Write(0);
 1158              		.loc 1 369 0
 1159 002a 0120     		movs	r0, #1
 1160 002c FFF7FEFF 		bl	LED3_Write
 370:.\main.c      ****             LED2_Write(0);
 1161              		.loc 1 370 0
 1162 0030 0020     		movs	r0, #0
 1163 0032 FFF7FEFF 		bl	LED4_Write
 371:.\main.c      ****             break;
 1164              		.loc 1 371 0
 1165 0036 0020     		movs	r0, #0
 1166 0038 FFF7FEFF 		bl	LED2_Write
 372:.\main.c      ****         }
 1167              		.loc 1 372 0
 1168 003c 09E0     		b	.L69
 1169              	.L72:
 376:.\main.c      ****             LED4_Write(0);
 1170              		.loc 1 376 0
 1171 003e 0120     		movs	r0, #1
 1172 0040 FFF7FEFF 		bl	LED2_Write
 377:.\main.c      ****             LED3_Write(0);
 1173              		.loc 1 377 0
 1174 0044 0020     		movs	r0, #0
 1175 0046 FFF7FEFF 		bl	LED4_Write
 378:.\main.c      ****             break;
 1176              		.loc 1 378 0
 1177 004a 0020     		movs	r0, #0
 1178 004c FFF7FEFF 		bl	LED3_Write
 379:.\main.c      ****         }
 1179              		.loc 1 379 0
 1180 0050 00BF     		nop
 1181              	.L69:
 385:.\main.c      ****         } 
 386:.\main.c      **** 	}
 387:.\main.c      **** }
 1182              		.loc 1 387 0
 1183 0052 80BD     		pop	{r7, pc}
 1184              	.L76:
 1185              		.align	2
 1186              	.L75:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 29


 1187 0054 00000000 		.word	networkState
 1188              		.cfi_endproc
 1189              	.LFE72:
 1190              		.size	setNetworkStateOnLEDs, .-setNetworkStateOnLEDs
 1191              		.section	.text.getRandomNumber,"ax",%progbits
 1192              		.align	2
 1193              		.global	getRandomNumber
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	getRandomNumber, %function
 1197              	getRandomNumber:
 1198              	.LFB73:
 388:.\main.c      **** 
 389:.\main.c      **** /*
 390:.\main.c      **** Generates a random value from 1 to 128. Used in the random backoff time equation: (N/128)(0.800 sec
 391:.\main.c      **** */
 392:.\main.c      **** int getRandomNumber()
 393:.\main.c      **** {
 1199              		.loc 1 393 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 16
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 84B0     		sub	sp, sp, #16
 1208              		.cfi_def_cfa_offset 24
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 394:.\main.c      ****     const int MIN_N = 1;
 1211              		.loc 1 394 0
 1212 0006 0123     		movs	r3, #1
 1213 0008 FB60     		str	r3, [r7, #12]
 395:.\main.c      ****     const int MAX_N = 128;
 1214              		.loc 1 395 0
 1215 000a 8023     		movs	r3, #128
 1216 000c BB60     		str	r3, [r7, #8]
 396:.\main.c      ****         
 397:.\main.c      ****     int n;
 398:.\main.c      **** /*
 399:.\main.c      ****     Get first and second random numbers.
 400:.\main.c      ****     */
 401:.\main.c      ****     n =rand() % (MAX_N - MIN_N + 1) + MIN_N;
 1217              		.loc 1 401 0
 1218 000e FFF7FEFF 		bl	rand
 1219 0012 0246     		mov	r2, r0
 1220 0014 B968     		ldr	r1, [r7, #8]
 1221 0016 FB68     		ldr	r3, [r7, #12]
 1222 0018 CB1A     		subs	r3, r1, r3
 1223 001a 0133     		adds	r3, r3, #1
 1224 001c 92FBF3F1 		sdiv	r1, r2, r3
 1225 0020 03FB01F3 		mul	r3, r3, r1
 1226 0024 D21A     		subs	r2, r2, r3
 1227 0026 FB68     		ldr	r3, [r7, #12]
 1228 0028 1344     		add	r3, r3, r2
 1229 002a 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 30


 402:.\main.c      ****     return n;
 1230              		.loc 1 402 0
 1231 002c 7B68     		ldr	r3, [r7, #4]
 403:.\main.c      **** }
 1232              		.loc 1 403 0
 1233 002e 1846     		mov	r0, r3
 1234 0030 1037     		adds	r7, r7, #16
 1235              		.cfi_def_cfa_offset 8
 1236 0032 BD46     		mov	sp, r7
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 0034 80BD     		pop	{r7, pc}
 1240              		.cfi_endproc
 1241              	.LFE73:
 1242              		.size	getRandomNumber, .-getRandomNumber
 1243 0036 00BF     		.section	.text.diffManToASCII,"ax",%progbits
 1244              		.align	2
 1245              		.global	diffManToASCII
 1246              		.thumb
 1247              		.thumb_func
 1248              		.type	diffManToASCII, %function
 1249              	diffManToASCII:
 1250              	.LFB74:
 404:.\main.c      **** 
 405:.\main.c      **** /*
 406:.\main.c      **** Helper method.
 407:.\main.c      **** Convert differental manchester line encoded byte to ascii char
 408:.\main.c      **** 
 409:.\main.c      **** charPtr = pointer to char 
 410:.\main.c      **** */
 411:.\main.c      **** void diffManToASCII(char *charPtr)
 412:.\main.c      **** {
 1251              		.loc 1 412 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 16
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256 0000 80B4     		push	{r7}
 1257              		.cfi_def_cfa_offset 4
 1258              		.cfi_offset 7, -4
 1259 0002 85B0     		sub	sp, sp, #20
 1260              		.cfi_def_cfa_offset 24
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 1263 0006 7860     		str	r0, [r7, #4]
 413:.\main.c      ****     int i;
 414:.\main.c      ****     for(i = 0; i < EIGHT_BITS; i++){
 1264              		.loc 1 414 0
 1265 0008 0023     		movs	r3, #0
 1266 000a FB60     		str	r3, [r7, #12]
 1267 000c 44E0     		b	.L80
 1268              	.L86:
 1269              	.LBB4:
 415:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1270              		.loc 1 415 0
 1271 000e 264B     		ldr	r3, .L87
 1272 0010 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 31


 1273 0012 013B     		subs	r3, r3, #1
 1274 0014 254A     		ldr	r2, .L87+4
 1275 0016 D35C     		ldrb	r3, [r2, r3]
 1276 0018 FB72     		strb	r3, [r7, #11]
 416:.\main.c      ****         //send starting 1 bit (encoded)
 417:.\main.c      ****         if(diffManReceivedData[receivedDataIndex] == 1){
 1277              		.loc 1 417 0
 1278 001a 234B     		ldr	r3, .L87
 1279 001c 1B68     		ldr	r3, [r3]
 1280 001e 234A     		ldr	r2, .L87+4
 1281 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1282 0022 012B     		cmp	r3, #1
 1283 0024 18D1     		bne	.L81
 418:.\main.c      ****             //current half bit is 1
 419:.\main.c      ****             if(previousHalfBit == 1)
 1284              		.loc 1 419 0
 1285 0026 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1286 0028 012B     		cmp	r3, #1
 1287 002a 10D1     		bne	.L82
 420:.\main.c      ****             {
 421:.\main.c      ****                 *charPtr |= (1 << (7 - i));      
 1288              		.loc 1 421 0
 1289 002c 7B68     		ldr	r3, [r7, #4]
 1290 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1291 0030 D9B2     		uxtb	r1, r3
 1292 0032 FB68     		ldr	r3, [r7, #12]
 1293 0034 C3F10703 		rsb	r3, r3, #7
 1294 0038 0122     		movs	r2, #1
 1295 003a 02FA03F3 		lsl	r3, r2, r3
 1296 003e DBB2     		uxtb	r3, r3
 1297 0040 0A46     		mov	r2, r1
 1298 0042 1343     		orrs	r3, r3, r2
 1299 0044 DBB2     		uxtb	r3, r3
 1300 0046 DAB2     		uxtb	r2, r3
 1301 0048 7B68     		ldr	r3, [r7, #4]
 1302 004a 1A70     		strb	r2, [r3]
 1303 004c 1CE0     		b	.L84
 1304              	.L82:
 422:.\main.c      ****             }
 423:.\main.c      ****             else
 424:.\main.c      ****             {
 425:.\main.c      ****                 *charPtr |= (0 << (7 - i));    
 1305              		.loc 1 425 0
 1306 004e 7B68     		ldr	r3, [r7, #4]
 1307 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1308 0052 7B68     		ldr	r3, [r7, #4]
 1309 0054 1A70     		strb	r2, [r3]
 1310 0056 17E0     		b	.L84
 1311              	.L81:
 426:.\main.c      ****             }
 427:.\main.c      ****         }
 428:.\main.c      ****         else{
 429:.\main.c      ****             //current half bit is 0
 430:.\main.c      ****             if(previousHalfBit == 1)
 1312              		.loc 1 430 0
 1313 0058 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1314 005a 012B     		cmp	r3, #1
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 32


 1315 005c 04D1     		bne	.L85
 431:.\main.c      ****             {
 432:.\main.c      ****                 *charPtr |= (0 << (7 - i));    
 1316              		.loc 1 432 0
 1317 005e 7B68     		ldr	r3, [r7, #4]
 1318 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1319 0062 7B68     		ldr	r3, [r7, #4]
 1320 0064 1A70     		strb	r2, [r3]
 1321 0066 0FE0     		b	.L84
 1322              	.L85:
 433:.\main.c      ****             }
 434:.\main.c      ****             else
 435:.\main.c      ****             {
 436:.\main.c      ****                 *charPtr |= (1 << (7 - i));    
 1323              		.loc 1 436 0
 1324 0068 7B68     		ldr	r3, [r7, #4]
 1325 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 006c D9B2     		uxtb	r1, r3
 1327 006e FB68     		ldr	r3, [r7, #12]
 1328 0070 C3F10703 		rsb	r3, r3, #7
 1329 0074 0122     		movs	r2, #1
 1330 0076 02FA03F3 		lsl	r3, r2, r3
 1331 007a DBB2     		uxtb	r3, r3
 1332 007c 0A46     		mov	r2, r1
 1333 007e 1343     		orrs	r3, r3, r2
 1334 0080 DBB2     		uxtb	r3, r3
 1335 0082 DAB2     		uxtb	r2, r3
 1336 0084 7B68     		ldr	r3, [r7, #4]
 1337 0086 1A70     		strb	r2, [r3]
 1338              	.L84:
 437:.\main.c      ****             }
 438:.\main.c      ****         } 
 439:.\main.c      ****         receivedDataIndex += 2;
 1339              		.loc 1 439 0 discriminator 2
 1340 0088 074B     		ldr	r3, .L87
 1341 008a 1B68     		ldr	r3, [r3]
 1342 008c 0233     		adds	r3, r3, #2
 1343 008e 064A     		ldr	r2, .L87
 1344 0090 1360     		str	r3, [r2]
 1345              	.LBE4:
 414:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1346              		.loc 1 414 0 discriminator 2
 1347 0092 FB68     		ldr	r3, [r7, #12]
 1348 0094 0133     		adds	r3, r3, #1
 1349 0096 FB60     		str	r3, [r7, #12]
 1350              	.L80:
 414:.\main.c      ****         uint8 previousHalfBit = diffManReceivedData[receivedDataIndex-1];
 1351              		.loc 1 414 0 is_stmt 0 discriminator 1
 1352 0098 FB68     		ldr	r3, [r7, #12]
 1353 009a 072B     		cmp	r3, #7
 1354 009c B7DD     		ble	.L86
 440:.\main.c      ****     }//end for loop
 441:.\main.c      ****    
 442:.\main.c      **** }
 1355              		.loc 1 442 0 is_stmt 1
 1356 009e 1437     		adds	r7, r7, #20
 1357              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 33


 1358 00a0 BD46     		mov	sp, r7
 1359              		.cfi_def_cfa_register 13
 1360              		@ sp needed
 1361 00a2 5DF8047B 		ldr	r7, [sp], #4
 1362              		.cfi_restore 7
 1363              		.cfi_def_cfa_offset 0
 1364 00a6 7047     		bx	lr
 1365              	.L88:
 1366              		.align	2
 1367              	.L87:
 1368 00a8 00000000 		.word	receivedDataIndex
 1369 00ac 00000000 		.word	diffManReceivedData
 1370              		.cfi_endproc
 1371              	.LFE74:
 1372              		.size	diffManToASCII, .-diffManToASCII
 1373              		.section	.text.printChar,"ax",%progbits
 1374              		.align	2
 1375              		.global	printChar
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	printChar, %function
 1379              	printChar:
 1380              	.LFB75:
 443:.\main.c      **** 
 444:.\main.c      **** //Formats char and prints to LCD
 445:.\main.c      **** void printChar(char *charPtr){
 1381              		.loc 1 445 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 82B0     		sub	sp, sp, #8
 1390              		.cfi_def_cfa_offset 16
 1391 0004 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 1393 0006 7860     		str	r0, [r7, #4]
 446:.\main.c      ****     ///Remove leading 1 bit of char
 447:.\main.c      ****     *charPtr &= ASCII_CHAR_MASK;
 1394              		.loc 1 447 0
 1395 0008 7B68     		ldr	r3, [r7, #4]
 1396 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 000c 03F07F03 		and	r3, r3, #127
 1398 0010 DAB2     		uxtb	r2, r3
 1399 0012 7B68     		ldr	r3, [r7, #4]
 1400 0014 1A70     		strb	r2, [r3]
 448:.\main.c      ****     
 449:.\main.c      ****     LCD_PutChar(*charPtr);
 1401              		.loc 1 449 0
 1402 0016 7B68     		ldr	r3, [r7, #4]
 1403 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1404 001a 1846     		mov	r0, r3
 1405 001c FFF7FEFF 		bl	LCD_PutChar
 450:.\main.c      **** }
 1406              		.loc 1 450 0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 34


 1407 0020 0837     		adds	r7, r7, #8
 1408              		.cfi_def_cfa_offset 8
 1409 0022 BD46     		mov	sp, r7
 1410              		.cfi_def_cfa_register 13
 1411              		@ sp needed
 1412 0024 80BD     		pop	{r7, pc}
 1413              		.cfi_endproc
 1414              	.LFE75:
 1415              		.size	printChar, .-printChar
 1416 0026 00BF     		.text
 1417              	.Letext0:
 1418              		.file 2 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1419              		.file 3 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1420              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1421              		.file 5 "d:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 1422              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1423              		.section	.debug_info,"",%progbits
 1424              	.Ldebug_info0:
 1425 0000 81040000 		.4byte	0x481
 1426 0004 0400     		.2byte	0x4
 1427 0006 00000000 		.4byte	.Ldebug_abbrev0
 1428 000a 04       		.byte	0x4
 1429 000b 01       		.uleb128 0x1
 1430 000c 24010000 		.4byte	.LASF58
 1431 0010 01       		.byte	0x1
 1432 0011 52030000 		.4byte	.LASF59
 1433 0015 AE000000 		.4byte	.LASF60
 1434 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1435 001d 00000000 		.4byte	0
 1436 0021 00000000 		.4byte	.Ldebug_line0
 1437 0025 02       		.uleb128 0x2
 1438 0026 01       		.byte	0x1
 1439 0027 06       		.byte	0x6
 1440 0028 07020000 		.4byte	.LASF0
 1441 002c 02       		.uleb128 0x2
 1442 002d 01       		.byte	0x1
 1443 002e 08       		.byte	0x8
 1444 002f D2010000 		.4byte	.LASF1
 1445 0033 02       		.uleb128 0x2
 1446 0034 02       		.byte	0x2
 1447 0035 05       		.byte	0x5
 1448 0036 67000000 		.4byte	.LASF2
 1449 003a 02       		.uleb128 0x2
 1450 003b 02       		.byte	0x2
 1451 003c 07       		.byte	0x7
 1452 003d 97020000 		.4byte	.LASF3
 1453 0041 03       		.uleb128 0x3
 1454 0042 5B030000 		.4byte	.LASF9
 1455 0046 02       		.byte	0x2
 1456 0047 3F       		.byte	0x3f
 1457 0048 4C000000 		.4byte	0x4c
 1458 004c 02       		.uleb128 0x2
 1459 004d 04       		.byte	0x4
 1460 004e 05       		.byte	0x5
 1461 004f 77020000 		.4byte	.LASF4
 1462 0053 02       		.uleb128 0x2
 1463 0054 04       		.byte	0x4
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 35


 1464 0055 07       		.byte	0x7
 1465 0056 43020000 		.4byte	.LASF5
 1466 005a 02       		.uleb128 0x2
 1467 005b 08       		.byte	0x8
 1468 005c 05       		.byte	0x5
 1469 005d EB000000 		.4byte	.LASF6
 1470 0061 02       		.uleb128 0x2
 1471 0062 08       		.byte	0x8
 1472 0063 07       		.byte	0x7
 1473 0064 F9000000 		.4byte	.LASF7
 1474 0068 04       		.uleb128 0x4
 1475 0069 04       		.byte	0x4
 1476 006a 05       		.byte	0x5
 1477 006b 696E7400 		.ascii	"int\000"
 1478 006f 02       		.uleb128 0x2
 1479 0070 04       		.byte	0x4
 1480 0071 07       		.byte	0x7
 1481 0072 36020000 		.4byte	.LASF8
 1482 0076 03       		.uleb128 0x3
 1483 0077 8F020000 		.4byte	.LASF10
 1484 007b 03       		.byte	0x3
 1485 007c 2C       		.byte	0x2c
 1486 007d 41000000 		.4byte	0x41
 1487 0081 03       		.uleb128 0x3
 1488 0082 9D000000 		.4byte	.LASF11
 1489 0086 04       		.byte	0x4
 1490 0087 C2       		.byte	0xc2
 1491 0088 2C000000 		.4byte	0x2c
 1492 008c 02       		.uleb128 0x2
 1493 008d 04       		.byte	0x4
 1494 008e 04       		.byte	0x4
 1495 008f E5000000 		.4byte	.LASF12
 1496 0093 02       		.uleb128 0x2
 1497 0094 08       		.byte	0x8
 1498 0095 04       		.byte	0x4
 1499 0096 E6020000 		.4byte	.LASF13
 1500 009a 02       		.uleb128 0x2
 1501 009b 01       		.byte	0x1
 1502 009c 08       		.byte	0x8
 1503 009d 65020000 		.4byte	.LASF14
 1504 00a1 05       		.uleb128 0x5
 1505 00a2 CF020000 		.4byte	.LASF15
 1506 00a6 04       		.byte	0x4
 1507 00a7 6C01     		.2byte	0x16c
 1508 00a9 AD000000 		.4byte	0xad
 1509 00ad 06       		.uleb128 0x6
 1510 00ae 81000000 		.4byte	0x81
 1511 00b2 02       		.uleb128 0x2
 1512 00b3 04       		.byte	0x4
 1513 00b4 07       		.byte	0x7
 1514 00b5 36000000 		.4byte	.LASF16
 1515 00b9 07       		.uleb128 0x7
 1516 00ba 04       		.byte	0x4
 1517 00bb 9A000000 		.4byte	0x9a
 1518 00bf 03       		.uleb128 0x3
 1519 00c0 81000000 		.4byte	.LASF17
 1520 00c4 05       		.byte	0x5
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 36


 1521 00c5 7A       		.byte	0x7a
 1522 00c6 4C000000 		.4byte	0x4c
 1523 00ca 08       		.uleb128 0x8
 1524 00cb 20000000 		.4byte	.LASF61
 1525 00cf 01       		.byte	0x1
 1526 00d0 01       		.byte	0x1
 1527 00d1 1F       		.byte	0x1f
 1528 00d2 E9000000 		.4byte	0xe9
 1529 00d6 09       		.uleb128 0x9
 1530 00d7 22020000 		.4byte	.LASF18
 1531 00db 00       		.sleb128 0
 1532 00dc 09       		.uleb128 0x9
 1533 00dd B8020000 		.4byte	.LASF19
 1534 00e1 01       		.sleb128 1
 1535 00e2 09       		.uleb128 0x9
 1536 00e3 77000000 		.4byte	.LASF20
 1537 00e7 02       		.sleb128 2
 1538 00e8 00       		.byte	0
 1539 00e9 0A       		.uleb128 0xa
 1540 00ea 0D000000 		.4byte	.LASF21
 1541 00ee 01       		.byte	0x1
 1542 00ef 24       		.byte	0x24
 1543 00f0 00000000 		.4byte	.LFB63
 1544 00f4 28000000 		.4byte	.LFE63-.LFB63
 1545 00f8 01       		.uleb128 0x1
 1546 00f9 9C       		.byte	0x9c
 1547 00fa 0A       		.uleb128 0xa
 1548 00fb 57000000 		.4byte	.LASF22
 1549 00ff 01       		.byte	0x1
 1550 0100 2E       		.byte	0x2e
 1551 0101 00000000 		.4byte	.LFB64
 1552 0105 58000000 		.4byte	.LFE64-.LFB64
 1553 0109 01       		.uleb128 0x1
 1554 010a 9C       		.byte	0x9c
 1555 010b 0A       		.uleb128 0xa
 1556 010c 7F030000 		.4byte	.LASF23
 1557 0110 01       		.byte	0x1
 1558 0111 3F       		.byte	0x3f
 1559 0112 00000000 		.4byte	.LFB65
 1560 0116 1C000000 		.4byte	.LFE65-.LFB65
 1561 011a 01       		.uleb128 0x1
 1562 011b 9C       		.byte	0x9c
 1563 011c 0B       		.uleb128 0xb
 1564 011d 30030000 		.4byte	.LASF24
 1565 0121 01       		.byte	0x1
 1566 0122 46       		.byte	0x46
 1567 0123 00000000 		.4byte	.LFB66
 1568 0127 38000000 		.4byte	.LFE66-.LFB66
 1569 012b 01       		.uleb128 0x1
 1570 012c 9C       		.byte	0x9c
 1571 012d 0C       		.uleb128 0xc
 1572 012e 52000000 		.4byte	.LASF30
 1573 0132 01       		.byte	0x1
 1574 0133 4E       		.byte	0x4e
 1575 0134 68000000 		.4byte	0x68
 1576 0138 00000000 		.4byte	.LFB67
 1577 013c 24020000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 37


 1578 0140 01       		.uleb128 0x1
 1579 0141 9C       		.byte	0x9c
 1580 0142 A7010000 		.4byte	0x1a7
 1581 0146 0D       		.uleb128 0xd
 1582 0147 727800   		.ascii	"rx\000"
 1583 014a 01       		.byte	0x1
 1584 014b 51       		.byte	0x51
 1585 014c 9A000000 		.4byte	0x9a
 1586 0150 02       		.uleb128 0x2
 1587 0151 91       		.byte	0x91
 1588 0152 76       		.sleb128 -10
 1589 0153 0E       		.uleb128 0xe
 1590 0154 A3000000 		.4byte	.LASF25
 1591 0158 01       		.byte	0x1
 1592 0159 52       		.byte	0x52
 1593 015a A7010000 		.4byte	0x1a7
 1594 015e 03       		.uleb128 0x3
 1595 015f 91       		.byte	0x91
 1596 0160 8C7F     		.sleb128 -116
 1597 0162 0E       		.uleb128 0xe
 1598 0163 80020000 		.4byte	.LASF26
 1599 0167 01       		.byte	0x1
 1600 0168 53       		.byte	0x53
 1601 0169 81000000 		.4byte	0x81
 1602 016d 02       		.uleb128 0x2
 1603 016e 91       		.byte	0x91
 1604 016f 77       		.sleb128 -9
 1605 0170 0E       		.uleb128 0xe
 1606 0171 AA020000 		.4byte	.LASF27
 1607 0175 01       		.byte	0x1
 1608 0176 5D       		.byte	0x5d
 1609 0177 BF000000 		.4byte	0xbf
 1610 017b 03       		.uleb128 0x3
 1611 017c 91       		.byte	0x91
 1612 017d 887F     		.sleb128 -120
 1613 017f 0F       		.uleb128 0xf
 1614 0180 A2000000 		.4byte	.LBB2
 1615 0184 10000000 		.4byte	.LBE2-.LBB2
 1616 0188 0E       		.uleb128 0xe
 1617 0189 6A020000 		.4byte	.LASF28
 1618 018d 01       		.byte	0x1
 1619 018e 8F       		.byte	0x8f
 1620 018f 9A000000 		.4byte	0x9a
 1621 0193 03       		.uleb128 0x3
 1622 0194 91       		.byte	0x91
 1623 0195 877F     		.sleb128 -121
 1624 0197 0E       		.uleb128 0xe
 1625 0198 95000000 		.4byte	.LASF29
 1626 019c 01       		.byte	0x1
 1627 019d 90       		.byte	0x90
 1628 019e B9000000 		.4byte	0xb9
 1629 01a2 02       		.uleb128 0x2
 1630 01a3 91       		.byte	0x91
 1631 01a4 70       		.sleb128 -16
 1632 01a5 00       		.byte	0
 1633 01a6 00       		.byte	0
 1634 01a7 10       		.uleb128 0x10
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 38


 1635 01a8 9A000000 		.4byte	0x9a
 1636 01ac B7010000 		.4byte	0x1b7
 1637 01b0 11       		.uleb128 0x11
 1638 01b1 B2000000 		.4byte	0xb2
 1639 01b5 63       		.byte	0x63
 1640 01b6 00       		.byte	0
 1641 01b7 12       		.uleb128 0x12
 1642 01b8 EF010000 		.4byte	.LASF37
 1643 01bc 01       		.byte	0x1
 1644 01bd E1       		.byte	0xe1
 1645 01be 00000000 		.4byte	.LFB68
 1646 01c2 48000000 		.4byte	.LFE68-.LFB68
 1647 01c6 01       		.uleb128 0x1
 1648 01c7 9C       		.byte	0x9c
 1649 01c8 13       		.uleb128 0x13
 1650 01c9 C2010000 		.4byte	.LASF31
 1651 01cd 01       		.byte	0x1
 1652 01ce ED       		.byte	0xed
 1653 01cf 00000000 		.4byte	.LFB69
 1654 01d3 38000000 		.4byte	.LFE69-.LFB69
 1655 01d7 01       		.uleb128 0x1
 1656 01d8 9C       		.byte	0x9c
 1657 01d9 06020000 		.4byte	0x206
 1658 01dd 14       		.uleb128 0x14
 1659 01de A3000000 		.4byte	.LASF25
 1660 01e2 01       		.byte	0x1
 1661 01e3 ED       		.byte	0xed
 1662 01e4 B9000000 		.4byte	0xb9
 1663 01e8 02       		.uleb128 0x2
 1664 01e9 91       		.byte	0x91
 1665 01ea 6C       		.sleb128 -20
 1666 01eb 14       		.uleb128 0x14
 1667 01ec 80020000 		.4byte	.LASF26
 1668 01f0 01       		.byte	0x1
 1669 01f1 ED       		.byte	0xed
 1670 01f2 81000000 		.4byte	0x81
 1671 01f6 02       		.uleb128 0x2
 1672 01f7 91       		.byte	0x91
 1673 01f8 6B       		.sleb128 -21
 1674 01f9 0D       		.uleb128 0xd
 1675 01fa 6900     		.ascii	"i\000"
 1676 01fc 01       		.byte	0x1
 1677 01fd EF       		.byte	0xef
 1678 01fe 6F000000 		.4byte	0x6f
 1679 0202 02       		.uleb128 0x2
 1680 0203 91       		.byte	0x91
 1681 0204 74       		.sleb128 -12
 1682 0205 00       		.byte	0
 1683 0206 15       		.uleb128 0x15
 1684 0207 13020000 		.4byte	.LASF32
 1685 020b 01       		.byte	0x1
 1686 020c F9       		.byte	0xf9
 1687 020d 00000000 		.4byte	.LFB70
 1688 0211 C4010000 		.4byte	.LFE70-.LFB70
 1689 0215 01       		.uleb128 0x1
 1690 0216 9C       		.byte	0x9c
 1691 0217 63020000 		.4byte	0x263
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 39


 1692 021b 14       		.uleb128 0x14
 1693 021c 5B020000 		.4byte	.LASF33
 1694 0220 01       		.byte	0x1
 1695 0221 F9       		.byte	0xf9
 1696 0222 9A000000 		.4byte	0x9a
 1697 0226 03       		.uleb128 0x3
 1698 0227 91       		.byte	0x91
 1699 0228 977F     		.sleb128 -105
 1700 022a 0E       		.uleb128 0xe
 1701 022b 99030000 		.4byte	.LASF34
 1702 022f 01       		.byte	0x1
 1703 0230 FB       		.byte	0xfb
 1704 0231 81000000 		.4byte	0x81
 1705 0235 02       		.uleb128 0x2
 1706 0236 91       		.byte	0x91
 1707 0237 77       		.sleb128 -9
 1708 0238 16       		.uleb128 0x16
 1709 0239 40030000 		.4byte	.LASF35
 1710 023d 01       		.byte	0x1
 1711 023e 0C01     		.2byte	0x10c
 1712 0240 63020000 		.4byte	0x263
 1713 0244 03       		.uleb128 0x3
 1714 0245 91       		.byte	0x91
 1715 0246 9C7F     		.sleb128 -100
 1716 0248 17       		.uleb128 0x17
 1717 0249 6900     		.ascii	"i\000"
 1718 024b 01       		.byte	0x1
 1719 024c 0D01     		.2byte	0x10d
 1720 024e 68000000 		.4byte	0x68
 1721 0252 02       		.uleb128 0x2
 1722 0253 91       		.byte	0x91
 1723 0254 70       		.sleb128 -16
 1724 0255 17       		.uleb128 0x17
 1725 0256 6A00     		.ascii	"j\000"
 1726 0258 01       		.byte	0x1
 1727 0259 1601     		.2byte	0x116
 1728 025b 68000000 		.4byte	0x68
 1729 025f 02       		.uleb128 0x2
 1730 0260 91       		.byte	0x91
 1731 0261 6C       		.sleb128 -20
 1732 0262 00       		.byte	0
 1733 0263 10       		.uleb128 0x10
 1734 0264 6F000000 		.4byte	0x6f
 1735 0268 73020000 		.4byte	0x273
 1736 026c 11       		.uleb128 0x11
 1737 026d B2000000 		.4byte	0xb2
 1738 0271 13       		.byte	0x13
 1739 0272 00       		.byte	0
 1740 0273 18       		.uleb128 0x18
 1741 0274 00000000 		.4byte	.LASF62
 1742 0278 01       		.byte	0x1
 1743 0279 4901     		.2byte	0x149
 1744 027b 00000000 		.4byte	.LFB71
 1745 027f D8000000 		.4byte	.LFE71-.LFB71
 1746 0283 01       		.uleb128 0x1
 1747 0284 9C       		.byte	0x9c
 1748 0285 B0020000 		.4byte	0x2b0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 40


 1749 0289 17       		.uleb128 0x17
 1750 028a 6900     		.ascii	"i\000"
 1751 028c 01       		.byte	0x1
 1752 028d 4A01     		.2byte	0x14a
 1753 028f 68000000 		.4byte	0x68
 1754 0293 02       		.uleb128 0x2
 1755 0294 91       		.byte	0x91
 1756 0295 74       		.sleb128 -12
 1757 0296 0F       		.uleb128 0xf
 1758 0297 1C000000 		.4byte	.LBB3
 1759 029b 50000000 		.4byte	.LBE3-.LBB3
 1760 029f 16       		.uleb128 0x16
 1761 02a0 71000000 		.4byte	.LASF36
 1762 02a4 01       		.byte	0x1
 1763 02a5 5101     		.2byte	0x151
 1764 02a7 68000000 		.4byte	0x68
 1765 02ab 02       		.uleb128 0x2
 1766 02ac 91       		.byte	0x91
 1767 02ad 70       		.sleb128 -16
 1768 02ae 00       		.byte	0
 1769 02af 00       		.byte	0
 1770 02b0 19       		.uleb128 0x19
 1771 02b1 ED020000 		.4byte	.LASF38
 1772 02b5 01       		.byte	0x1
 1773 02b6 6601     		.2byte	0x166
 1774 02b8 00000000 		.4byte	.LFB72
 1775 02bc 58000000 		.4byte	.LFE72-.LFB72
 1776 02c0 01       		.uleb128 0x1
 1777 02c1 9C       		.byte	0x9c
 1778 02c2 1A       		.uleb128 0x1a
 1779 02c3 26000000 		.4byte	.LASF39
 1780 02c7 01       		.byte	0x1
 1781 02c8 8801     		.2byte	0x188
 1782 02ca 68000000 		.4byte	0x68
 1783 02ce 00000000 		.4byte	.LFB73
 1784 02d2 36000000 		.4byte	.LFE73-.LFB73
 1785 02d6 01       		.uleb128 0x1
 1786 02d7 9C       		.byte	0x9c
 1787 02d8 08030000 		.4byte	0x308
 1788 02dc 16       		.uleb128 0x16
 1789 02dd 55020000 		.4byte	.LASF40
 1790 02e1 01       		.byte	0x1
 1791 02e2 8A01     		.2byte	0x18a
 1792 02e4 08030000 		.4byte	0x308
 1793 02e8 02       		.uleb128 0x2
 1794 02e9 91       		.byte	0x91
 1795 02ea 74       		.sleb128 -12
 1796 02eb 16       		.uleb128 0x16
 1797 02ec B2010000 		.4byte	.LASF41
 1798 02f0 01       		.byte	0x1
 1799 02f1 8B01     		.2byte	0x18b
 1800 02f3 08030000 		.4byte	0x308
 1801 02f7 02       		.uleb128 0x2
 1802 02f8 91       		.byte	0x91
 1803 02f9 70       		.sleb128 -16
 1804 02fa 17       		.uleb128 0x17
 1805 02fb 6E00     		.ascii	"n\000"
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 41


 1806 02fd 01       		.byte	0x1
 1807 02fe 8D01     		.2byte	0x18d
 1808 0300 68000000 		.4byte	0x68
 1809 0304 02       		.uleb128 0x2
 1810 0305 91       		.byte	0x91
 1811 0306 6C       		.sleb128 -20
 1812 0307 00       		.byte	0
 1813 0308 1B       		.uleb128 0x1b
 1814 0309 68000000 		.4byte	0x68
 1815 030d 1C       		.uleb128 0x1c
 1816 030e 27020000 		.4byte	.LASF42
 1817 0312 01       		.byte	0x1
 1818 0313 9B01     		.2byte	0x19b
 1819 0315 00000000 		.4byte	.LFB74
 1820 0319 B0000000 		.4byte	.LFE74-.LFB74
 1821 031d 01       		.uleb128 0x1
 1822 031e 9C       		.byte	0x9c
 1823 031f 59030000 		.4byte	0x359
 1824 0323 1D       		.uleb128 0x1d
 1825 0324 95000000 		.4byte	.LASF29
 1826 0328 01       		.byte	0x1
 1827 0329 9B01     		.2byte	0x19b
 1828 032b B9000000 		.4byte	0xb9
 1829 032f 02       		.uleb128 0x2
 1830 0330 91       		.byte	0x91
 1831 0331 6C       		.sleb128 -20
 1832 0332 17       		.uleb128 0x17
 1833 0333 6900     		.ascii	"i\000"
 1834 0335 01       		.byte	0x1
 1835 0336 9D01     		.2byte	0x19d
 1836 0338 68000000 		.4byte	0x68
 1837 033c 02       		.uleb128 0x2
 1838 033d 91       		.byte	0x91
 1839 033e 74       		.sleb128 -12
 1840 033f 0F       		.uleb128 0xf
 1841 0340 0E000000 		.4byte	.LBB4
 1842 0344 84000000 		.4byte	.LBE4-.LBB4
 1843 0348 16       		.uleb128 0x16
 1844 0349 99030000 		.4byte	.LASF34
 1845 034d 01       		.byte	0x1
 1846 034e 9F01     		.2byte	0x19f
 1847 0350 81000000 		.4byte	0x81
 1848 0354 02       		.uleb128 0x2
 1849 0355 91       		.byte	0x91
 1850 0356 73       		.sleb128 -13
 1851 0357 00       		.byte	0
 1852 0358 00       		.byte	0
 1853 0359 1E       		.uleb128 0x1e
 1854 035a B8010000 		.4byte	.LASF43
 1855 035e 01       		.byte	0x1
 1856 035f BD01     		.2byte	0x1bd
 1857 0361 00000000 		.4byte	.LFB75
 1858 0365 26000000 		.4byte	.LFE75-.LFB75
 1859 0369 01       		.uleb128 0x1
 1860 036a 9C       		.byte	0x9c
 1861 036b 7F030000 		.4byte	0x37f
 1862 036f 1D       		.uleb128 0x1d
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 42


 1863 0370 95000000 		.4byte	.LASF29
 1864 0374 01       		.byte	0x1
 1865 0375 BD01     		.2byte	0x1bd
 1866 0377 B9000000 		.4byte	0xb9
 1867 037b 02       		.uleb128 0x2
 1868 037c 91       		.byte	0x91
 1869 037d 74       		.sleb128 -12
 1870 037e 00       		.byte	0
 1871 037f 1F       		.uleb128 0x1f
 1872 0380 8C030000 		.4byte	.LASF44
 1873 0384 06       		.byte	0x6
 1874 0385 2A06     		.2byte	0x62a
 1875 0387 8B030000 		.4byte	0x38b
 1876 038b 06       		.uleb128 0x6
 1877 038c 76000000 		.4byte	0x76
 1878 0390 10       		.uleb128 0x10
 1879 0391 68000000 		.4byte	0x68
 1880 0395 A1030000 		.4byte	0x3a1
 1881 0399 20       		.uleb128 0x20
 1882 039a B2000000 		.4byte	0xb2
 1883 039e 1F03     		.2byte	0x31f
 1884 03a0 00       		.byte	0
 1885 03a1 21       		.uleb128 0x21
 1886 03a2 3F000000 		.4byte	.LASF45
 1887 03a6 01       		.byte	0x1
 1888 03a7 1A       		.byte	0x1a
 1889 03a8 90030000 		.4byte	0x390
 1890 03ac 05       		.uleb128 0x5
 1891 03ad 03       		.byte	0x3
 1892 03ae 00000000 		.4byte	diffManEncodedData
 1893 03b2 10       		.uleb128 0x10
 1894 03b3 81000000 		.4byte	0x81
 1895 03b7 C2030000 		.4byte	0x3c2
 1896 03bb 11       		.uleb128 0x11
 1897 03bc B2000000 		.4byte	0xb2
 1898 03c0 63       		.byte	0x63
 1899 03c1 00       		.byte	0
 1900 03c2 21       		.uleb128 0x21
 1901 03c3 03030000 		.4byte	.LASF46
 1902 03c7 01       		.byte	0x1
 1903 03c8 1B       		.byte	0x1b
 1904 03c9 B2030000 		.4byte	0x3b2
 1905 03cd 05       		.uleb128 0x5
 1906 03ce 03       		.byte	0x3
 1907 03cf 00000000 		.4byte	diffManReceivedData
 1908 03d3 21       		.uleb128 0x21
 1909 03d4 D4020000 		.4byte	.LASF47
 1910 03d8 01       		.byte	0x1
 1911 03d9 1C       		.byte	0x1c
 1912 03da 68000000 		.4byte	0x68
 1913 03de 05       		.uleb128 0x5
 1914 03df 03       		.byte	0x3
 1915 03e0 00000000 		.4byte	receivedDataIndex
 1916 03e4 21       		.uleb128 0x21
 1917 03e5 BD020000 		.4byte	.LASF48
 1918 03e9 01       		.byte	0x1
 1919 03ea 1C       		.byte	0x1c
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 43


 1920 03eb 68000000 		.4byte	0x68
 1921 03ef 05       		.uleb128 0x5
 1922 03f0 03       		.byte	0x3
 1923 03f1 00000000 		.4byte	receivedDataCount
 1924 03f5 21       		.uleb128 0x21
 1925 03f6 65030000 		.4byte	.LASF49
 1926 03fa 01       		.byte	0x1
 1927 03fb 1D       		.byte	0x1d
 1928 03fc 68000000 		.4byte	0x68
 1929 0400 05       		.uleb128 0x5
 1930 0401 03       		.byte	0x3
 1931 0402 00000000 		.4byte	halfBitIndex
 1932 0406 21       		.uleb128 0x21
 1933 0407 E0010000 		.4byte	.LASF50
 1934 040b 01       		.byte	0x1
 1935 040c 1D       		.byte	0x1d
 1936 040d 68000000 		.4byte	0x68
 1937 0411 05       		.uleb128 0x5
 1938 0412 03       		.byte	0x3
 1939 0413 00000000 		.4byte	currentDataPos
 1940 0417 21       		.uleb128 0x21
 1941 0418 72030000 		.4byte	.LASF51
 1942 041c 01       		.byte	0x1
 1943 041d 1D       		.byte	0x1d
 1944 041e 68000000 		.4byte	0x68
 1945 0422 05       		.uleb128 0x5
 1946 0423 03       		.byte	0x3
 1947 0424 00000000 		.4byte	lengthOfData
 1948 0428 21       		.uleb128 0x21
 1949 0429 A9030000 		.4byte	.LASF52
 1950 042d 01       		.byte	0x1
 1951 042e 1E       		.byte	0x1e
 1952 042f 39040000 		.4byte	0x439
 1953 0433 05       		.uleb128 0x5
 1954 0434 03       		.byte	0x3
 1955 0435 00000000 		.4byte	timerExpired
 1956 0439 02       		.uleb128 0x2
 1957 043a 01       		.byte	0x1
 1958 043b 02       		.byte	0x2
 1959 043c B2020000 		.4byte	.LASF53
 1960 0440 21       		.uleb128 0x21
 1961 0441 17030000 		.4byte	.LASF54
 1962 0445 01       		.byte	0x1
 1963 0446 1E       		.byte	0x1e
 1964 0447 39040000 		.4byte	0x439
 1965 044b 05       		.uleb128 0x5
 1966 044c 03       		.byte	0x3
 1967 044d 00000000 		.4byte	dataTransmissionComplete
 1968 0451 21       		.uleb128 0x21
 1969 0452 B6030000 		.4byte	.LASF55
 1970 0456 01       		.byte	0x1
 1971 0457 1E       		.byte	0x1e
 1972 0458 39040000 		.4byte	0x439
 1973 045c 05       		.uleb128 0x5
 1974 045d 03       		.byte	0x3
 1975 045e 00000000 		.4byte	powerOnEdge
 1976 0462 21       		.uleb128 0x21
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 44


 1977 0463 88000000 		.4byte	.LASF56
 1978 0467 01       		.byte	0x1
 1979 0468 1F       		.byte	0x1f
 1980 0469 CA000000 		.4byte	0xca
 1981 046d 05       		.uleb128 0x5
 1982 046e 03       		.byte	0x3
 1983 046f 00000000 		.4byte	networkState
 1984 0473 21       		.uleb128 0x21
 1985 0474 10010000 		.4byte	.LASF57
 1986 0478 01       		.byte	0x1
 1987 0479 22       		.byte	0x22
 1988 047a 68000000 		.4byte	0x68
 1989 047e 05       		.uleb128 0x5
 1990 047f 03       		.byte	0x3
 1991 0480 00000000 		.4byte	timerInterruptCount
 1992 0484 00       		.byte	0
 1993              		.section	.debug_abbrev,"",%progbits
 1994              	.Ldebug_abbrev0:
 1995 0000 01       		.uleb128 0x1
 1996 0001 11       		.uleb128 0x11
 1997 0002 01       		.byte	0x1
 1998 0003 25       		.uleb128 0x25
 1999 0004 0E       		.uleb128 0xe
 2000 0005 13       		.uleb128 0x13
 2001 0006 0B       		.uleb128 0xb
 2002 0007 03       		.uleb128 0x3
 2003 0008 0E       		.uleb128 0xe
 2004 0009 1B       		.uleb128 0x1b
 2005 000a 0E       		.uleb128 0xe
 2006 000b 55       		.uleb128 0x55
 2007 000c 17       		.uleb128 0x17
 2008 000d 11       		.uleb128 0x11
 2009 000e 01       		.uleb128 0x1
 2010 000f 10       		.uleb128 0x10
 2011 0010 17       		.uleb128 0x17
 2012 0011 00       		.byte	0
 2013 0012 00       		.byte	0
 2014 0013 02       		.uleb128 0x2
 2015 0014 24       		.uleb128 0x24
 2016 0015 00       		.byte	0
 2017 0016 0B       		.uleb128 0xb
 2018 0017 0B       		.uleb128 0xb
 2019 0018 3E       		.uleb128 0x3e
 2020 0019 0B       		.uleb128 0xb
 2021 001a 03       		.uleb128 0x3
 2022 001b 0E       		.uleb128 0xe
 2023 001c 00       		.byte	0
 2024 001d 00       		.byte	0
 2025 001e 03       		.uleb128 0x3
 2026 001f 16       		.uleb128 0x16
 2027 0020 00       		.byte	0
 2028 0021 03       		.uleb128 0x3
 2029 0022 0E       		.uleb128 0xe
 2030 0023 3A       		.uleb128 0x3a
 2031 0024 0B       		.uleb128 0xb
 2032 0025 3B       		.uleb128 0x3b
 2033 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 45


 2034 0027 49       		.uleb128 0x49
 2035 0028 13       		.uleb128 0x13
 2036 0029 00       		.byte	0
 2037 002a 00       		.byte	0
 2038 002b 04       		.uleb128 0x4
 2039 002c 24       		.uleb128 0x24
 2040 002d 00       		.byte	0
 2041 002e 0B       		.uleb128 0xb
 2042 002f 0B       		.uleb128 0xb
 2043 0030 3E       		.uleb128 0x3e
 2044 0031 0B       		.uleb128 0xb
 2045 0032 03       		.uleb128 0x3
 2046 0033 08       		.uleb128 0x8
 2047 0034 00       		.byte	0
 2048 0035 00       		.byte	0
 2049 0036 05       		.uleb128 0x5
 2050 0037 16       		.uleb128 0x16
 2051 0038 00       		.byte	0
 2052 0039 03       		.uleb128 0x3
 2053 003a 0E       		.uleb128 0xe
 2054 003b 3A       		.uleb128 0x3a
 2055 003c 0B       		.uleb128 0xb
 2056 003d 3B       		.uleb128 0x3b
 2057 003e 05       		.uleb128 0x5
 2058 003f 49       		.uleb128 0x49
 2059 0040 13       		.uleb128 0x13
 2060 0041 00       		.byte	0
 2061 0042 00       		.byte	0
 2062 0043 06       		.uleb128 0x6
 2063 0044 35       		.uleb128 0x35
 2064 0045 00       		.byte	0
 2065 0046 49       		.uleb128 0x49
 2066 0047 13       		.uleb128 0x13
 2067 0048 00       		.byte	0
 2068 0049 00       		.byte	0
 2069 004a 07       		.uleb128 0x7
 2070 004b 0F       		.uleb128 0xf
 2071 004c 00       		.byte	0
 2072 004d 0B       		.uleb128 0xb
 2073 004e 0B       		.uleb128 0xb
 2074 004f 49       		.uleb128 0x49
 2075 0050 13       		.uleb128 0x13
 2076 0051 00       		.byte	0
 2077 0052 00       		.byte	0
 2078 0053 08       		.uleb128 0x8
 2079 0054 04       		.uleb128 0x4
 2080 0055 01       		.byte	0x1
 2081 0056 03       		.uleb128 0x3
 2082 0057 0E       		.uleb128 0xe
 2083 0058 0B       		.uleb128 0xb
 2084 0059 0B       		.uleb128 0xb
 2085 005a 3A       		.uleb128 0x3a
 2086 005b 0B       		.uleb128 0xb
 2087 005c 3B       		.uleb128 0x3b
 2088 005d 0B       		.uleb128 0xb
 2089 005e 01       		.uleb128 0x1
 2090 005f 13       		.uleb128 0x13
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 46


 2091 0060 00       		.byte	0
 2092 0061 00       		.byte	0
 2093 0062 09       		.uleb128 0x9
 2094 0063 28       		.uleb128 0x28
 2095 0064 00       		.byte	0
 2096 0065 03       		.uleb128 0x3
 2097 0066 0E       		.uleb128 0xe
 2098 0067 1C       		.uleb128 0x1c
 2099 0068 0D       		.uleb128 0xd
 2100 0069 00       		.byte	0
 2101 006a 00       		.byte	0
 2102 006b 0A       		.uleb128 0xa
 2103 006c 2E       		.uleb128 0x2e
 2104 006d 00       		.byte	0
 2105 006e 3F       		.uleb128 0x3f
 2106 006f 19       		.uleb128 0x19
 2107 0070 03       		.uleb128 0x3
 2108 0071 0E       		.uleb128 0xe
 2109 0072 3A       		.uleb128 0x3a
 2110 0073 0B       		.uleb128 0xb
 2111 0074 3B       		.uleb128 0x3b
 2112 0075 0B       		.uleb128 0xb
 2113 0076 27       		.uleb128 0x27
 2114 0077 19       		.uleb128 0x19
 2115 0078 11       		.uleb128 0x11
 2116 0079 01       		.uleb128 0x1
 2117 007a 12       		.uleb128 0x12
 2118 007b 06       		.uleb128 0x6
 2119 007c 40       		.uleb128 0x40
 2120 007d 18       		.uleb128 0x18
 2121 007e 9642     		.uleb128 0x2116
 2122 0080 19       		.uleb128 0x19
 2123 0081 00       		.byte	0
 2124 0082 00       		.byte	0
 2125 0083 0B       		.uleb128 0xb
 2126 0084 2E       		.uleb128 0x2e
 2127 0085 00       		.byte	0
 2128 0086 3F       		.uleb128 0x3f
 2129 0087 19       		.uleb128 0x19
 2130 0088 03       		.uleb128 0x3
 2131 0089 0E       		.uleb128 0xe
 2132 008a 3A       		.uleb128 0x3a
 2133 008b 0B       		.uleb128 0xb
 2134 008c 3B       		.uleb128 0x3b
 2135 008d 0B       		.uleb128 0xb
 2136 008e 27       		.uleb128 0x27
 2137 008f 19       		.uleb128 0x19
 2138 0090 11       		.uleb128 0x11
 2139 0091 01       		.uleb128 0x1
 2140 0092 12       		.uleb128 0x12
 2141 0093 06       		.uleb128 0x6
 2142 0094 40       		.uleb128 0x40
 2143 0095 18       		.uleb128 0x18
 2144 0096 9742     		.uleb128 0x2117
 2145 0098 19       		.uleb128 0x19
 2146 0099 00       		.byte	0
 2147 009a 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 47


 2148 009b 0C       		.uleb128 0xc
 2149 009c 2E       		.uleb128 0x2e
 2150 009d 01       		.byte	0x1
 2151 009e 3F       		.uleb128 0x3f
 2152 009f 19       		.uleb128 0x19
 2153 00a0 03       		.uleb128 0x3
 2154 00a1 0E       		.uleb128 0xe
 2155 00a2 3A       		.uleb128 0x3a
 2156 00a3 0B       		.uleb128 0xb
 2157 00a4 3B       		.uleb128 0x3b
 2158 00a5 0B       		.uleb128 0xb
 2159 00a6 49       		.uleb128 0x49
 2160 00a7 13       		.uleb128 0x13
 2161 00a8 11       		.uleb128 0x11
 2162 00a9 01       		.uleb128 0x1
 2163 00aa 12       		.uleb128 0x12
 2164 00ab 06       		.uleb128 0x6
 2165 00ac 40       		.uleb128 0x40
 2166 00ad 18       		.uleb128 0x18
 2167 00ae 9642     		.uleb128 0x2116
 2168 00b0 19       		.uleb128 0x19
 2169 00b1 01       		.uleb128 0x1
 2170 00b2 13       		.uleb128 0x13
 2171 00b3 00       		.byte	0
 2172 00b4 00       		.byte	0
 2173 00b5 0D       		.uleb128 0xd
 2174 00b6 34       		.uleb128 0x34
 2175 00b7 00       		.byte	0
 2176 00b8 03       		.uleb128 0x3
 2177 00b9 08       		.uleb128 0x8
 2178 00ba 3A       		.uleb128 0x3a
 2179 00bb 0B       		.uleb128 0xb
 2180 00bc 3B       		.uleb128 0x3b
 2181 00bd 0B       		.uleb128 0xb
 2182 00be 49       		.uleb128 0x49
 2183 00bf 13       		.uleb128 0x13
 2184 00c0 02       		.uleb128 0x2
 2185 00c1 18       		.uleb128 0x18
 2186 00c2 00       		.byte	0
 2187 00c3 00       		.byte	0
 2188 00c4 0E       		.uleb128 0xe
 2189 00c5 34       		.uleb128 0x34
 2190 00c6 00       		.byte	0
 2191 00c7 03       		.uleb128 0x3
 2192 00c8 0E       		.uleb128 0xe
 2193 00c9 3A       		.uleb128 0x3a
 2194 00ca 0B       		.uleb128 0xb
 2195 00cb 3B       		.uleb128 0x3b
 2196 00cc 0B       		.uleb128 0xb
 2197 00cd 49       		.uleb128 0x49
 2198 00ce 13       		.uleb128 0x13
 2199 00cf 02       		.uleb128 0x2
 2200 00d0 18       		.uleb128 0x18
 2201 00d1 00       		.byte	0
 2202 00d2 00       		.byte	0
 2203 00d3 0F       		.uleb128 0xf
 2204 00d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 48


 2205 00d5 01       		.byte	0x1
 2206 00d6 11       		.uleb128 0x11
 2207 00d7 01       		.uleb128 0x1
 2208 00d8 12       		.uleb128 0x12
 2209 00d9 06       		.uleb128 0x6
 2210 00da 00       		.byte	0
 2211 00db 00       		.byte	0
 2212 00dc 10       		.uleb128 0x10
 2213 00dd 01       		.uleb128 0x1
 2214 00de 01       		.byte	0x1
 2215 00df 49       		.uleb128 0x49
 2216 00e0 13       		.uleb128 0x13
 2217 00e1 01       		.uleb128 0x1
 2218 00e2 13       		.uleb128 0x13
 2219 00e3 00       		.byte	0
 2220 00e4 00       		.byte	0
 2221 00e5 11       		.uleb128 0x11
 2222 00e6 21       		.uleb128 0x21
 2223 00e7 00       		.byte	0
 2224 00e8 49       		.uleb128 0x49
 2225 00e9 13       		.uleb128 0x13
 2226 00ea 2F       		.uleb128 0x2f
 2227 00eb 0B       		.uleb128 0xb
 2228 00ec 00       		.byte	0
 2229 00ed 00       		.byte	0
 2230 00ee 12       		.uleb128 0x12
 2231 00ef 2E       		.uleb128 0x2e
 2232 00f0 00       		.byte	0
 2233 00f1 3F       		.uleb128 0x3f
 2234 00f2 19       		.uleb128 0x19
 2235 00f3 03       		.uleb128 0x3
 2236 00f4 0E       		.uleb128 0xe
 2237 00f5 3A       		.uleb128 0x3a
 2238 00f6 0B       		.uleb128 0xb
 2239 00f7 3B       		.uleb128 0x3b
 2240 00f8 0B       		.uleb128 0xb
 2241 00f9 11       		.uleb128 0x11
 2242 00fa 01       		.uleb128 0x1
 2243 00fb 12       		.uleb128 0x12
 2244 00fc 06       		.uleb128 0x6
 2245 00fd 40       		.uleb128 0x40
 2246 00fe 18       		.uleb128 0x18
 2247 00ff 9742     		.uleb128 0x2117
 2248 0101 19       		.uleb128 0x19
 2249 0102 00       		.byte	0
 2250 0103 00       		.byte	0
 2251 0104 13       		.uleb128 0x13
 2252 0105 2E       		.uleb128 0x2e
 2253 0106 01       		.byte	0x1
 2254 0107 3F       		.uleb128 0x3f
 2255 0108 19       		.uleb128 0x19
 2256 0109 03       		.uleb128 0x3
 2257 010a 0E       		.uleb128 0xe
 2258 010b 3A       		.uleb128 0x3a
 2259 010c 0B       		.uleb128 0xb
 2260 010d 3B       		.uleb128 0x3b
 2261 010e 0B       		.uleb128 0xb
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 49


 2262 010f 27       		.uleb128 0x27
 2263 0110 19       		.uleb128 0x19
 2264 0111 11       		.uleb128 0x11
 2265 0112 01       		.uleb128 0x1
 2266 0113 12       		.uleb128 0x12
 2267 0114 06       		.uleb128 0x6
 2268 0115 40       		.uleb128 0x40
 2269 0116 18       		.uleb128 0x18
 2270 0117 9642     		.uleb128 0x2116
 2271 0119 19       		.uleb128 0x19
 2272 011a 01       		.uleb128 0x1
 2273 011b 13       		.uleb128 0x13
 2274 011c 00       		.byte	0
 2275 011d 00       		.byte	0
 2276 011e 14       		.uleb128 0x14
 2277 011f 05       		.uleb128 0x5
 2278 0120 00       		.byte	0
 2279 0121 03       		.uleb128 0x3
 2280 0122 0E       		.uleb128 0xe
 2281 0123 3A       		.uleb128 0x3a
 2282 0124 0B       		.uleb128 0xb
 2283 0125 3B       		.uleb128 0x3b
 2284 0126 0B       		.uleb128 0xb
 2285 0127 49       		.uleb128 0x49
 2286 0128 13       		.uleb128 0x13
 2287 0129 02       		.uleb128 0x2
 2288 012a 18       		.uleb128 0x18
 2289 012b 00       		.byte	0
 2290 012c 00       		.byte	0
 2291 012d 15       		.uleb128 0x15
 2292 012e 2E       		.uleb128 0x2e
 2293 012f 01       		.byte	0x1
 2294 0130 3F       		.uleb128 0x3f
 2295 0131 19       		.uleb128 0x19
 2296 0132 03       		.uleb128 0x3
 2297 0133 0E       		.uleb128 0xe
 2298 0134 3A       		.uleb128 0x3a
 2299 0135 0B       		.uleb128 0xb
 2300 0136 3B       		.uleb128 0x3b
 2301 0137 0B       		.uleb128 0xb
 2302 0138 27       		.uleb128 0x27
 2303 0139 19       		.uleb128 0x19
 2304 013a 11       		.uleb128 0x11
 2305 013b 01       		.uleb128 0x1
 2306 013c 12       		.uleb128 0x12
 2307 013d 06       		.uleb128 0x6
 2308 013e 40       		.uleb128 0x40
 2309 013f 18       		.uleb128 0x18
 2310 0140 9742     		.uleb128 0x2117
 2311 0142 19       		.uleb128 0x19
 2312 0143 01       		.uleb128 0x1
 2313 0144 13       		.uleb128 0x13
 2314 0145 00       		.byte	0
 2315 0146 00       		.byte	0
 2316 0147 16       		.uleb128 0x16
 2317 0148 34       		.uleb128 0x34
 2318 0149 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 50


 2319 014a 03       		.uleb128 0x3
 2320 014b 0E       		.uleb128 0xe
 2321 014c 3A       		.uleb128 0x3a
 2322 014d 0B       		.uleb128 0xb
 2323 014e 3B       		.uleb128 0x3b
 2324 014f 05       		.uleb128 0x5
 2325 0150 49       		.uleb128 0x49
 2326 0151 13       		.uleb128 0x13
 2327 0152 02       		.uleb128 0x2
 2328 0153 18       		.uleb128 0x18
 2329 0154 00       		.byte	0
 2330 0155 00       		.byte	0
 2331 0156 17       		.uleb128 0x17
 2332 0157 34       		.uleb128 0x34
 2333 0158 00       		.byte	0
 2334 0159 03       		.uleb128 0x3
 2335 015a 08       		.uleb128 0x8
 2336 015b 3A       		.uleb128 0x3a
 2337 015c 0B       		.uleb128 0xb
 2338 015d 3B       		.uleb128 0x3b
 2339 015e 05       		.uleb128 0x5
 2340 015f 49       		.uleb128 0x49
 2341 0160 13       		.uleb128 0x13
 2342 0161 02       		.uleb128 0x2
 2343 0162 18       		.uleb128 0x18
 2344 0163 00       		.byte	0
 2345 0164 00       		.byte	0
 2346 0165 18       		.uleb128 0x18
 2347 0166 2E       		.uleb128 0x2e
 2348 0167 01       		.byte	0x1
 2349 0168 3F       		.uleb128 0x3f
 2350 0169 19       		.uleb128 0x19
 2351 016a 03       		.uleb128 0x3
 2352 016b 0E       		.uleb128 0xe
 2353 016c 3A       		.uleb128 0x3a
 2354 016d 0B       		.uleb128 0xb
 2355 016e 3B       		.uleb128 0x3b
 2356 016f 05       		.uleb128 0x5
 2357 0170 11       		.uleb128 0x11
 2358 0171 01       		.uleb128 0x1
 2359 0172 12       		.uleb128 0x12
 2360 0173 06       		.uleb128 0x6
 2361 0174 40       		.uleb128 0x40
 2362 0175 18       		.uleb128 0x18
 2363 0176 9642     		.uleb128 0x2116
 2364 0178 19       		.uleb128 0x19
 2365 0179 01       		.uleb128 0x1
 2366 017a 13       		.uleb128 0x13
 2367 017b 00       		.byte	0
 2368 017c 00       		.byte	0
 2369 017d 19       		.uleb128 0x19
 2370 017e 2E       		.uleb128 0x2e
 2371 017f 00       		.byte	0
 2372 0180 3F       		.uleb128 0x3f
 2373 0181 19       		.uleb128 0x19
 2374 0182 03       		.uleb128 0x3
 2375 0183 0E       		.uleb128 0xe
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 51


 2376 0184 3A       		.uleb128 0x3a
 2377 0185 0B       		.uleb128 0xb
 2378 0186 3B       		.uleb128 0x3b
 2379 0187 05       		.uleb128 0x5
 2380 0188 11       		.uleb128 0x11
 2381 0189 01       		.uleb128 0x1
 2382 018a 12       		.uleb128 0x12
 2383 018b 06       		.uleb128 0x6
 2384 018c 40       		.uleb128 0x40
 2385 018d 18       		.uleb128 0x18
 2386 018e 9642     		.uleb128 0x2116
 2387 0190 19       		.uleb128 0x19
 2388 0191 00       		.byte	0
 2389 0192 00       		.byte	0
 2390 0193 1A       		.uleb128 0x1a
 2391 0194 2E       		.uleb128 0x2e
 2392 0195 01       		.byte	0x1
 2393 0196 3F       		.uleb128 0x3f
 2394 0197 19       		.uleb128 0x19
 2395 0198 03       		.uleb128 0x3
 2396 0199 0E       		.uleb128 0xe
 2397 019a 3A       		.uleb128 0x3a
 2398 019b 0B       		.uleb128 0xb
 2399 019c 3B       		.uleb128 0x3b
 2400 019d 05       		.uleb128 0x5
 2401 019e 49       		.uleb128 0x49
 2402 019f 13       		.uleb128 0x13
 2403 01a0 11       		.uleb128 0x11
 2404 01a1 01       		.uleb128 0x1
 2405 01a2 12       		.uleb128 0x12
 2406 01a3 06       		.uleb128 0x6
 2407 01a4 40       		.uleb128 0x40
 2408 01a5 18       		.uleb128 0x18
 2409 01a6 9642     		.uleb128 0x2116
 2410 01a8 19       		.uleb128 0x19
 2411 01a9 01       		.uleb128 0x1
 2412 01aa 13       		.uleb128 0x13
 2413 01ab 00       		.byte	0
 2414 01ac 00       		.byte	0
 2415 01ad 1B       		.uleb128 0x1b
 2416 01ae 26       		.uleb128 0x26
 2417 01af 00       		.byte	0
 2418 01b0 49       		.uleb128 0x49
 2419 01b1 13       		.uleb128 0x13
 2420 01b2 00       		.byte	0
 2421 01b3 00       		.byte	0
 2422 01b4 1C       		.uleb128 0x1c
 2423 01b5 2E       		.uleb128 0x2e
 2424 01b6 01       		.byte	0x1
 2425 01b7 3F       		.uleb128 0x3f
 2426 01b8 19       		.uleb128 0x19
 2427 01b9 03       		.uleb128 0x3
 2428 01ba 0E       		.uleb128 0xe
 2429 01bb 3A       		.uleb128 0x3a
 2430 01bc 0B       		.uleb128 0xb
 2431 01bd 3B       		.uleb128 0x3b
 2432 01be 05       		.uleb128 0x5
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 52


 2433 01bf 27       		.uleb128 0x27
 2434 01c0 19       		.uleb128 0x19
 2435 01c1 11       		.uleb128 0x11
 2436 01c2 01       		.uleb128 0x1
 2437 01c3 12       		.uleb128 0x12
 2438 01c4 06       		.uleb128 0x6
 2439 01c5 40       		.uleb128 0x40
 2440 01c6 18       		.uleb128 0x18
 2441 01c7 9742     		.uleb128 0x2117
 2442 01c9 19       		.uleb128 0x19
 2443 01ca 01       		.uleb128 0x1
 2444 01cb 13       		.uleb128 0x13
 2445 01cc 00       		.byte	0
 2446 01cd 00       		.byte	0
 2447 01ce 1D       		.uleb128 0x1d
 2448 01cf 05       		.uleb128 0x5
 2449 01d0 00       		.byte	0
 2450 01d1 03       		.uleb128 0x3
 2451 01d2 0E       		.uleb128 0xe
 2452 01d3 3A       		.uleb128 0x3a
 2453 01d4 0B       		.uleb128 0xb
 2454 01d5 3B       		.uleb128 0x3b
 2455 01d6 05       		.uleb128 0x5
 2456 01d7 49       		.uleb128 0x49
 2457 01d8 13       		.uleb128 0x13
 2458 01d9 02       		.uleb128 0x2
 2459 01da 18       		.uleb128 0x18
 2460 01db 00       		.byte	0
 2461 01dc 00       		.byte	0
 2462 01dd 1E       		.uleb128 0x1e
 2463 01de 2E       		.uleb128 0x2e
 2464 01df 01       		.byte	0x1
 2465 01e0 3F       		.uleb128 0x3f
 2466 01e1 19       		.uleb128 0x19
 2467 01e2 03       		.uleb128 0x3
 2468 01e3 0E       		.uleb128 0xe
 2469 01e4 3A       		.uleb128 0x3a
 2470 01e5 0B       		.uleb128 0xb
 2471 01e6 3B       		.uleb128 0x3b
 2472 01e7 05       		.uleb128 0x5
 2473 01e8 27       		.uleb128 0x27
 2474 01e9 19       		.uleb128 0x19
 2475 01ea 11       		.uleb128 0x11
 2476 01eb 01       		.uleb128 0x1
 2477 01ec 12       		.uleb128 0x12
 2478 01ed 06       		.uleb128 0x6
 2479 01ee 40       		.uleb128 0x40
 2480 01ef 18       		.uleb128 0x18
 2481 01f0 9642     		.uleb128 0x2116
 2482 01f2 19       		.uleb128 0x19
 2483 01f3 01       		.uleb128 0x1
 2484 01f4 13       		.uleb128 0x13
 2485 01f5 00       		.byte	0
 2486 01f6 00       		.byte	0
 2487 01f7 1F       		.uleb128 0x1f
 2488 01f8 34       		.uleb128 0x34
 2489 01f9 00       		.byte	0
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 53


 2490 01fa 03       		.uleb128 0x3
 2491 01fb 0E       		.uleb128 0xe
 2492 01fc 3A       		.uleb128 0x3a
 2493 01fd 0B       		.uleb128 0xb
 2494 01fe 3B       		.uleb128 0x3b
 2495 01ff 05       		.uleb128 0x5
 2496 0200 49       		.uleb128 0x49
 2497 0201 13       		.uleb128 0x13
 2498 0202 3F       		.uleb128 0x3f
 2499 0203 19       		.uleb128 0x19
 2500 0204 3C       		.uleb128 0x3c
 2501 0205 19       		.uleb128 0x19
 2502 0206 00       		.byte	0
 2503 0207 00       		.byte	0
 2504 0208 20       		.uleb128 0x20
 2505 0209 21       		.uleb128 0x21
 2506 020a 00       		.byte	0
 2507 020b 49       		.uleb128 0x49
 2508 020c 13       		.uleb128 0x13
 2509 020d 2F       		.uleb128 0x2f
 2510 020e 05       		.uleb128 0x5
 2511 020f 00       		.byte	0
 2512 0210 00       		.byte	0
 2513 0211 21       		.uleb128 0x21
 2514 0212 34       		.uleb128 0x34
 2515 0213 00       		.byte	0
 2516 0214 03       		.uleb128 0x3
 2517 0215 0E       		.uleb128 0xe
 2518 0216 3A       		.uleb128 0x3a
 2519 0217 0B       		.uleb128 0xb
 2520 0218 3B       		.uleb128 0x3b
 2521 0219 0B       		.uleb128 0xb
 2522 021a 49       		.uleb128 0x49
 2523 021b 13       		.uleb128 0x13
 2524 021c 3F       		.uleb128 0x3f
 2525 021d 19       		.uleb128 0x19
 2526 021e 02       		.uleb128 0x2
 2527 021f 18       		.uleb128 0x18
 2528 0220 00       		.byte	0
 2529 0221 00       		.byte	0
 2530 0222 00       		.byte	0
 2531              		.section	.debug_aranges,"",%progbits
 2532 0000 7C000000 		.4byte	0x7c
 2533 0004 0200     		.2byte	0x2
 2534 0006 00000000 		.4byte	.Ldebug_info0
 2535 000a 04       		.byte	0x4
 2536 000b 00       		.byte	0
 2537 000c 0000     		.2byte	0
 2538 000e 0000     		.2byte	0
 2539 0010 00000000 		.4byte	.LFB63
 2540 0014 28000000 		.4byte	.LFE63-.LFB63
 2541 0018 00000000 		.4byte	.LFB64
 2542 001c 58000000 		.4byte	.LFE64-.LFB64
 2543 0020 00000000 		.4byte	.LFB65
 2544 0024 1C000000 		.4byte	.LFE65-.LFB65
 2545 0028 00000000 		.4byte	.LFB66
 2546 002c 38000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 54


 2547 0030 00000000 		.4byte	.LFB67
 2548 0034 24020000 		.4byte	.LFE67-.LFB67
 2549 0038 00000000 		.4byte	.LFB68
 2550 003c 48000000 		.4byte	.LFE68-.LFB68
 2551 0040 00000000 		.4byte	.LFB69
 2552 0044 38000000 		.4byte	.LFE69-.LFB69
 2553 0048 00000000 		.4byte	.LFB70
 2554 004c C4010000 		.4byte	.LFE70-.LFB70
 2555 0050 00000000 		.4byte	.LFB71
 2556 0054 D8000000 		.4byte	.LFE71-.LFB71
 2557 0058 00000000 		.4byte	.LFB72
 2558 005c 58000000 		.4byte	.LFE72-.LFB72
 2559 0060 00000000 		.4byte	.LFB73
 2560 0064 36000000 		.4byte	.LFE73-.LFB73
 2561 0068 00000000 		.4byte	.LFB74
 2562 006c B0000000 		.4byte	.LFE74-.LFB74
 2563 0070 00000000 		.4byte	.LFB75
 2564 0074 26000000 		.4byte	.LFE75-.LFB75
 2565 0078 00000000 		.4byte	0
 2566 007c 00000000 		.4byte	0
 2567              		.section	.debug_ranges,"",%progbits
 2568              	.Ldebug_ranges0:
 2569 0000 00000000 		.4byte	.LFB63
 2570 0004 28000000 		.4byte	.LFE63
 2571 0008 00000000 		.4byte	.LFB64
 2572 000c 58000000 		.4byte	.LFE64
 2573 0010 00000000 		.4byte	.LFB65
 2574 0014 1C000000 		.4byte	.LFE65
 2575 0018 00000000 		.4byte	.LFB66
 2576 001c 38000000 		.4byte	.LFE66
 2577 0020 00000000 		.4byte	.LFB67
 2578 0024 24020000 		.4byte	.LFE67
 2579 0028 00000000 		.4byte	.LFB68
 2580 002c 48000000 		.4byte	.LFE68
 2581 0030 00000000 		.4byte	.LFB69
 2582 0034 38000000 		.4byte	.LFE69
 2583 0038 00000000 		.4byte	.LFB70
 2584 003c C4010000 		.4byte	.LFE70
 2585 0040 00000000 		.4byte	.LFB71
 2586 0044 D8000000 		.4byte	.LFE71
 2587 0048 00000000 		.4byte	.LFB72
 2588 004c 58000000 		.4byte	.LFE72
 2589 0050 00000000 		.4byte	.LFB73
 2590 0054 36000000 		.4byte	.LFE73
 2591 0058 00000000 		.4byte	.LFB74
 2592 005c B0000000 		.4byte	.LFE74
 2593 0060 00000000 		.4byte	.LFB75
 2594 0064 26000000 		.4byte	.LFE75
 2595 0068 00000000 		.4byte	0
 2596 006c 00000000 		.4byte	0
 2597              		.section	.debug_line,"",%progbits
 2598              	.Ldebug_line0:
 2599 0000 D5030000 		.section	.debug_str,"MS",%progbits,1
 2599      0200AE01 
 2599      00000201 
 2599      FB0E0D00 
 2599      01010101 
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 55


 2600              	.LASF62:
 2601 0000 7472616E 		.ascii	"transmitData\000"
 2601      736D6974 
 2601      44617461 
 2601      00
 2602              	.LASF21:
 2603 000d 49646C65 		.ascii	"Idle_Collision_ISR\000"
 2603      5F436F6C 
 2603      6C697369 
 2603      6F6E5F49 
 2603      535200
 2604              	.LASF61:
 2605 0020 73746174 		.ascii	"state\000"
 2605      6500
 2606              	.LASF39:
 2607 0026 67657452 		.ascii	"getRandomNumber\000"
 2607      616E646F 
 2607      6D4E756D 
 2607      62657200 
 2608              	.LASF16:
 2609 0036 73697A65 		.ascii	"sizetype\000"
 2609      74797065 
 2609      00
 2610              	.LASF45:
 2611 003f 64696666 		.ascii	"diffManEncodedData\000"
 2611      4D616E45 
 2611      6E636F64 
 2611      65644461 
 2611      746100
 2612              	.LASF30:
 2613 0052 6D61696E 		.ascii	"main\000"
 2613      00
 2614              	.LASF22:
 2615 0057 45646765 		.ascii	"Edge_detect_ISR\000"
 2615      5F646574 
 2615      6563745F 
 2615      49535200 
 2616              	.LASF2:
 2617 0067 73686F72 		.ascii	"short int\000"
 2617      7420696E 
 2617      7400
 2618              	.LASF36:
 2619 0071 76616C75 		.ascii	"value\000"
 2619      6500
 2620              	.LASF20:
 2621 0077 636F6C6C 		.ascii	"collision\000"
 2621      6973696F 
 2621      6E00
 2622              	.LASF17:
 2623 0081 74696D65 		.ascii	"time_t\000"
 2623      5F7400
 2624              	.LASF56:
 2625 0088 6E657477 		.ascii	"networkState\000"
 2625      6F726B53 
 2625      74617465 
 2625      00
 2626              	.LASF29:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 56


 2627 0095 63686172 		.ascii	"charPtr\000"
 2627      50747200 
 2628              	.LASF11:
 2629 009d 75696E74 		.ascii	"uint8\000"
 2629      3800
 2630              	.LASF25:
 2631 00a3 6C696E65 		.ascii	"lineString\000"
 2631      53747269 
 2631      6E6700
 2632              	.LASF60:
 2633 00ae 443A5C4D 		.ascii	"D:\\MyDocs\\Documents\\CE4950\\USB_UART01\\USB_UART"
 2633      79446F63 
 2633      735C446F 
 2633      63756D65 
 2633      6E74735C 
 2634 00dc 30312E63 		.ascii	"01.cydsn\000"
 2634      7964736E 
 2634      00
 2635              	.LASF12:
 2636 00e5 666C6F61 		.ascii	"float\000"
 2636      7400
 2637              	.LASF6:
 2638 00eb 6C6F6E67 		.ascii	"long long int\000"
 2638      206C6F6E 
 2638      6720696E 
 2638      7400
 2639              	.LASF7:
 2640 00f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 2640      206C6F6E 
 2640      6720756E 
 2640      7369676E 
 2640      65642069 
 2641              	.LASF57:
 2642 0110 74696D65 		.ascii	"timerInterruptCount\000"
 2642      72496E74 
 2642      65727275 
 2642      7074436F 
 2642      756E7400 
 2643              	.LASF58:
 2644 0124 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2644      4320342E 
 2644      392E3320 
 2644      32303135 
 2644      30333033 
 2645 0157 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2645      20726576 
 2645      6973696F 
 2645      6E203232 
 2645      31323230 
 2646 018a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2646      66756E63 
 2646      74696F6E 
 2646      2D736563 
 2646      74696F6E 
 2647              	.LASF41:
 2648 01b2 4D41585F 		.ascii	"MAX_N\000"
 2648      4E00
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 57


 2649              	.LASF43:
 2650 01b8 7072696E 		.ascii	"printChar\000"
 2650      74436861 
 2650      7200
 2651              	.LASF31:
 2652 01c2 73747269 		.ascii	"stringToDiffMan\000"
 2652      6E67546F 
 2652      44696666 
 2652      4D616E00 
 2653              	.LASF1:
 2654 01d2 756E7369 		.ascii	"unsigned char\000"
 2654      676E6564 
 2654      20636861 
 2654      7200
 2655              	.LASF50:
 2656 01e0 63757272 		.ascii	"currentDataPos\000"
 2656      656E7444 
 2656      61746150 
 2656      6F7300
 2657              	.LASF37:
 2658 01ef 696E6974 		.ascii	"initDiffManEncodedArray\000"
 2658      44696666 
 2658      4D616E45 
 2658      6E636F64 
 2658      65644172 
 2659              	.LASF0:
 2660 0207 7369676E 		.ascii	"signed char\000"
 2660      65642063 
 2660      68617200 
 2661              	.LASF32:
 2662 0213 61736369 		.ascii	"asciiToDiffMan\000"
 2662      69546F44 
 2662      6966664D 
 2662      616E00
 2663              	.LASF18:
 2664 0222 69646C65 		.ascii	"idle\000"
 2664      00
 2665              	.LASF42:
 2666 0227 64696666 		.ascii	"diffManToASCII\000"
 2666      4D616E54 
 2666      6F415343 
 2666      494900
 2667              	.LASF8:
 2668 0236 756E7369 		.ascii	"unsigned int\000"
 2668      676E6564 
 2668      20696E74 
 2668      00
 2669              	.LASF5:
 2670 0243 6C6F6E67 		.ascii	"long unsigned int\000"
 2670      20756E73 
 2670      69676E65 
 2670      6420696E 
 2670      7400
 2671              	.LASF40:
 2672 0255 4D494E5F 		.ascii	"MIN_N\000"
 2672      4E00
 2673              	.LASF33:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 58


 2674 025b 61736369 		.ascii	"asciiChar\000"
 2674      69436861 
 2674      7200
 2675              	.LASF14:
 2676 0265 63686172 		.ascii	"char\000"
 2676      00
 2677              	.LASF28:
 2678 026a 72656365 		.ascii	"receivedChar\000"
 2678      69766564 
 2678      43686172 
 2678      00
 2679              	.LASF4:
 2680 0277 6C6F6E67 		.ascii	"long int\000"
 2680      20696E74 
 2680      00
 2681              	.LASF26:
 2682 0280 73747269 		.ascii	"stringPosition\000"
 2682      6E67506F 
 2682      73697469 
 2682      6F6E00
 2683              	.LASF10:
 2684 028f 696E7433 		.ascii	"int32_t\000"
 2684      325F7400 
 2685              	.LASF3:
 2686 0297 73686F72 		.ascii	"short unsigned int\000"
 2686      7420756E 
 2686      7369676E 
 2686      65642069 
 2686      6E7400
 2687              	.LASF27:
 2688 02aa 7365636F 		.ascii	"seconds\000"
 2688      6E647300 
 2689              	.LASF53:
 2690 02b2 5F426F6F 		.ascii	"_Bool\000"
 2690      6C00
 2691              	.LASF19:
 2692 02b8 62757379 		.ascii	"busy\000"
 2692      00
 2693              	.LASF48:
 2694 02bd 72656365 		.ascii	"receivedDataCount\000"
 2694      69766564 
 2694      44617461 
 2694      436F756E 
 2694      7400
 2695              	.LASF15:
 2696 02cf 72656738 		.ascii	"reg8\000"
 2696      00
 2697              	.LASF47:
 2698 02d4 72656365 		.ascii	"receivedDataIndex\000"
 2698      69766564 
 2698      44617461 
 2698      496E6465 
 2698      7800
 2699              	.LASF13:
 2700 02e6 646F7562 		.ascii	"double\000"
 2700      6C6500
 2701              	.LASF38:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 59


 2702 02ed 7365744E 		.ascii	"setNetworkStateOnLEDs\000"
 2702      6574776F 
 2702      726B5374 
 2702      6174654F 
 2702      6E4C4544 
 2703              	.LASF46:
 2704 0303 64696666 		.ascii	"diffManReceivedData\000"
 2704      4D616E52 
 2704      65636569 
 2704      76656444 
 2704      61746100 
 2705              	.LASF54:
 2706 0317 64617461 		.ascii	"dataTransmissionComplete\000"
 2706      5472616E 
 2706      736D6973 
 2706      73696F6E 
 2706      436F6D70 
 2707              	.LASF24:
 2708 0330 52656365 		.ascii	"ReceiveTimerISR\000"
 2708      69766554 
 2708      696D6572 
 2708      49535200 
 2709              	.LASF35:
 2710 0340 62696E61 		.ascii	"binaryValueOfChar\000"
 2710      72795661 
 2710      6C75654F 
 2710      66436861 
 2710      7200
 2711              	.LASF59:
 2712 0352 2E5C6D61 		.ascii	".\\main.c\000"
 2712      696E2E63 
 2712      00
 2713              	.LASF9:
 2714 035b 5F5F696E 		.ascii	"__int32_t\000"
 2714      7433325F 
 2714      7400
 2715              	.LASF49:
 2716 0365 68616C66 		.ascii	"halfBitIndex\000"
 2716      42697449 
 2716      6E646578 
 2716      00
 2717              	.LASF51:
 2718 0372 6C656E67 		.ascii	"lengthOfData\000"
 2718      74684F66 
 2718      44617461 
 2718      00
 2719              	.LASF23:
 2720 037f 54696D65 		.ascii	"TimerHandler\000"
 2720      7248616E 
 2720      646C6572 
 2720      00
 2721              	.LASF44:
 2722 038c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2722      52784275 
 2722      66666572 
 2722      00
 2723              	.LASF34:
ARM GAS  C:\Users\mrowiecn\AppData\Local\Temp\ccGUeYld.s 			page 60


 2724 0399 70726576 		.ascii	"previousHalfBit\000"
 2724      696F7573 
 2724      48616C66 
 2724      42697400 
 2725              	.LASF52:
 2726 03a9 74696D65 		.ascii	"timerExpired\000"
 2726      72457870 
 2726      69726564 
 2726      00
 2727              	.LASF55:
 2728 03b6 706F7765 		.ascii	"powerOnEdge\000"
 2728      724F6E45 
 2728      64676500 
 2729              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
